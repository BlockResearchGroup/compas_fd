Search.setIndex({"docnames": ["api", "api/compas_fd", "api/compas_fd.constraints", "api/compas_fd.datastructures", "api/compas_fd.loads", "api/compas_fd.solvers", "api/generated/compas_fd.constraints.CircleConstraint", "api/generated/compas_fd.constraints.CircleConstraint.ToString", "api/generated/compas_fd.constraints.CircleConstraint.compute_normal", "api/generated/compas_fd.constraints.CircleConstraint.compute_param", "api/generated/compas_fd.constraints.CircleConstraint.compute_tangent", "api/generated/compas_fd.constraints.CircleConstraint.copy", "api/generated/compas_fd.constraints.CircleConstraint.from_json", "api/generated/compas_fd.constraints.CircleConstraint.from_jsonstring", "api/generated/compas_fd.constraints.CircleConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.CircleConstraint.project", "api/generated/compas_fd.constraints.CircleConstraint.register", "api/generated/compas_fd.constraints.CircleConstraint.sha256", "api/generated/compas_fd.constraints.CircleConstraint.to_json", "api/generated/compas_fd.constraints.CircleConstraint.to_jsonstring", "api/generated/compas_fd.constraints.CircleConstraint.update", "api/generated/compas_fd.constraints.CircleConstraint.update_location_at_param", "api/generated/compas_fd.constraints.CircleConstraint.validate_data", "api/generated/compas_fd.constraints.Constraint", "api/generated/compas_fd.constraints.Constraint.ToString", "api/generated/compas_fd.constraints.Constraint.compute_normal", "api/generated/compas_fd.constraints.Constraint.compute_param", "api/generated/compas_fd.constraints.Constraint.compute_tangent", "api/generated/compas_fd.constraints.Constraint.copy", "api/generated/compas_fd.constraints.Constraint.from_json", "api/generated/compas_fd.constraints.Constraint.from_jsonstring", "api/generated/compas_fd.constraints.Constraint.get_constraint_cls", "api/generated/compas_fd.constraints.Constraint.project", "api/generated/compas_fd.constraints.Constraint.register", "api/generated/compas_fd.constraints.Constraint.sha256", "api/generated/compas_fd.constraints.Constraint.to_json", "api/generated/compas_fd.constraints.Constraint.to_jsonstring", "api/generated/compas_fd.constraints.Constraint.update", "api/generated/compas_fd.constraints.Constraint.update_location_at_param", "api/generated/compas_fd.constraints.Constraint.validate_data", "api/generated/compas_fd.constraints.CurveConstraint", "api/generated/compas_fd.constraints.CurveConstraint.ToString", "api/generated/compas_fd.constraints.CurveConstraint.compute_normal", "api/generated/compas_fd.constraints.CurveConstraint.compute_param", "api/generated/compas_fd.constraints.CurveConstraint.compute_tangent", "api/generated/compas_fd.constraints.CurveConstraint.copy", "api/generated/compas_fd.constraints.CurveConstraint.from_json", "api/generated/compas_fd.constraints.CurveConstraint.from_jsonstring", "api/generated/compas_fd.constraints.CurveConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.CurveConstraint.project", "api/generated/compas_fd.constraints.CurveConstraint.register", "api/generated/compas_fd.constraints.CurveConstraint.sha256", "api/generated/compas_fd.constraints.CurveConstraint.to_json", "api/generated/compas_fd.constraints.CurveConstraint.to_jsonstring", "api/generated/compas_fd.constraints.CurveConstraint.update", "api/generated/compas_fd.constraints.CurveConstraint.update_location_at_param", "api/generated/compas_fd.constraints.CurveConstraint.validate_data", "api/generated/compas_fd.constraints.FrameConstraint", "api/generated/compas_fd.constraints.FrameConstraint.ToString", "api/generated/compas_fd.constraints.FrameConstraint.compute_normal", "api/generated/compas_fd.constraints.FrameConstraint.compute_param", "api/generated/compas_fd.constraints.FrameConstraint.compute_tangent", "api/generated/compas_fd.constraints.FrameConstraint.copy", "api/generated/compas_fd.constraints.FrameConstraint.from_json", "api/generated/compas_fd.constraints.FrameConstraint.from_jsonstring", "api/generated/compas_fd.constraints.FrameConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.FrameConstraint.project", "api/generated/compas_fd.constraints.FrameConstraint.register", "api/generated/compas_fd.constraints.FrameConstraint.sha256", "api/generated/compas_fd.constraints.FrameConstraint.to_json", "api/generated/compas_fd.constraints.FrameConstraint.to_jsonstring", "api/generated/compas_fd.constraints.FrameConstraint.update", "api/generated/compas_fd.constraints.FrameConstraint.update_location_at_param", "api/generated/compas_fd.constraints.FrameConstraint.validate_data", "api/generated/compas_fd.constraints.LineConstraint", "api/generated/compas_fd.constraints.LineConstraint.ToString", "api/generated/compas_fd.constraints.LineConstraint.compute_normal", "api/generated/compas_fd.constraints.LineConstraint.compute_param", "api/generated/compas_fd.constraints.LineConstraint.compute_tangent", "api/generated/compas_fd.constraints.LineConstraint.copy", "api/generated/compas_fd.constraints.LineConstraint.from_json", "api/generated/compas_fd.constraints.LineConstraint.from_jsonstring", "api/generated/compas_fd.constraints.LineConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.LineConstraint.project", "api/generated/compas_fd.constraints.LineConstraint.register", "api/generated/compas_fd.constraints.LineConstraint.sha256", "api/generated/compas_fd.constraints.LineConstraint.to_json", "api/generated/compas_fd.constraints.LineConstraint.to_jsonstring", "api/generated/compas_fd.constraints.LineConstraint.update", "api/generated/compas_fd.constraints.LineConstraint.update_location_at_param", "api/generated/compas_fd.constraints.LineConstraint.validate_data", "api/generated/compas_fd.constraints.PlaneConstraint", "api/generated/compas_fd.constraints.PlaneConstraint.ToString", "api/generated/compas_fd.constraints.PlaneConstraint.compute_normal", "api/generated/compas_fd.constraints.PlaneConstraint.compute_param", "api/generated/compas_fd.constraints.PlaneConstraint.compute_tangent", "api/generated/compas_fd.constraints.PlaneConstraint.copy", "api/generated/compas_fd.constraints.PlaneConstraint.from_json", "api/generated/compas_fd.constraints.PlaneConstraint.from_jsonstring", "api/generated/compas_fd.constraints.PlaneConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.PlaneConstraint.project", "api/generated/compas_fd.constraints.PlaneConstraint.register", "api/generated/compas_fd.constraints.PlaneConstraint.sha256", "api/generated/compas_fd.constraints.PlaneConstraint.to_json", "api/generated/compas_fd.constraints.PlaneConstraint.to_jsonstring", "api/generated/compas_fd.constraints.PlaneConstraint.update", "api/generated/compas_fd.constraints.PlaneConstraint.update_location_at_param", "api/generated/compas_fd.constraints.PlaneConstraint.validate_data", "api/generated/compas_fd.constraints.SurfaceConstraint", "api/generated/compas_fd.constraints.SurfaceConstraint.ToString", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_normal", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_param", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_tangent", "api/generated/compas_fd.constraints.SurfaceConstraint.copy", "api/generated/compas_fd.constraints.SurfaceConstraint.from_json", "api/generated/compas_fd.constraints.SurfaceConstraint.from_jsonstring", "api/generated/compas_fd.constraints.SurfaceConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.SurfaceConstraint.project", "api/generated/compas_fd.constraints.SurfaceConstraint.register", "api/generated/compas_fd.constraints.SurfaceConstraint.sha256", "api/generated/compas_fd.constraints.SurfaceConstraint.to_json", "api/generated/compas_fd.constraints.SurfaceConstraint.to_jsonstring", "api/generated/compas_fd.constraints.SurfaceConstraint.update", "api/generated/compas_fd.constraints.SurfaceConstraint.update_location_at_param", "api/generated/compas_fd.constraints.SurfaceConstraint.validate_data", "api/generated/compas_fd.constraints.VectorConstraint", "api/generated/compas_fd.constraints.VectorConstraint.ToString", "api/generated/compas_fd.constraints.VectorConstraint.compute_normal", "api/generated/compas_fd.constraints.VectorConstraint.compute_param", "api/generated/compas_fd.constraints.VectorConstraint.compute_tangent", "api/generated/compas_fd.constraints.VectorConstraint.copy", "api/generated/compas_fd.constraints.VectorConstraint.from_json", "api/generated/compas_fd.constraints.VectorConstraint.from_jsonstring", "api/generated/compas_fd.constraints.VectorConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.VectorConstraint.project", "api/generated/compas_fd.constraints.VectorConstraint.register", "api/generated/compas_fd.constraints.VectorConstraint.sha256", "api/generated/compas_fd.constraints.VectorConstraint.to_json", "api/generated/compas_fd.constraints.VectorConstraint.to_jsonstring", "api/generated/compas_fd.constraints.VectorConstraint.update", "api/generated/compas_fd.constraints.VectorConstraint.update_location_at_param", "api/generated/compas_fd.constraints.VectorConstraint.validate_data", "api/generated/compas_fd.datastructures.CableMesh", "api/generated/compas_fd.datastructures.CableMesh.ToString", "api/generated/compas_fd.datastructures.CableMesh.aabb", "api/generated/compas_fd.datastructures.CableMesh.add_face", "api/generated/compas_fd.datastructures.CableMesh.add_vertex", "api/generated/compas_fd.datastructures.CableMesh.adjacency_matrix", "api/generated/compas_fd.datastructures.CableMesh.anchors", "api/generated/compas_fd.datastructures.CableMesh.area", "api/generated/compas_fd.datastructures.CableMesh.centroid", "api/generated/compas_fd.datastructures.CableMesh.clear", "api/generated/compas_fd.datastructures.CableMesh.collapse_edge", "api/generated/compas_fd.datastructures.CableMesh.connected_faces", "api/generated/compas_fd.datastructures.CableMesh.connected_vertices", "api/generated/compas_fd.datastructures.CableMesh.connectivity_matrix", "api/generated/compas_fd.datastructures.CableMesh.copy", "api/generated/compas_fd.datastructures.CableMesh.cull_vertices", "api/generated/compas_fd.datastructures.CableMesh.degree_matrix", "api/generated/compas_fd.datastructures.CableMesh.delete_face", "api/generated/compas_fd.datastructures.CableMesh.delete_vertex", "api/generated/compas_fd.datastructures.CableMesh.dual", "api/generated/compas_fd.datastructures.CableMesh.edge_attribute", "api/generated/compas_fd.datastructures.CableMesh.edge_attributes", "api/generated/compas_fd.datastructures.CableMesh.edge_coordinates", "api/generated/compas_fd.datastructures.CableMesh.edge_direction", "api/generated/compas_fd.datastructures.CableMesh.edge_end", "api/generated/compas_fd.datastructures.CableMesh.edge_faces", "api/generated/compas_fd.datastructures.CableMesh.edge_length", "api/generated/compas_fd.datastructures.CableMesh.edge_line", "api/generated/compas_fd.datastructures.CableMesh.edge_loop", "api/generated/compas_fd.datastructures.CableMesh.edge_midpoint", "api/generated/compas_fd.datastructures.CableMesh.edge_point", "api/generated/compas_fd.datastructures.CableMesh.edge_sample", "api/generated/compas_fd.datastructures.CableMesh.edge_start", "api/generated/compas_fd.datastructures.CableMesh.edge_strip", "api/generated/compas_fd.datastructures.CableMesh.edge_vector", "api/generated/compas_fd.datastructures.CableMesh.edges", "api/generated/compas_fd.datastructures.CableMesh.edges_attribute", "api/generated/compas_fd.datastructures.CableMesh.edges_attributes", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundaries", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.edges_where", "api/generated/compas_fd.datastructures.CableMesh.edges_where_predicate", "api/generated/compas_fd.datastructures.CableMesh.euler", "api/generated/compas_fd.datastructures.CableMesh.exploded", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_halfedge", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_vertices", "api/generated/compas_fd.datastructures.CableMesh.face_area", "api/generated/compas_fd.datastructures.CableMesh.face_aspect_ratio", "api/generated/compas_fd.datastructures.CableMesh.face_attribute", "api/generated/compas_fd.datastructures.CableMesh.face_attributes", "api/generated/compas_fd.datastructures.CableMesh.face_center", "api/generated/compas_fd.datastructures.CableMesh.face_centroid", "api/generated/compas_fd.datastructures.CableMesh.face_circle", "api/generated/compas_fd.datastructures.CableMesh.face_coordinates", "api/generated/compas_fd.datastructures.CableMesh.face_corners", "api/generated/compas_fd.datastructures.CableMesh.face_curvature", "api/generated/compas_fd.datastructures.CableMesh.face_degree", "api/generated/compas_fd.datastructures.CableMesh.face_flatness", "api/generated/compas_fd.datastructures.CableMesh.face_frame", "api/generated/compas_fd.datastructures.CableMesh.face_halfedges", "api/generated/compas_fd.datastructures.CableMesh.face_matrix", "api/generated/compas_fd.datastructures.CableMesh.face_max_degree", "api/generated/compas_fd.datastructures.CableMesh.face_min_degree", "api/generated/compas_fd.datastructures.CableMesh.face_neighborhood", "api/generated/compas_fd.datastructures.CableMesh.face_neighbors", "api/generated/compas_fd.datastructures.CableMesh.face_normal", "api/generated/compas_fd.datastructures.CableMesh.face_plane", "api/generated/compas_fd.datastructures.CableMesh.face_points", "api/generated/compas_fd.datastructures.CableMesh.face_polygon", "api/generated/compas_fd.datastructures.CableMesh.face_sample", "api/generated/compas_fd.datastructures.CableMesh.face_skewness", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_after", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_ancestor", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_before", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_descendant", "api/generated/compas_fd.datastructures.CableMesh.face_vertices", "api/generated/compas_fd.datastructures.CableMesh.faces", "api/generated/compas_fd.datastructures.CableMesh.faces_attribute", "api/generated/compas_fd.datastructures.CableMesh.faces_attributes", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundaries", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.faces_where", "api/generated/compas_fd.datastructures.CableMesh.faces_where_predicate", "api/generated/compas_fd.datastructures.CableMesh.fixed", "api/generated/compas_fd.datastructures.CableMesh.flip_cycles", "api/generated/compas_fd.datastructures.CableMesh.from_json", "api/generated/compas_fd.datastructures.CableMesh.from_jsonstring", "api/generated/compas_fd.datastructures.CableMesh.from_lines", "api/generated/compas_fd.datastructures.CableMesh.from_meshgrid", "api/generated/compas_fd.datastructures.CableMesh.from_obj", "api/generated/compas_fd.datastructures.CableMesh.from_off", "api/generated/compas_fd.datastructures.CableMesh.from_ply", "api/generated/compas_fd.datastructures.CableMesh.from_points", "api/generated/compas_fd.datastructures.CableMesh.from_polygons", "api/generated/compas_fd.datastructures.CableMesh.from_polyhedron", "api/generated/compas_fd.datastructures.CableMesh.from_polylines", "api/generated/compas_fd.datastructures.CableMesh.from_shape", "api/generated/compas_fd.datastructures.CableMesh.from_stl", "api/generated/compas_fd.datastructures.CableMesh.from_vertices_and_faces", "api/generated/compas_fd.datastructures.CableMesh.gkey_vertex", "api/generated/compas_fd.datastructures.CableMesh.halfedge_after", "api/generated/compas_fd.datastructures.CableMesh.halfedge_before", "api/generated/compas_fd.datastructures.CableMesh.halfedge_face", "api/generated/compas_fd.datastructures.CableMesh.halfedge_loop", "api/generated/compas_fd.datastructures.CableMesh.halfedge_loop_vertices", "api/generated/compas_fd.datastructures.CableMesh.halfedge_strip", "api/generated/compas_fd.datastructures.CableMesh.halfedge_strip_faces", "api/generated/compas_fd.datastructures.CableMesh.has_edge", "api/generated/compas_fd.datastructures.CableMesh.has_face", "api/generated/compas_fd.datastructures.CableMesh.has_halfedge", "api/generated/compas_fd.datastructures.CableMesh.has_vertex", "api/generated/compas_fd.datastructures.CableMesh.index_vertex", "api/generated/compas_fd.datastructures.CableMesh.insert_vertex", "api/generated/compas_fd.datastructures.CableMesh.is_closed", "api/generated/compas_fd.datastructures.CableMesh.is_connected", "api/generated/compas_fd.datastructures.CableMesh.is_edge_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.is_empty", "api/generated/compas_fd.datastructures.CableMesh.is_face_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.is_manifold", "api/generated/compas_fd.datastructures.CableMesh.is_orientable", "api/generated/compas_fd.datastructures.CableMesh.is_quadmesh", "api/generated/compas_fd.datastructures.CableMesh.is_regular", "api/generated/compas_fd.datastructures.CableMesh.is_trimesh", "api/generated/compas_fd.datastructures.CableMesh.is_valid", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_connected", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.join", "api/generated/compas_fd.datastructures.CableMesh.laplacian_matrix", "api/generated/compas_fd.datastructures.CableMesh.merge_faces", "api/generated/compas_fd.datastructures.CableMesh.normal", "api/generated/compas_fd.datastructures.CableMesh.number_of_edges", "api/generated/compas_fd.datastructures.CableMesh.number_of_faces", "api/generated/compas_fd.datastructures.CableMesh.number_of_vertices", "api/generated/compas_fd.datastructures.CableMesh.obb", "api/generated/compas_fd.datastructures.CableMesh.offset", "api/generated/compas_fd.datastructures.CableMesh.quads_to_triangles", "api/generated/compas_fd.datastructures.CableMesh.remove_duplicate_vertices", "api/generated/compas_fd.datastructures.CableMesh.remove_unused_vertices", "api/generated/compas_fd.datastructures.CableMesh.set_anchors", "api/generated/compas_fd.datastructures.CableMesh.set_fixed", "api/generated/compas_fd.datastructures.CableMesh.set_vertex_point", "api/generated/compas_fd.datastructures.CableMesh.sha256", "api/generated/compas_fd.datastructures.CableMesh.slice", "api/generated/compas_fd.datastructures.CableMesh.smooth_area", "api/generated/compas_fd.datastructures.CableMesh.smooth_centroid", "api/generated/compas_fd.datastructures.CableMesh.split_edge", "api/generated/compas_fd.datastructures.CableMesh.split_face", "api/generated/compas_fd.datastructures.CableMesh.split_strip", "api/generated/compas_fd.datastructures.CableMesh.subdivided", "api/generated/compas_fd.datastructures.CableMesh.summary", "api/generated/compas_fd.datastructures.CableMesh.thickened", "api/generated/compas_fd.datastructures.CableMesh.to_json", "api/generated/compas_fd.datastructures.CableMesh.to_jsonstring", "api/generated/compas_fd.datastructures.CableMesh.to_lines", "api/generated/compas_fd.datastructures.CableMesh.to_obj", "api/generated/compas_fd.datastructures.CableMesh.to_off", "api/generated/compas_fd.datastructures.CableMesh.to_ply", "api/generated/compas_fd.datastructures.CableMesh.to_points", "api/generated/compas_fd.datastructures.CableMesh.to_polygons", "api/generated/compas_fd.datastructures.CableMesh.to_polylines", "api/generated/compas_fd.datastructures.CableMesh.to_stl", "api/generated/compas_fd.datastructures.CableMesh.to_vertices_and_faces", "api/generated/compas_fd.datastructures.CableMesh.transform", "api/generated/compas_fd.datastructures.CableMesh.transform_numpy", "api/generated/compas_fd.datastructures.CableMesh.transformed", "api/generated/compas_fd.datastructures.CableMesh.transformed_numpy", "api/generated/compas_fd.datastructures.CableMesh.unify_cycles", "api/generated/compas_fd.datastructures.CableMesh.unset_edge_attribute", "api/generated/compas_fd.datastructures.CableMesh.unset_face_attribute", "api/generated/compas_fd.datastructures.CableMesh.unset_vertex_attribute", "api/generated/compas_fd.datastructures.CableMesh.unweld_edges", "api/generated/compas_fd.datastructures.CableMesh.unweld_vertices", "api/generated/compas_fd.datastructures.CableMesh.update_default_edge_attributes", "api/generated/compas_fd.datastructures.CableMesh.update_default_face_attributes", "api/generated/compas_fd.datastructures.CableMesh.update_default_vertex_attributes", "api/generated/compas_fd.datastructures.CableMesh.update_edges", "api/generated/compas_fd.datastructures.CableMesh.update_vertices", "api/generated/compas_fd.datastructures.CableMesh.validate_data", "api/generated/compas_fd.datastructures.CableMesh.vertex_area", "api/generated/compas_fd.datastructures.CableMesh.vertex_attribute", "api/generated/compas_fd.datastructures.CableMesh.vertex_attributes", "api/generated/compas_fd.datastructures.CableMesh.vertex_coordinates", "api/generated/compas_fd.datastructures.CableMesh.vertex_curvature", "api/generated/compas_fd.datastructures.CableMesh.vertex_degree", "api/generated/compas_fd.datastructures.CableMesh.vertex_edges", "api/generated/compas_fd.datastructures.CableMesh.vertex_faces", "api/generated/compas_fd.datastructures.CableMesh.vertex_gkey", "api/generated/compas_fd.datastructures.CableMesh.vertex_index", "api/generated/compas_fd.datastructures.CableMesh.vertex_laplacian", "api/generated/compas_fd.datastructures.CableMesh.vertex_max_degree", "api/generated/compas_fd.datastructures.CableMesh.vertex_min_degree", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood_centroid", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighbors", "api/generated/compas_fd.datastructures.CableMesh.vertex_normal", "api/generated/compas_fd.datastructures.CableMesh.vertex_point", "api/generated/compas_fd.datastructures.CableMesh.vertex_sample", "api/generated/compas_fd.datastructures.CableMesh.vertices", "api/generated/compas_fd.datastructures.CableMesh.vertices_attribute", "api/generated/compas_fd.datastructures.CableMesh.vertices_attributes", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundaries", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.vertices_points", "api/generated/compas_fd.datastructures.CableMesh.vertices_where", "api/generated/compas_fd.datastructures.CableMesh.vertices_where_predicate", "api/generated/compas_fd.datastructures.CableMesh.weld", "api/generated/compas_fd.loads.SelfweightCalculator", "api/generated/compas_fd.loads.SelfweightCalculator.face_matrix", "api/generated/compas_fd.solvers.fd_constrained_numpy", "api/generated/compas_fd.solvers.fd_numpy", "api/generated/compas_fd.solvers.mesh_fd_constrained_numpy", "api/generated/compas_fd.solvers.mesh_fd_numpy", "examples", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/compas_fd.rst", "api/compas_fd.constraints.rst", "api/compas_fd.datastructures.rst", "api/compas_fd.loads.rst", "api/compas_fd.solvers.rst", "api/generated/compas_fd.constraints.CircleConstraint.rst", "api/generated/compas_fd.constraints.CircleConstraint.ToString.rst", "api/generated/compas_fd.constraints.CircleConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.CircleConstraint.compute_param.rst", "api/generated/compas_fd.constraints.CircleConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.CircleConstraint.copy.rst", "api/generated/compas_fd.constraints.CircleConstraint.from_json.rst", "api/generated/compas_fd.constraints.CircleConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.CircleConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.CircleConstraint.project.rst", "api/generated/compas_fd.constraints.CircleConstraint.register.rst", "api/generated/compas_fd.constraints.CircleConstraint.sha256.rst", "api/generated/compas_fd.constraints.CircleConstraint.to_json.rst", "api/generated/compas_fd.constraints.CircleConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.CircleConstraint.update.rst", "api/generated/compas_fd.constraints.CircleConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.CircleConstraint.validate_data.rst", "api/generated/compas_fd.constraints.Constraint.rst", "api/generated/compas_fd.constraints.Constraint.ToString.rst", "api/generated/compas_fd.constraints.Constraint.compute_normal.rst", "api/generated/compas_fd.constraints.Constraint.compute_param.rst", "api/generated/compas_fd.constraints.Constraint.compute_tangent.rst", "api/generated/compas_fd.constraints.Constraint.copy.rst", "api/generated/compas_fd.constraints.Constraint.from_json.rst", "api/generated/compas_fd.constraints.Constraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.Constraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.Constraint.project.rst", "api/generated/compas_fd.constraints.Constraint.register.rst", "api/generated/compas_fd.constraints.Constraint.sha256.rst", "api/generated/compas_fd.constraints.Constraint.to_json.rst", "api/generated/compas_fd.constraints.Constraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.Constraint.update.rst", "api/generated/compas_fd.constraints.Constraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.Constraint.validate_data.rst", "api/generated/compas_fd.constraints.CurveConstraint.rst", "api/generated/compas_fd.constraints.CurveConstraint.ToString.rst", "api/generated/compas_fd.constraints.CurveConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.CurveConstraint.compute_param.rst", "api/generated/compas_fd.constraints.CurveConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.CurveConstraint.copy.rst", "api/generated/compas_fd.constraints.CurveConstraint.from_json.rst", "api/generated/compas_fd.constraints.CurveConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.CurveConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.CurveConstraint.project.rst", "api/generated/compas_fd.constraints.CurveConstraint.register.rst", "api/generated/compas_fd.constraints.CurveConstraint.sha256.rst", "api/generated/compas_fd.constraints.CurveConstraint.to_json.rst", "api/generated/compas_fd.constraints.CurveConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.CurveConstraint.update.rst", "api/generated/compas_fd.constraints.CurveConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.CurveConstraint.validate_data.rst", "api/generated/compas_fd.constraints.FrameConstraint.rst", "api/generated/compas_fd.constraints.FrameConstraint.ToString.rst", "api/generated/compas_fd.constraints.FrameConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.FrameConstraint.compute_param.rst", "api/generated/compas_fd.constraints.FrameConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.FrameConstraint.copy.rst", "api/generated/compas_fd.constraints.FrameConstraint.from_json.rst", "api/generated/compas_fd.constraints.FrameConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.FrameConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.FrameConstraint.project.rst", "api/generated/compas_fd.constraints.FrameConstraint.register.rst", "api/generated/compas_fd.constraints.FrameConstraint.sha256.rst", "api/generated/compas_fd.constraints.FrameConstraint.to_json.rst", "api/generated/compas_fd.constraints.FrameConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.FrameConstraint.update.rst", "api/generated/compas_fd.constraints.FrameConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.FrameConstraint.validate_data.rst", "api/generated/compas_fd.constraints.LineConstraint.rst", "api/generated/compas_fd.constraints.LineConstraint.ToString.rst", "api/generated/compas_fd.constraints.LineConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.LineConstraint.compute_param.rst", "api/generated/compas_fd.constraints.LineConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.LineConstraint.copy.rst", "api/generated/compas_fd.constraints.LineConstraint.from_json.rst", "api/generated/compas_fd.constraints.LineConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.LineConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.LineConstraint.project.rst", "api/generated/compas_fd.constraints.LineConstraint.register.rst", "api/generated/compas_fd.constraints.LineConstraint.sha256.rst", "api/generated/compas_fd.constraints.LineConstraint.to_json.rst", "api/generated/compas_fd.constraints.LineConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.LineConstraint.update.rst", "api/generated/compas_fd.constraints.LineConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.LineConstraint.validate_data.rst", "api/generated/compas_fd.constraints.PlaneConstraint.rst", "api/generated/compas_fd.constraints.PlaneConstraint.ToString.rst", "api/generated/compas_fd.constraints.PlaneConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.PlaneConstraint.compute_param.rst", "api/generated/compas_fd.constraints.PlaneConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.PlaneConstraint.copy.rst", "api/generated/compas_fd.constraints.PlaneConstraint.from_json.rst", "api/generated/compas_fd.constraints.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.PlaneConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.PlaneConstraint.project.rst", "api/generated/compas_fd.constraints.PlaneConstraint.register.rst", "api/generated/compas_fd.constraints.PlaneConstraint.sha256.rst", "api/generated/compas_fd.constraints.PlaneConstraint.to_json.rst", "api/generated/compas_fd.constraints.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.PlaneConstraint.update.rst", "api/generated/compas_fd.constraints.PlaneConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.PlaneConstraint.validate_data.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.ToString.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_param.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.copy.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.from_json.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.project.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.register.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.sha256.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.to_json.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.update.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.validate_data.rst", "api/generated/compas_fd.constraints.VectorConstraint.rst", "api/generated/compas_fd.constraints.VectorConstraint.ToString.rst", "api/generated/compas_fd.constraints.VectorConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.VectorConstraint.compute_param.rst", "api/generated/compas_fd.constraints.VectorConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.VectorConstraint.copy.rst", "api/generated/compas_fd.constraints.VectorConstraint.from_json.rst", "api/generated/compas_fd.constraints.VectorConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.VectorConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.VectorConstraint.project.rst", "api/generated/compas_fd.constraints.VectorConstraint.register.rst", "api/generated/compas_fd.constraints.VectorConstraint.sha256.rst", "api/generated/compas_fd.constraints.VectorConstraint.to_json.rst", "api/generated/compas_fd.constraints.VectorConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.VectorConstraint.update.rst", "api/generated/compas_fd.constraints.VectorConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.VectorConstraint.validate_data.rst", "api/generated/compas_fd.datastructures.CableMesh.rst", "api/generated/compas_fd.datastructures.CableMesh.ToString.rst", "api/generated/compas_fd.datastructures.CableMesh.aabb.rst", "api/generated/compas_fd.datastructures.CableMesh.add_face.rst", "api/generated/compas_fd.datastructures.CableMesh.add_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.adjacency_matrix.rst", "api/generated/compas_fd.datastructures.CableMesh.anchors.rst", "api/generated/compas_fd.datastructures.CableMesh.area.rst", "api/generated/compas_fd.datastructures.CableMesh.centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.clear.rst", "api/generated/compas_fd.datastructures.CableMesh.collapse_edge.rst", "api/generated/compas_fd.datastructures.CableMesh.connected_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.connected_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.connectivity_matrix.rst", "api/generated/compas_fd.datastructures.CableMesh.copy.rst", "api/generated/compas_fd.datastructures.CableMesh.cull_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.degree_matrix.rst", "api/generated/compas_fd.datastructures.CableMesh.delete_face.rst", "api/generated/compas_fd.datastructures.CableMesh.delete_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.dual.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_coordinates.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_direction.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_end.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_length.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_line.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_loop.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_midpoint.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_point.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_sample.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_start.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_strip.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_vector.rst", "api/generated/compas_fd.datastructures.CableMesh.edges.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundaries.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_where.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_where_predicate.rst", "api/generated/compas_fd.datastructures.CableMesh.euler.rst", "api/generated/compas_fd.datastructures.CableMesh.exploded.rst", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_halfedge.rst", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.face_area.rst", "api/generated/compas_fd.datastructures.CableMesh.face_aspect_ratio.rst", "api/generated/compas_fd.datastructures.CableMesh.face_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.face_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.face_center.rst", "api/generated/compas_fd.datastructures.CableMesh.face_centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.face_circle.rst", "api/generated/compas_fd.datastructures.CableMesh.face_coordinates.rst", "api/generated/compas_fd.datastructures.CableMesh.face_corners.rst", "api/generated/compas_fd.datastructures.CableMesh.face_curvature.rst", "api/generated/compas_fd.datastructures.CableMesh.face_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.face_flatness.rst", "api/generated/compas_fd.datastructures.CableMesh.face_frame.rst", "api/generated/compas_fd.datastructures.CableMesh.face_halfedges.rst", "api/generated/compas_fd.datastructures.CableMesh.face_matrix.rst", "api/generated/compas_fd.datastructures.CableMesh.face_max_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.face_min_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.face_neighborhood.rst", "api/generated/compas_fd.datastructures.CableMesh.face_neighbors.rst", "api/generated/compas_fd.datastructures.CableMesh.face_normal.rst", "api/generated/compas_fd.datastructures.CableMesh.face_plane.rst", "api/generated/compas_fd.datastructures.CableMesh.face_points.rst", "api/generated/compas_fd.datastructures.CableMesh.face_polygon.rst", "api/generated/compas_fd.datastructures.CableMesh.face_sample.rst", "api/generated/compas_fd.datastructures.CableMesh.face_skewness.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_after.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_ancestor.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_before.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_descendant.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.faces.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundaries.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_where.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_where_predicate.rst", "api/generated/compas_fd.datastructures.CableMesh.fixed.rst", "api/generated/compas_fd.datastructures.CableMesh.flip_cycles.rst", "api/generated/compas_fd.datastructures.CableMesh.from_json.rst", "api/generated/compas_fd.datastructures.CableMesh.from_jsonstring.rst", "api/generated/compas_fd.datastructures.CableMesh.from_lines.rst", "api/generated/compas_fd.datastructures.CableMesh.from_meshgrid.rst", "api/generated/compas_fd.datastructures.CableMesh.from_obj.rst", "api/generated/compas_fd.datastructures.CableMesh.from_off.rst", "api/generated/compas_fd.datastructures.CableMesh.from_ply.rst", "api/generated/compas_fd.datastructures.CableMesh.from_points.rst", "api/generated/compas_fd.datastructures.CableMesh.from_polygons.rst", "api/generated/compas_fd.datastructures.CableMesh.from_polyhedron.rst", "api/generated/compas_fd.datastructures.CableMesh.from_polylines.rst", "api/generated/compas_fd.datastructures.CableMesh.from_shape.rst", "api/generated/compas_fd.datastructures.CableMesh.from_stl.rst", "api/generated/compas_fd.datastructures.CableMesh.from_vertices_and_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.gkey_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_after.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_before.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_face.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_loop.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_loop_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_strip.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_strip_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.has_edge.rst", "api/generated/compas_fd.datastructures.CableMesh.has_face.rst", "api/generated/compas_fd.datastructures.CableMesh.has_halfedge.rst", "api/generated/compas_fd.datastructures.CableMesh.has_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.index_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.insert_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.is_closed.rst", "api/generated/compas_fd.datastructures.CableMesh.is_connected.rst", "api/generated/compas_fd.datastructures.CableMesh.is_edge_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.is_empty.rst", "api/generated/compas_fd.datastructures.CableMesh.is_face_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.is_manifold.rst", "api/generated/compas_fd.datastructures.CableMesh.is_orientable.rst", "api/generated/compas_fd.datastructures.CableMesh.is_quadmesh.rst", "api/generated/compas_fd.datastructures.CableMesh.is_regular.rst", "api/generated/compas_fd.datastructures.CableMesh.is_trimesh.rst", "api/generated/compas_fd.datastructures.CableMesh.is_valid.rst", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_connected.rst", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.join.rst", "api/generated/compas_fd.datastructures.CableMesh.laplacian_matrix.rst", "api/generated/compas_fd.datastructures.CableMesh.merge_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.normal.rst", "api/generated/compas_fd.datastructures.CableMesh.number_of_edges.rst", "api/generated/compas_fd.datastructures.CableMesh.number_of_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.number_of_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.obb.rst", "api/generated/compas_fd.datastructures.CableMesh.offset.rst", "api/generated/compas_fd.datastructures.CableMesh.quads_to_triangles.rst", "api/generated/compas_fd.datastructures.CableMesh.remove_duplicate_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.remove_unused_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.set_anchors.rst", "api/generated/compas_fd.datastructures.CableMesh.set_fixed.rst", "api/generated/compas_fd.datastructures.CableMesh.set_vertex_point.rst", "api/generated/compas_fd.datastructures.CableMesh.sha256.rst", "api/generated/compas_fd.datastructures.CableMesh.slice.rst", "api/generated/compas_fd.datastructures.CableMesh.smooth_area.rst", "api/generated/compas_fd.datastructures.CableMesh.smooth_centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.split_edge.rst", "api/generated/compas_fd.datastructures.CableMesh.split_face.rst", "api/generated/compas_fd.datastructures.CableMesh.split_strip.rst", "api/generated/compas_fd.datastructures.CableMesh.subdivided.rst", "api/generated/compas_fd.datastructures.CableMesh.summary.rst", "api/generated/compas_fd.datastructures.CableMesh.thickened.rst", "api/generated/compas_fd.datastructures.CableMesh.to_json.rst", "api/generated/compas_fd.datastructures.CableMesh.to_jsonstring.rst", "api/generated/compas_fd.datastructures.CableMesh.to_lines.rst", "api/generated/compas_fd.datastructures.CableMesh.to_obj.rst", "api/generated/compas_fd.datastructures.CableMesh.to_off.rst", "api/generated/compas_fd.datastructures.CableMesh.to_ply.rst", "api/generated/compas_fd.datastructures.CableMesh.to_points.rst", "api/generated/compas_fd.datastructures.CableMesh.to_polygons.rst", "api/generated/compas_fd.datastructures.CableMesh.to_polylines.rst", "api/generated/compas_fd.datastructures.CableMesh.to_stl.rst", "api/generated/compas_fd.datastructures.CableMesh.to_vertices_and_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.transform.rst", "api/generated/compas_fd.datastructures.CableMesh.transform_numpy.rst", "api/generated/compas_fd.datastructures.CableMesh.transformed.rst", "api/generated/compas_fd.datastructures.CableMesh.transformed_numpy.rst", "api/generated/compas_fd.datastructures.CableMesh.unify_cycles.rst", "api/generated/compas_fd.datastructures.CableMesh.unset_edge_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.unset_face_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.unset_vertex_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.unweld_edges.rst", "api/generated/compas_fd.datastructures.CableMesh.unweld_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.update_default_edge_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.update_default_face_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.update_default_vertex_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.update_edges.rst", "api/generated/compas_fd.datastructures.CableMesh.update_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.validate_data.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_area.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_coordinates.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_curvature.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_edges.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_gkey.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_index.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_laplacian.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_max_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_min_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood_centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighbors.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_normal.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_point.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_sample.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundaries.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_points.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_where.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_where_predicate.rst", "api/generated/compas_fd.datastructures.CableMesh.weld.rst", "api/generated/compas_fd.loads.SelfweightCalculator.rst", "api/generated/compas_fd.loads.SelfweightCalculator.face_matrix.rst", "api/generated/compas_fd.solvers.fd_constrained_numpy.rst", "api/generated/compas_fd.solvers.fd_numpy.rst", "api/generated/compas_fd.solvers.mesh_fd_constrained_numpy.rst", "api/generated/compas_fd.solvers.mesh_fd_numpy.rst", "examples.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "compas_fd", "constraints", "datastructures", "loads", "solvers", "CircleConstraint", "CircleConstraint.ToString", "CircleConstraint.compute_normal", "CircleConstraint.compute_param", "CircleConstraint.compute_tangent", "CircleConstraint.copy", "CircleConstraint.from_json", "CircleConstraint.from_jsonstring", "CircleConstraint.get_constraint_cls", "CircleConstraint.project", "CircleConstraint.register", "CircleConstraint.sha256", "CircleConstraint.to_json", "CircleConstraint.to_jsonstring", "CircleConstraint.update", "CircleConstraint.update_location_at_param", "CircleConstraint.validate_data", "Constraint", "Constraint.ToString", "Constraint.compute_normal", "Constraint.compute_param", "Constraint.compute_tangent", "Constraint.copy", "Constraint.from_json", "Constraint.from_jsonstring", "Constraint.get_constraint_cls", "Constraint.project", "Constraint.register", "Constraint.sha256", "Constraint.to_json", "Constraint.to_jsonstring", "Constraint.update", "Constraint.update_location_at_param", "Constraint.validate_data", "CurveConstraint", "CurveConstraint.ToString", "CurveConstraint.compute_normal", "CurveConstraint.compute_param", "CurveConstraint.compute_tangent", "CurveConstraint.copy", "CurveConstraint.from_json", "CurveConstraint.from_jsonstring", "CurveConstraint.get_constraint_cls", "CurveConstraint.project", "CurveConstraint.register", "CurveConstraint.sha256", "CurveConstraint.to_json", "CurveConstraint.to_jsonstring", "CurveConstraint.update", "CurveConstraint.update_location_at_param", "CurveConstraint.validate_data", "FrameConstraint", "FrameConstraint.ToString", "FrameConstraint.compute_normal", "FrameConstraint.compute_param", "FrameConstraint.compute_tangent", "FrameConstraint.copy", "FrameConstraint.from_json", "FrameConstraint.from_jsonstring", "FrameConstraint.get_constraint_cls", "FrameConstraint.project", "FrameConstraint.register", "FrameConstraint.sha256", "FrameConstraint.to_json", "FrameConstraint.to_jsonstring", "FrameConstraint.update", "FrameConstraint.update_location_at_param", "FrameConstraint.validate_data", "LineConstraint", "LineConstraint.ToString", "LineConstraint.compute_normal", "LineConstraint.compute_param", "LineConstraint.compute_tangent", "LineConstraint.copy", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.get_constraint_cls", "LineConstraint.project", "LineConstraint.register", "LineConstraint.sha256", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.update", "LineConstraint.update_location_at_param", "LineConstraint.validate_data", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.compute_normal", "PlaneConstraint.compute_param", "PlaneConstraint.compute_tangent", "PlaneConstraint.copy", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.get_constraint_cls", "PlaneConstraint.project", "PlaneConstraint.register", "PlaneConstraint.sha256", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.update", "PlaneConstraint.update_location_at_param", "PlaneConstraint.validate_data", "SurfaceConstraint", "SurfaceConstraint.ToString", "SurfaceConstraint.compute_normal", "SurfaceConstraint.compute_param", "SurfaceConstraint.compute_tangent", "SurfaceConstraint.copy", "SurfaceConstraint.from_json", "SurfaceConstraint.from_jsonstring", "SurfaceConstraint.get_constraint_cls", "SurfaceConstraint.project", "SurfaceConstraint.register", "SurfaceConstraint.sha256", "SurfaceConstraint.to_json", "SurfaceConstraint.to_jsonstring", "SurfaceConstraint.update", "SurfaceConstraint.update_location_at_param", "SurfaceConstraint.validate_data", "VectorConstraint", "VectorConstraint.ToString", "VectorConstraint.compute_normal", "VectorConstraint.compute_param", "VectorConstraint.compute_tangent", "VectorConstraint.copy", "VectorConstraint.from_json", "VectorConstraint.from_jsonstring", "VectorConstraint.get_constraint_cls", "VectorConstraint.project", "VectorConstraint.register", "VectorConstraint.sha256", "VectorConstraint.to_json", "VectorConstraint.to_jsonstring", "VectorConstraint.update", "VectorConstraint.update_location_at_param", "VectorConstraint.validate_data", "CableMesh", "CableMesh.ToString", "CableMesh.aabb", "CableMesh.add_face", "CableMesh.add_vertex", "CableMesh.adjacency_matrix", "CableMesh.anchors", "CableMesh.area", "CableMesh.centroid", "CableMesh.clear", "CableMesh.collapse_edge", "CableMesh.connected_faces", "CableMesh.connected_vertices", "CableMesh.connectivity_matrix", "CableMesh.copy", "CableMesh.cull_vertices", "CableMesh.degree_matrix", "CableMesh.delete_face", "CableMesh.delete_vertex", "CableMesh.dual", "CableMesh.edge_attribute", "CableMesh.edge_attributes", "CableMesh.edge_coordinates", "CableMesh.edge_direction", "CableMesh.edge_end", "CableMesh.edge_faces", "CableMesh.edge_length", "CableMesh.edge_line", "CableMesh.edge_loop", "CableMesh.edge_midpoint", "CableMesh.edge_point", "CableMesh.edge_sample", "CableMesh.edge_start", "CableMesh.edge_strip", "CableMesh.edge_vector", "CableMesh.edges", "CableMesh.edges_attribute", "CableMesh.edges_attributes", "CableMesh.edges_on_boundaries", "CableMesh.edges_on_boundary", "CableMesh.edges_where", "CableMesh.edges_where_predicate", "CableMesh.euler", "CableMesh.exploded", "CableMesh.face_adjacency_halfedge", "CableMesh.face_adjacency_vertices", "CableMesh.face_area", "CableMesh.face_aspect_ratio", "CableMesh.face_attribute", "CableMesh.face_attributes", "CableMesh.face_center", "CableMesh.face_centroid", "CableMesh.face_circle", "CableMesh.face_coordinates", "CableMesh.face_corners", "CableMesh.face_curvature", "CableMesh.face_degree", "CableMesh.face_flatness", "CableMesh.face_frame", "CableMesh.face_halfedges", "CableMesh.face_matrix", "CableMesh.face_max_degree", "CableMesh.face_min_degree", "CableMesh.face_neighborhood", "CableMesh.face_neighbors", "CableMesh.face_normal", "CableMesh.face_plane", "CableMesh.face_points", "CableMesh.face_polygon", "CableMesh.face_sample", "CableMesh.face_skewness", "CableMesh.face_vertex_after", "CableMesh.face_vertex_ancestor", "CableMesh.face_vertex_before", "CableMesh.face_vertex_descendant", "CableMesh.face_vertices", "CableMesh.faces", "CableMesh.faces_attribute", "CableMesh.faces_attributes", "CableMesh.faces_on_boundaries", "CableMesh.faces_on_boundary", "CableMesh.faces_where", "CableMesh.faces_where_predicate", "CableMesh.fixed", "CableMesh.flip_cycles", "CableMesh.from_json", "CableMesh.from_jsonstring", "CableMesh.from_lines", "CableMesh.from_meshgrid", "CableMesh.from_obj", "CableMesh.from_off", "CableMesh.from_ply", "CableMesh.from_points", "CableMesh.from_polygons", "CableMesh.from_polyhedron", "CableMesh.from_polylines", "CableMesh.from_shape", "CableMesh.from_stl", "CableMesh.from_vertices_and_faces", "CableMesh.gkey_vertex", "CableMesh.halfedge_after", "CableMesh.halfedge_before", "CableMesh.halfedge_face", "CableMesh.halfedge_loop", "CableMesh.halfedge_loop_vertices", "CableMesh.halfedge_strip", "CableMesh.halfedge_strip_faces", "CableMesh.has_edge", "CableMesh.has_face", "CableMesh.has_halfedge", "CableMesh.has_vertex", "CableMesh.index_vertex", "CableMesh.insert_vertex", "CableMesh.is_closed", "CableMesh.is_connected", "CableMesh.is_edge_on_boundary", "CableMesh.is_empty", "CableMesh.is_face_on_boundary", "CableMesh.is_manifold", "CableMesh.is_orientable", "CableMesh.is_quadmesh", "CableMesh.is_regular", "CableMesh.is_trimesh", "CableMesh.is_valid", "CableMesh.is_vertex_connected", "CableMesh.is_vertex_on_boundary", "CableMesh.join", "CableMesh.laplacian_matrix", "CableMesh.merge_faces", "CableMesh.normal", "CableMesh.number_of_edges", "CableMesh.number_of_faces", "CableMesh.number_of_vertices", "CableMesh.obb", "CableMesh.offset", "CableMesh.quads_to_triangles", "CableMesh.remove_duplicate_vertices", "CableMesh.remove_unused_vertices", "CableMesh.set_anchors", "CableMesh.set_fixed", "CableMesh.set_vertex_point", "CableMesh.sha256", "CableMesh.slice", "CableMesh.smooth_area", "CableMesh.smooth_centroid", "CableMesh.split_edge", "CableMesh.split_face", "CableMesh.split_strip", "CableMesh.subdivided", "CableMesh.summary", "CableMesh.thickened", "CableMesh.to_json", "CableMesh.to_jsonstring", "CableMesh.to_lines", "CableMesh.to_obj", "CableMesh.to_off", "CableMesh.to_ply", "CableMesh.to_points", "CableMesh.to_polygons", "CableMesh.to_polylines", "CableMesh.to_stl", "CableMesh.to_vertices_and_faces", "CableMesh.transform", "CableMesh.transform_numpy", "CableMesh.transformed", "CableMesh.transformed_numpy", "CableMesh.unify_cycles", "CableMesh.unset_edge_attribute", "CableMesh.unset_face_attribute", "CableMesh.unset_vertex_attribute", "CableMesh.unweld_edges", "CableMesh.unweld_vertices", "CableMesh.update_default_edge_attributes", "CableMesh.update_default_face_attributes", "CableMesh.update_default_vertex_attributes", "CableMesh.update_edges", "CableMesh.update_vertices", "CableMesh.validate_data", "CableMesh.vertex_area", "CableMesh.vertex_attribute", "CableMesh.vertex_attributes", "CableMesh.vertex_coordinates", "CableMesh.vertex_curvature", "CableMesh.vertex_degree", "CableMesh.vertex_edges", "CableMesh.vertex_faces", "CableMesh.vertex_gkey", "CableMesh.vertex_index", "CableMesh.vertex_laplacian", "CableMesh.vertex_max_degree", "CableMesh.vertex_min_degree", "CableMesh.vertex_neighborhood", "CableMesh.vertex_neighborhood_centroid", "CableMesh.vertex_neighbors", "CableMesh.vertex_normal", "CableMesh.vertex_point", "CableMesh.vertex_sample", "CableMesh.vertices", "CableMesh.vertices_attribute", "CableMesh.vertices_attributes", "CableMesh.vertices_on_boundaries", "CableMesh.vertices_on_boundary", "CableMesh.vertices_points", "CableMesh.vertices_where", "CableMesh.vertices_where_predicate", "CableMesh.weld", "SelfweightCalculator", "SelfweightCalculator.face_matrix", "fd_constrained_numpy", "fd_numpy", "mesh_fd_constrained_numpy", "mesh_fd_numpy", "Examples", "COMPAS Constrained Force Density Method", "Installation", "License", "Tutorial"], "terms": {"compas_fd": [0, 6, 23, 40, 57, 74, 91, 108, 125, 142, 317, 318, 348, 350, 351, 352, 353, 355, 356], "constraint": [1, 6, 40, 57, 74, 91, 108, 125, 350, 355], "datastructur": [1, 17, 34, 51, 68, 85, 102, 119, 136, 142, 146, 152, 161, 185, 202, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 268, 269, 270, 276, 278, 283, 284, 285, 286, 287, 288, 289, 290, 292, 302, 304, 305, 306, 307, 312, 313, 351, 352, 353, 355], "solver": [1, 317, 318, 350, 351, 352, 353, 355], "load": [1, 348, 350, 351, 355], "class": [6, 7, 23, 24, 40, 41, 57, 58, 74, 75, 91, 92, 108, 109, 125, 126, 142, 143, 202, 269, 348], "base": [6, 23, 40, 57, 74, 91, 108, 125, 142, 237, 324, 348], "method": [6, 7, 23, 24, 40, 41, 57, 58, 74, 75, 91, 92, 108, 109, 125, 126, 142, 143, 159, 160, 199, 237, 249, 348], "inherit": [6, 23, 40, 57, 74, 91, 108, 125, 142], "convert": [7, 18, 19, 24, 35, 36, 41, 52, 53, 58, 69, 70, 75, 86, 87, 92, 103, 104, 109, 120, 121, 126, 137, 138, 143, 235, 241, 277, 278, 293, 294, 299, 300, 301, 302, 328], "instanc": [7, 12, 13, 24, 29, 30, 41, 46, 47, 58, 63, 64, 75, 80, 81, 92, 97, 98, 109, 114, 115, 126, 131, 132, 143, 152, 227, 228, 287, 288], "string": [7, 13, 19, 24, 30, 36, 41, 47, 53, 58, 64, 70, 75, 81, 87, 92, 98, 104, 109, 115, 121, 126, 132, 138, 143, 228, 235, 241, 278, 294, 328], "thi": [7, 11, 12, 13, 22, 24, 28, 29, 30, 39, 41, 45, 46, 47, 56, 58, 62, 63, 64, 73, 75, 79, 80, 81, 90, 92, 96, 97, 98, 107, 109, 113, 114, 115, 124, 126, 130, 131, 132, 141, 143, 156, 159, 160, 199, 226, 227, 228, 229, 237, 249, 292, 296, 306, 307, 319, 335, 357], "exist": [7, 24, 41, 58, 75, 92, 109, 126, 143, 162, 163, 178, 179, 190, 191, 202, 219, 220, 244, 249, 250, 265, 309, 310, 311, 321, 322, 340, 341], "net": [7, 24, 41, 58, 75, 92, 109, 126, 143, 355], "compat": [7, 24, 41, 58, 75, 92, 109, 126, 143, 261, 352, 353], "when": [7, 24, 41, 58, 75, 92, 109, 126, 143, 162, 190, 321], "us": [7, 17, 22, 24, 34, 39, 41, 51, 56, 58, 68, 73, 75, 85, 90, 92, 102, 107, 109, 119, 124, 126, 136, 141, 143, 145, 146, 162, 163, 178, 179, 183, 186, 190, 191, 202, 219, 220, 224, 229, 231, 237, 239, 254, 268, 283, 296, 304, 305, 306, 307, 319, 321, 322, 340, 341, 346, 347, 355, 357], "ironpython": [7, 24, 41, 58, 75, 92, 109, 126, 143], "implicit": [7, 24, 41, 58, 75, 92, 109, 126, 143], "convers": [7, 24, 41, 58, 75, 92, 109, 126, 143], "usual": [7, 24, 41, 58, 75, 92, 109, 126, 143], "take": [7, 24, 41, 58, 75, 92, 109, 126, 143, 183, 195, 224, 323, 346], "place": [7, 24, 41, 58, 75, 92, 109, 126, 143, 226, 268, 277, 278, 304, 305, 308, 347, 352, 353], "cpython": [7, 24, 41, 58, 75, 92, 109, 126, 143], "kick": [7, 24, 41, 58, 75, 92, 109, 126, 143], "its": [7, 18, 19, 24, 35, 36, 41, 52, 53, 58, 69, 70, 75, 86, 87, 92, 103, 104, 109, 120, 121, 126, 137, 138, 143, 152, 185, 206, 223, 224, 235, 269, 286, 287, 293, 294, 330, 345, 346], "default": [7, 11, 18, 19, 24, 28, 35, 36, 41, 45, 52, 53, 58, 62, 69, 70, 75, 79, 86, 87, 92, 96, 103, 104, 109, 113, 120, 121, 126, 130, 137, 138, 143, 156, 161, 162, 178, 179, 213, 214, 215, 216, 219, 220, 229, 230, 235, 241, 268, 278, 293, 294, 296, 302, 309, 310, 311, 313, 314, 315, 316, 328, 340, 347], "print": [7, 18, 19, 24, 35, 36, 41, 52, 53, 58, 69, 70, 75, 86, 87, 92, 103, 104, 109, 120, 121, 126, 137, 138, 143, 291, 293, 294], "self": [7, 24, 41, 58, 75, 92, 109, 126, 143, 276], "gettyp": [7, 24, 41, 58, 75, 92, 109, 126, 143], "fullnam": [7, 24, 41, 58, 75, 92, 109, 126, 143], "similar": [7, 24, 41, 58, 75, 92, 109, 126, 143], "overrid": [7, 24, 41, 58, 75, 92, 109, 126, 143], "object": [7, 11, 12, 13, 18, 19, 22, 24, 28, 29, 30, 35, 36, 39, 41, 45, 46, 47, 52, 53, 56, 58, 62, 63, 64, 69, 70, 73, 75, 79, 80, 81, 86, 87, 90, 92, 96, 97, 98, 103, 104, 107, 109, 113, 114, 115, 120, 121, 124, 126, 130, 131, 132, 137, 138, 141, 143, 145, 146, 156, 157, 159, 161, 162, 178, 190, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 276, 279, 285, 286, 290, 292, 293, 294, 297, 298, 313, 319, 321, 340, 348], "fix": [7, 24, 41, 58, 75, 92, 109, 126, 143, 152, 281, 285, 286, 350, 351], "make": [7, 11, 24, 28, 41, 45, 58, 62, 75, 79, 92, 96, 109, 113, 126, 130, 143, 156, 199], "rhino": [7, 24, 41, 58, 75, 92, 109, 126, 143], "grasshopp": [7, 24, 41, 58, 75, 92, 109, 126, 143], "displai": [7, 24, 41, 58, 75, 92, 109, 126, 143], "proper": [7, 24, 41, 58, 75, 92, 109, 126, 143], "represent": [7, 18, 19, 24, 35, 36, 41, 52, 53, 58, 69, 70, 75, 86, 87, 92, 103, 104, 109, 120, 121, 126, 137, 138, 143, 293, 294], "ar": [7, 24, 41, 58, 75, 92, 109, 126, 143, 186, 187, 231, 237, 260, 263, 265, 287, 288, 296, 301, 320, 333, 347, 350], "connect": [7, 24, 41, 58, 75, 92, 109, 126, 143, 153, 154, 155, 185, 229, 231, 237, 239, 256, 266, 296, 326, 327, 347, 350, 351, 357], "panel": [7, 24, 41, 58, 75, 92, 109, 126, 143], "other": [7, 24, 41, 58, 75, 92, 109, 126, 143, 237, 266, 268, 335, 357], "type": [7, 11, 12, 13, 22, 24, 28, 29, 30, 39, 41, 45, 46, 47, 56, 58, 62, 63, 64, 73, 75, 79, 80, 81, 90, 92, 96, 97, 98, 107, 109, 113, 114, 115, 124, 126, 130, 131, 132, 141, 143, 145, 156, 161, 189, 202, 212, 227, 228, 269, 319], "output": [7, 24, 41, 58, 75, 92, 109, 126, 143], "cl": [11, 28, 45, 62, 79, 96, 113, 130, 156, 161], "none": [11, 28, 45, 62, 79, 96, 113, 130, 145, 146, 151, 152, 156, 157, 159, 160, 161, 162, 163, 167, 178, 179, 182, 186, 187, 190, 191, 219, 220, 223, 226, 229, 230, 231, 233, 235, 239, 241, 244, 254, 265, 268, 277, 278, 279, 280, 281, 282, 284, 285, 286, 296, 297, 298, 302, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 328, 340, 341, 345, 347, 350, 351], "an": [11, 12, 13, 18, 19, 22, 28, 29, 30, 35, 36, 39, 45, 46, 47, 52, 53, 56, 62, 63, 64, 69, 70, 73, 79, 80, 81, 86, 87, 90, 96, 97, 98, 103, 104, 107, 113, 114, 115, 120, 121, 124, 130, 131, 132, 137, 138, 141, 145, 146, 152, 156, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 176, 178, 179, 190, 219, 220, 227, 228, 231, 235, 257, 260, 276, 288, 293, 294, 296, 297, 302, 309, 319, 321, 335, 340, 341, 357], "independ": [11, 28, 45, 62, 79, 96, 113, 130, 156], "data": [11, 12, 13, 17, 18, 19, 22, 23, 28, 29, 30, 34, 35, 36, 39, 45, 46, 47, 51, 52, 53, 56, 62, 63, 64, 68, 69, 70, 73, 79, 80, 81, 85, 86, 87, 90, 96, 97, 98, 102, 103, 104, 107, 113, 114, 115, 119, 120, 121, 124, 130, 131, 132, 136, 137, 138, 141, 151, 156, 182, 183, 218, 223, 224, 227, 228, 231, 232, 233, 239, 270, 283, 293, 294, 296, 306, 307, 319, 339, 345, 346], "paramet": [11, 12, 13, 17, 18, 19, 22, 28, 29, 30, 34, 35, 36, 39, 45, 46, 47, 51, 52, 53, 56, 62, 63, 64, 68, 69, 70, 73, 79, 80, 81, 85, 86, 87, 90, 96, 97, 98, 102, 103, 104, 107, 113, 114, 115, 119, 120, 121, 124, 130, 131, 132, 136, 137, 138, 141, 142, 145, 146, 147, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 259, 266, 267, 268, 269, 270, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 350, 351, 352, 353], "compa": [11, 12, 13, 17, 28, 29, 30, 34, 45, 46, 47, 51, 62, 63, 64, 68, 79, 80, 81, 85, 96, 97, 98, 102, 113, 114, 115, 119, 130, 131, 132, 136, 146, 152, 156, 161, 165, 166, 169, 172, 174, 176, 185, 192, 193, 194, 200, 202, 207, 208, 209, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 268, 269, 270, 276, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 302, 304, 305, 312, 313, 330, 334, 336, 337, 344, 347, 351], "option": [11, 17, 18, 19, 28, 34, 35, 36, 45, 51, 52, 53, 62, 68, 69, 70, 79, 85, 86, 87, 96, 102, 103, 104, 113, 119, 120, 121, 130, 136, 137, 138, 142, 145, 146, 147, 152, 155, 156, 158, 161, 162, 163, 164, 172, 173, 175, 178, 179, 182, 183, 190, 191, 195, 199, 202, 205, 207, 211, 213, 214, 215, 216, 218, 219, 220, 223, 224, 229, 230, 231, 235, 238, 239, 241, 254, 268, 269, 276, 277, 278, 283, 285, 286, 287, 290, 292, 293, 294, 296, 302, 303, 313, 314, 315, 316, 321, 322, 323, 327, 328, 333, 335, 338, 339, 340, 341, 345, 346, 347, 350, 351], "The": [11, 12, 13, 18, 19, 22, 28, 29, 30, 35, 36, 39, 45, 46, 47, 52, 53, 56, 62, 63, 64, 69, 70, 73, 79, 80, 81, 86, 87, 90, 96, 97, 98, 103, 104, 107, 113, 114, 115, 120, 121, 124, 130, 131, 132, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 259, 260, 266, 267, 268, 269, 271, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 357], "return": [11, 12, 13, 17, 19, 22, 28, 29, 30, 34, 36, 39, 45, 46, 47, 51, 53, 56, 62, 63, 64, 68, 70, 73, 79, 80, 81, 85, 87, 90, 96, 97, 98, 102, 104, 107, 113, 114, 115, 119, 121, 124, 130, 131, 132, 136, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 350, 351, 352, 353], "current": [11, 28, 45, 62, 79, 96, 113, 130, 145, 146, 156, 268, 356], "classmethod": [12, 13, 22, 29, 30, 39, 46, 47, 56, 63, 64, 73, 80, 81, 90, 97, 98, 107, 114, 115, 124, 131, 132, 141, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 319], "filepath": [12, 18, 29, 35, 46, 52, 63, 69, 80, 86, 97, 103, 114, 120, 131, 137, 227, 231, 232, 233, 239, 293, 296, 297, 298, 302], "construct": [12, 13, 22, 29, 30, 39, 46, 47, 56, 63, 64, 73, 80, 81, 90, 97, 98, 107, 114, 115, 124, 131, 132, 141, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 284, 319, 335], "from": [12, 13, 17, 29, 30, 34, 46, 47, 51, 63, 64, 68, 80, 81, 85, 97, 98, 102, 114, 115, 119, 131, 132, 136, 146, 157, 159, 160, 161, 185, 186, 187, 197, 199, 202, 212, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 268, 269, 270, 276, 278, 279, 283, 284, 288, 292, 304, 305, 330, 351, 356, 357], "json": [12, 13, 18, 19, 29, 30, 35, 36, 46, 47, 52, 53, 63, 64, 69, 70, 80, 81, 86, 87, 97, 98, 103, 104, 114, 115, 120, 121, 131, 132, 137, 138, 227, 228, 293, 294], "file": [12, 18, 29, 35, 46, 52, 63, 69, 80, 86, 97, 103, 114, 120, 131, 137, 227, 231, 232, 233, 239, 293, 296, 297, 298, 302, 357], "str": [12, 13, 17, 18, 19, 29, 30, 34, 35, 36, 46, 47, 51, 52, 53, 63, 64, 68, 69, 70, 80, 81, 85, 86, 87, 97, 98, 102, 103, 104, 114, 115, 119, 120, 121, 131, 132, 136, 137, 138, 142, 145, 146, 162, 163, 164, 178, 179, 182, 183, 190, 191, 195, 218, 219, 220, 223, 224, 227, 228, 229, 231, 232, 233, 238, 239, 241, 283, 290, 291, 293, 294, 296, 297, 298, 302, 309, 310, 311, 314, 315, 316, 321, 322, 323, 328, 339, 340, 341, 345, 346], "path": [12, 18, 29, 35, 46, 52, 63, 69, 80, 86, 97, 103, 114, 120, 131, 137, 227, 231, 232, 233, 239, 293, 296, 297, 298, 302], "contain": [12, 13, 29, 30, 46, 47, 63, 64, 80, 81, 97, 98, 114, 115, 131, 132, 178, 179, 219, 220, 227, 228, 249, 341], "ha": [12, 13, 29, 30, 46, 47, 63, 64, 80, 81, 97, 98, 114, 115, 131, 132, 227, 228, 255, 256, 258, 356], "correct": [12, 13, 29, 30, 46, 47, 63, 64, 80, 81, 97, 98, 114, 115, 131, 132, 227, 228], "schema": [12, 13, 22, 29, 30, 39, 46, 47, 56, 63, 64, 73, 80, 81, 90, 97, 98, 107, 114, 115, 124, 131, 132, 141, 227, 228, 319], "rais": [12, 13, 29, 30, 46, 47, 63, 64, 80, 81, 97, 98, 114, 115, 131, 132, 145, 152, 162, 163, 178, 179, 190, 191, 213, 214, 215, 216, 219, 220, 227, 228, 244, 285, 286, 287, 288, 290, 292, 309, 310, 311, 321, 322, 340, 341], "typeerror": [12, 13, 29, 30, 46, 47, 63, 64, 80, 81, 97, 98, 114, 115, 131, 132, 145, 227, 228], "If": [12, 13, 17, 18, 19, 29, 30, 34, 35, 36, 46, 47, 51, 52, 53, 63, 64, 68, 69, 70, 80, 81, 85, 86, 87, 97, 98, 102, 103, 104, 114, 115, 119, 120, 121, 131, 132, 136, 137, 138, 145, 146, 152, 161, 162, 163, 167, 172, 175, 178, 179, 182, 183, 190, 191, 207, 213, 214, 215, 216, 218, 219, 220, 223, 224, 227, 228, 244, 254, 268, 276, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 296, 302, 303, 309, 310, 311, 321, 322, 327, 335, 339, 340, 341, 345, 346], "i": [12, 13, 22, 29, 30, 39, 46, 47, 56, 63, 64, 73, 80, 81, 90, 97, 98, 107, 114, 115, 124, 131, 132, 141, 145, 146, 152, 160, 162, 163, 167, 172, 175, 178, 179, 182, 183, 190, 191, 197, 199, 202, 207, 213, 214, 215, 216, 218, 219, 220, 223, 224, 226, 227, 228, 229, 231, 235, 237, 239, 241, 244, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 278, 284, 285, 286, 290, 292, 296, 302, 304, 305, 308, 313, 319, 321, 322, 328, 339, 340, 341, 342, 345, 346, 347, 355, 356, 357], "static": [14, 16, 31, 33, 48, 50, 65, 67, 82, 84, 99, 101, 116, 118, 133, 135], "geometri": [14, 31, 48, 65, 82, 99, 116, 133, 165, 166, 169, 172, 174, 176, 192, 193, 194, 200, 207, 208, 209, 210, 238, 268, 276, 282, 284, 304, 305, 330, 334, 336, 337, 344, 350], "kwarg": [14, 31, 48, 65, 82, 99, 116, 133, 182, 223, 238, 296, 297, 298, 302, 345], "gtype": [16, 33, 50, 67, 84, 101, 118, 135], "ctype": [16, 33, 50, 67, 84, 101, 118, 135], "as_str": [17, 34, 51, 68, 85, 102, 119, 136, 283], "fals": [17, 18, 19, 34, 35, 36, 51, 52, 53, 68, 69, 70, 85, 86, 87, 102, 103, 104, 119, 120, 121, 136, 137, 138, 152, 161, 175, 182, 183, 218, 223, 224, 229, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 283, 287, 293, 294, 296, 302, 303, 327, 335, 339, 345, 346], "comput": [17, 34, 51, 68, 85, 102, 119, 136, 147, 155, 158, 188, 192, 193, 195, 199, 202, 203, 204, 207, 209, 269, 283, 320, 330, 331, 332, 334, 350, 351, 355], "hash": [17, 34, 51, 68, 85, 102, 119, 136, 283], "comparison": [17, 34, 51, 68, 85, 102, 119, 136, 283], "dure": [17, 34, 51, 68, 85, 102, 119, 136, 283], "version": [17, 34, 51, 68, 85, 102, 119, 136, 283, 356], "control": [17, 34, 51, 68, 85, 102, 119, 136, 283], "algorithm": [17, 34, 51, 68, 85, 102, 119, 136, 186, 229, 283, 335], "bool": [17, 18, 19, 34, 35, 36, 51, 52, 53, 68, 69, 70, 85, 86, 87, 102, 103, 104, 119, 120, 121, 136, 137, 138, 152, 161, 175, 182, 183, 207, 218, 223, 224, 229, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 283, 287, 292, 293, 294, 296, 302, 303, 327, 335, 339, 345, 346], "true": [17, 18, 19, 34, 35, 36, 51, 52, 53, 68, 69, 70, 85, 86, 87, 102, 103, 104, 119, 120, 121, 136, 137, 138, 152, 161, 182, 183, 202, 207, 218, 223, 224, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 283, 284, 287, 292, 293, 294, 296, 302, 303, 327, 335, 339, 345, 346, 351], "digest": [17, 34, 51, 68, 85, 102, 119, 136, 283], "hexadecim": [17, 34, 51, 68, 85, 102, 119, 136, 283], "format": [17, 34, 51, 68, 85, 102, 119, 136, 147, 155, 158, 202, 269, 283, 291, 302], "rather": [17, 34, 51, 68, 85, 102, 119, 136, 283], "than": [17, 34, 51, 68, 85, 102, 119, 136, 145, 146, 283, 347], "byte": [17, 34, 51, 68, 85, 102, 119, 136, 283], "exampl": [17, 34, 51, 68, 85, 102, 119, 136, 146, 161, 202, 268, 269, 270, 276, 278, 283, 284, 288, 292, 302, 304, 305, 335, 350, 351, 355], "import": [17, 34, 51, 68, 85, 102, 119, 136, 146, 161, 202, 268, 269, 270, 276, 278, 283, 284, 288, 292, 304, 305, 351], "mesh": [17, 34, 51, 68, 85, 102, 119, 136, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 177, 180, 185, 189, 199, 202, 212, 218, 221, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 249, 250, 251, 252, 255, 256, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 312, 313, 324, 335, 339, 342, 347, 351, 352, 353], "from_obj": [17, 34, 51, 68, 85, 102, 119, 136, 161, 278, 283, 288], "get": [17, 34, 51, 68, 85, 102, 119, 136, 161, 162, 163, 178, 179, 182, 183, 190, 191, 219, 220, 223, 224, 237, 278, 283, 288, 321, 322, 340, 341, 345, 346, 356], "face": [17, 34, 51, 68, 85, 102, 119, 136, 145, 153, 159, 161, 167, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 236, 237, 240, 242, 243, 244, 248, 250, 254, 259, 260, 261, 263, 265, 268, 270, 273, 277, 278, 283, 285, 288, 289, 296, 302, 303, 310, 313, 315, 324, 327, 335, 336, 339], "obj": [17, 34, 51, 68, 85, 102, 119, 136, 161, 231, 278, 283, 288, 296], "v1": [17, 34, 51, 68, 85, 102, 119, 136, 283], "v2": [17, 34, 51, 68, 85, 102, 119, 136, 283], "vertex_attribut": [17, 34, 51, 68, 85, 102, 119, 136, 162, 163, 178, 179, 190, 191, 283, 311, 340, 341], "vertex_sampl": [17, 34, 51, 68, 85, 102, 119, 136, 173, 211, 283], "1": [17, 20, 34, 51, 54, 68, 71, 85, 88, 102, 105, 119, 122, 136, 139, 145, 146, 152, 172, 173, 186, 187, 202, 205, 211, 213, 214, 215, 216, 268, 269, 270, 276, 283, 284, 287, 288, 292, 304, 305, 324, 333, 338, 350, 351, 352], "0": [17, 20, 34, 51, 54, 68, 71, 85, 88, 102, 105, 119, 122, 136, 139, 146, 152, 172, 199, 202, 268, 269, 270, 276, 283, 284, 285, 286, 287, 288, 292, 304, 305, 350, 351, 352], "z": [17, 34, 51, 68, 85, 102, 119, 136, 146, 195, 234, 278, 283, 323], "v3": [17, 34, 51, 68, 85, 102, 119, 136, 283], "pretti": [18, 19, 35, 36, 52, 53, 69, 70, 86, 87, 103, 104, 120, 121, 137, 138, 293, 294], "nativ": [18, 19, 35, 36, 52, 53, 69, 70, 86, 87, 103, 104, 120, 121, 137, 138, 293, 294], "save": [18, 19, 35, 36, 52, 53, 69, 70, 86, 87, 103, 104, 120, 121, 137, 138, 293, 294], "damp": [20, 54, 71, 88, 105, 122, 139, 285, 286, 350, 352], "valid": [22, 39, 56, 73, 90, 107, 124, 141, 265, 319], "against": [22, 39, 56, 73, 90, 107, 124, 141, 319], "": [22, 39, 56, 73, 90, 107, 124, 141, 302, 319], "raw": [22, 39, 56, 73, 90, 107, 124, 141, 319], "can": [22, 39, 56, 73, 90, 107, 124, 141, 159, 160, 182, 202, 223, 276, 319, 345, 356], "__from_data__": [22, 39, 56, 73, 90, 107, 124, 141, 319], "ani": [22, 39, 56, 73, 90, 107, 124, 141, 145, 146, 163, 178, 179, 182, 183, 191, 218, 219, 220, 223, 224, 238, 261, 278, 285, 286, 290, 314, 315, 316, 319, 322, 339, 340, 341, 345, 346, 357], "all": [23, 151, 157, 161, 163, 170, 175, 179, 180, 187, 191, 202, 203, 204, 220, 221, 226, 245, 246, 247, 248, 263, 265, 277, 278, 279, 296, 302, 313, 322, 326, 331, 332, 342, 351, 357], "extens": 142, "attribut": [142, 145, 146, 162, 163, 178, 179, 182, 183, 190, 191, 218, 219, 220, 223, 224, 309, 310, 311, 314, 315, 316, 317, 318, 321, 322, 339, 340, 341, 345, 346], "relat": [142, 186], "form": [142, 182, 186, 196, 223, 229, 260, 317, 318, 345, 355], "find": [142, 153, 154, 167, 170, 175, 180, 181, 186, 187, 221, 222, 226, 229, 242, 243, 244, 245, 246, 247, 248, 317, 318, 326, 342, 343, 352, 353], "tensil": [142, 355], "surfac": [142, 355], "structur": [142, 177, 270, 306, 307, 355], "name": [142, 145, 146, 162, 163, 178, 179, 182, 190, 191, 219, 220, 223, 309, 310, 311, 314, 315, 316, 321, 322, 340, 341, 345], "cabl": [142, 355], "densiti": [142, 351, 352, 353], "float": [142, 144, 149, 150, 152, 168, 171, 172, 188, 189, 195, 197, 199, 212, 229, 230, 234, 235, 237, 240, 254, 271, 275, 276, 285, 286, 287, 292, 295, 299, 300, 301, 303, 320, 323, 324, 350, 351], "calcul": [144, 149, 150, 184, 271, 275], "axi": [144, 202], "align": 144, "bound": [144, 275], "box": [144, 268, 275, 284], "list": [144, 145, 147, 148, 150, 152, 153, 154, 155, 158, 163, 170, 171, 173, 175, 177, 178, 179, 180, 181, 185, 187, 191, 195, 196, 201, 202, 205, 206, 209, 211, 217, 219, 220, 221, 222, 225, 229, 234, 235, 237, 240, 245, 246, 247, 248, 253, 254, 269, 270, 271, 275, 278, 280, 281, 285, 286, 289, 295, 299, 300, 301, 303, 312, 313, 322, 323, 326, 327, 329, 333, 335, 338, 340, 341, 342, 343, 344, 350, 351], "xyz": [144, 164, 171, 195, 202, 234, 235, 240, 254, 269, 275, 278, 303, 323, 351], "coordin": [144, 150, 164, 171, 195, 229, 234, 235, 237, 240, 254, 271, 275, 295, 302, 303, 323, 350, 351], "8": [144, 236, 268, 275], "point": [144, 152, 164, 166, 172, 174, 192, 193, 209, 229, 234, 240, 265, 269, 275, 282, 284, 295, 299, 300, 301, 334, 337, 344], "defin": [144, 197, 208, 235, 269, 275, 285, 286, 288, 295, 300, 301], "vertic": [145, 148, 152, 154, 157, 159, 160, 161, 187, 195, 196, 197, 202, 209, 217, 218, 225, 230, 237, 240, 241, 246, 258, 263, 265, 268, 269, 274, 278, 279, 280, 281, 285, 286, 288, 289, 296, 299, 303, 313, 331, 332, 333, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351], "fkei": [145, 159, 188, 189, 192, 193, 195, 196, 197, 198, 199, 201, 202, 206, 207, 209, 212, 213, 214, 215, 216, 217, 218, 250, 254, 288, 313, 324], "attr_dict": [145, 146, 314, 315, 316], "kwattr": [145, 146, 314, 315, 316], "add": [145, 146, 268], "int": [145, 146, 148, 152, 153, 154, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 266, 267, 268, 270, 272, 273, 274, 278, 280, 281, 282, 285, 286, 287, 288, 289, 303, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351], "A": [145, 146, 152, 161, 163, 173, 178, 179, 180, 182, 191, 199, 205, 208, 211, 219, 220, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 253, 260, 261, 263, 265, 269, 270, 285, 286, 290, 295, 300, 301, 312, 313, 314, 315, 316, 322, 328, 329, 338, 340, 341, 342, 345, 357], "vertex": [145, 146, 152, 159, 160, 162, 183, 196, 197, 202, 213, 214, 215, 216, 217, 237, 240, 252, 253, 254, 260, 266, 267, 269, 276, 282, 285, 286, 287, 288, 302, 303, 311, 312, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 341, 342, 345, 346, 350], "kei": [145, 146, 160, 178, 179, 182, 189, 190, 191, 197, 205, 212, 213, 214, 215, 216, 219, 220, 223, 240, 241, 249, 251, 252, 254, 259, 266, 267, 278, 287, 288, 310, 311, 312, 314, 315, 316, 320, 321, 322, 323, 324, 325, 327, 328, 330, 333, 334, 335, 336, 337, 339, 340, 341, 342, 345], "dict": [145, 146, 163, 179, 182, 183, 191, 218, 220, 223, 224, 238, 240, 241, 253, 265, 290, 309, 310, 311, 314, 315, 316, 322, 328, 329, 339, 341, 345, 346], "dictionari": [145, 146, 163, 191, 240, 241, 253, 314, 315, 316, 322, 328, 329], "addit": [145, 146, 175, 182, 183, 218, 223, 224, 254, 290, 339, 345, 346], "compil": [145, 146, 314, 315, 316], "remain": [145, 146, 159, 160, 314, 315, 316], "argument": [145, 146, 182, 223, 238, 285, 286, 290, 314, 315, 316, 345], "provid": [145, 146, 161, 163, 182, 191, 223, 285, 286, 341, 345, 357], "unhash": 145, "add_vertex": [145, 159, 160, 278], "delete_fac": [145, 146, 160, 161], "delete_vertex": [145, 146, 157, 159, 279], "note": [145, 146, 159, 160, 186, 199, 202, 226, 231, 269, 276, 302, 309, 310, 311, 314, 315, 316, 333, 335], "one": [145, 146, 167, 186, 260, 266], "gener": [145, 146, 238, 276, 292], "automat": [145, 146, 229], "integ": [145, 146], "increment": [145, 146], "highest": [145, 146, 203, 331], "valu": [145, 146, 162, 163, 172, 178, 179, 182, 190, 191, 199, 219, 220, 223, 229, 230, 276, 287, 292, 302, 309, 310, 311, 314, 315, 316, 321, 322, 340, 341, 345, 347], "so": [145, 146, 357], "far": [145, 146], "higher": [145, 146], "updat": [145, 146, 314, 315, 316, 317, 318, 350, 352, 353], "accordingli": [145, 146], "identifi": [146, 152, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 266, 267, 270, 282, 287, 289, 309, 310, 311, 313, 320, 321, 322, 323, 325, 327, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346], "add_fac": [146, 159, 160], "x": [146, 195, 230, 278, 323], "y": [146, 195, 230, 278, 323], "2": [146, 186, 187, 199, 224, 268, 270, 276, 284, 288, 292, 346, 351], "rtype": [147, 155, 158, 202, 269], "arrai": [147, 155, 158, 202, 269, 329], "adjac": [147, 167, 186, 187, 261], "matrix": [147, 155, 158, 202, 269], "liter": [147, 155, 158, 202, 269, 290], "csc": [147, 155, 158, 202, 269], "csr": [147, 155, 158, 202, 269], "coo": [147, 155, 158, 202, 269], "result": [147, 155, 158, 202, 249, 269, 284, 317, 318, 335, 350, 351], "like": [147, 155, 158, 202, 269], "total": 149, "edg": [152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 189, 199, 206, 218, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 260, 263, 269, 270, 272, 277, 287, 288, 289, 309, 312, 314, 317, 326, 339, 350, 351], "t": [152, 172, 265, 268, 269, 287, 304, 305, 335], "5": [152, 172, 270, 278, 285, 286, 287], "allow_boundari": [152, 287], "collaps": 152, "first": [152, 183, 186, 187, 229, 288, 342], "second": [152, 183, 186, 187, 288], "intermedi": 152, "tupl": [152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 201, 218, 223, 224, 229, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 257, 284, 287, 288, 289, 295, 309, 312, 326, 339, 345, 346, 350, 351], "determin": 152, "where": [152, 202, 313], "start": [152, 164, 170, 174, 175, 229, 242, 243, 245, 246, 247, 248, 295, 335], "end": [152, 164, 166, 202, 229, 269, 295, 335], "between": [152, 189, 199, 202, 287, 288, 296, 350, 351], "allow": [152, 199], "involv": 152, "boundari": [152, 161, 167, 180, 181, 221, 222, 237, 244, 257, 259, 267, 287, 335, 342, 343], "should": [152, 164, 182, 183, 195, 223, 224, 234, 254, 277, 287, 290, 292, 323, 345, 346], "stai": 152, "valueerror": [152, 213, 214, 215, 216, 287, 288, 290, 292], "part": [152, 185, 202, 213, 214, 215, 216, 250, 251], "group": [153, 154, 221, 357], "remov": [157, 159, 160, 237, 278, 279], "unus": [157, 279], "degre": [158, 203, 204, 263, 269, 276, 325, 331, 332], "delet": [159, 160, 229], "In": [159, 160, 229, 276], "some": [159, 160, 335], "case": [159, 160, 202, 229, 269, 276, 296], "disconnect": [159, 160], "after": [159, 160, 213, 216, 242, 268, 285, 286, 288], "applic": [159, 160], "To": [159, 160, 356], "well": [159, 160, 352, 353], "combin": [159, 160, 195, 323], "cull": [159, 160], "cull_vertic": [159, 160], "everyth": 160, "attach": 160, "include_boundari": 161, "whether": [161, 357], "includ": [161, 164, 327, 333, 357], "creat": [161, 254, 288], "origin": [161, 276, 284, 292, 335], "11": 161, "6": [161, 202, 236, 268, 269, 270, 304, 305, 351], "7": [161, 270], "quads_to_triangl": [161, 302], "subdivid": [161, 270], "corner": [161, 196, 235, 290], "set": [162, 163, 178, 179, 182, 183, 190, 191, 219, 220, 223, 224, 234, 237, 280, 281, 282, 309, 310, 311, 321, 322, 340, 341, 345, 346], "pair": [162, 163, 182, 191, 223, 229, 241, 253, 295, 314, 315, 316, 322, 328, 329, 345, 350], "function": [162, 163, 178, 179, 182, 183, 190, 191, 219, 220, 223, 224, 226, 284, 285, 286, 296, 321, 322, 340, 341, 345, 346, 350, 352, 353], "setter": [162, 163, 178, 179, 190, 191, 219, 220, 321, 322, 340, 341], "keyerror": [162, 163, 178, 179, 190, 191, 219, 220, 244, 309, 310, 311, 321, 322, 340, 341], "doe": [162, 163, 178, 179, 190, 191, 219, 220, 226, 244, 288, 309, 310, 311, 321, 322, 340, 341], "edges_attribut": [162, 163, 219, 220, 309, 340, 341], "unset_edge_attribut": [162, 310, 311], "face_attribut": [162, 163, 178, 179, 219, 220, 310, 321, 322], "multipl": [163, 178, 179, 191, 219, 220, 322, 340, 341, 344], "empti": [163, 179, 191, 220, 255, 256, 258, 322, 341], "correspond": [163, 175, 179, 186, 191, 220, 241, 244, 253, 265, 289, 314, 315, 316, 322, 328, 329, 341], "ax": [164, 195, 323], "along": [164, 172, 195, 287, 312, 323], "which": [164, 182, 183, 186, 187, 195, 223, 224, 254, 290, 301, 323, 345, 346], "direct": [165, 172, 226, 230, 245, 261, 276, 335], "vector": [165, 172, 176, 207, 330, 336], "two": [167, 186, 187, 260, 261, 270, 288, 350], "length": [168, 189, 197, 199, 287], "line": [169, 229, 231, 239, 284, 295, 296, 347], "same": [170, 175, 242, 243, 245, 246, 247, 248, 263, 276, 289], "loop": [170, 245, 246, 290], "given": [170, 175, 213, 214, 215, 216, 242, 243, 245, 246, 247, 248, 289, 326, 347, 352, 353], "midpoint": 171, "locat": 172, "outsid": [172, 229, 244, 327], "rang": [172, 182, 223, 345, 351], "lie": 172, "size": [173, 205, 211, 230, 288, 338], "random": [173, 211, 338], "sampl": [173, 211, 231, 338], "number": [173, 211, 230, 235, 236, 241, 263, 272, 273, 274, 278, 285, 286, 292, 328, 333, 338, 350], "face_sampl": [173, 288, 338], "return_fac": 175, "strip": [175, 247, 248, 289], "per": [178, 179, 180, 219, 220, 221, 341, 342], "request": [178, 179, 219, 220, 322], "edge_attribut": [178, 179, 190, 191, 309, 321, 322], "custom": [179, 220], "longest": [181, 222, 343], "condit": [182, 183, 223, 224, 260, 263, 265, 345, 346, 357], "certain": [182, 183, 223, 224, 241, 328, 345, 346], "min": [182, 223, 345], "max": [182, 223, 345], "yield": [182, 183, 218, 223, 224, 237, 339, 345, 346], "next": [182, 183, 213, 216, 218, 223, 224, 242, 339, 345, 346], "u": [182, 183, 287, 288], "v": [182, 183, 269, 287, 288], "vertices_wher": [182, 183, 218, 223, 224, 339, 346, 351], "faces_wher": [182, 183, 218, 224, 339, 345, 346], "vertices_where_pred": [182, 183, 223, 224, 345], "edges_where_pred": [182, 223, 224, 345, 346], "faces_where_pred": [182, 183, 223, 345, 346], "predic": [183, 224, 346], "lambda": [183, 224, 346], "callabl": [183, 224, 285, 286, 346, 350], "you": [183, 224, 346, 356], "want": [183, 224, 346], "evalu": [183, 224, 346], "3": [183, 270, 276, 292], "ot": 183, "edges_wher": [183, 218, 223, 224, 339, 345, 346], "characterist": 184, "genu": 184, "compon": 185, "f1": [186, 187], "f2": [186, 187], "half": 186, "over": [186, 187, 218, 270, 339], "separ": [186, 187], "For": [186, 302, 335], "reli": [186, 335], "forc": [186, 350, 351, 352, 353], "dualiti": 186, "inform": 186, "further": 186, "check": [186, 277], "orient": [186, 261, 275, 276], "requir": [186, 356], "area": [188, 276, 285, 320], "aspect": 189, "ratio": [189, 199], "maximum": [189, 197, 199, 203, 212, 285, 286, 331, 350], "minimum": [189, 204, 332], "refer": [189, 212, 269, 324, 352, 353, 355], "wikipedia": [189, 212], "avail": [189, 212, 231, 356], "http": [189, 212, 356], "en": [189, 212], "org": [189, 212], "wiki": [189, 212], "types_of_mesh": [189, 212], "faces_attribut": [190, 191, 310, 340, 341], "unset_face_attribut": [190, 309, 311], "center": 192, "mass": 192, "centroid": [193, 197, 202, 208, 269, 285, 286, 330, 334], "circl": 194, "triplet": 196, "dimensionless": [197, 324], "curvatur": [197, 276, 324], "deviat": [197, 199, 212], "best": [197, 277], "fit": [197, 357], "plane": [197, 208, 284], "divid": 197, "averag": [197, 199, 271, 336], "count": [198, 272, 273, 274, 325], "neighbor": [198, 206, 269, 286, 287, 288, 325, 330, 334, 335, 336], "maxdev": 199, "02": 199, "flat": 199, "onli": [199, 237, 260, 262, 264, 296, 302, 356], "sens": 199, "quadrilater": [199, 277], "distanc": [199, 276], "diagon": [199, 277], "practic": 199, "limit": [199, 357], "realt": 199, "manufactur": 199, "frame": [200, 290], "halfedg": [201, 242, 243, 244, 245, 246, 247, 248, 251, 265], "repres": [202, 237, 240, 299], "relationship": 202, "each": [202, 235, 260, 285, 295, 300, 301, 340, 350], "row": 202, "column": 202, "fill": 202, "zero": [202, 234], "except": [202, 285, 286], "f_": 202, "ij": [202, 269], "begin": [202, 269], "text": [202, 269, 291], "j": [202, 269], "otherwis": [202, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 292, 302, 357], "from_polyhedron": [202, 269, 304, 305], "f": [202, 236], "numpi": [202, 269, 305], "ndarrai": [202, 269, 305], "allclos": 202, "asarrai": [202, 269], "vertices_attribut": [202, 219, 220, 269, 278, 311, 321, 322, 351], "c1": 202, "dot": [202, 269], "sum": 202, "c2": 202, "face_centroid": 202, "lowest": [204, 332], "ring": [205, 333], "neighborhood": [205, 333], "across": 206, "unit": 207, "normal": [207, 208, 276, 292, 336], "polygon": [210, 212, 235, 300, 324], "edge_sampl": [211, 338], "skew": 212, "absolut": 212, "angular": 212, "idefault_edge_attributesl": 212, "angl": [212, 277], "n": [213, 214, 215, 216, 269, 288], "th": [213, 214, 215, 216], "specifi": [213, 214, 215, 216, 254, 288], "specif": [213, 214, 215, 216, 237, 249, 254, 280, 281], "index": [213, 214, 215, 216, 253, 329, 355], "descend": [213, 216], "mean": [213, 214, 215, 216], "cycl": [213, 214, 215, 216, 226, 261, 308, 327, 335], "befor": [214, 215, 243, 288], "ancestor": [214, 215], "previou": [214, 215, 243], "order": [217, 235, 289, 327, 335], "iter": [218, 285, 286, 339, 350, 352], "attr": [218, 339], "sort": 221, "match": [223, 224, 345, 346], "flip": 226, "modifi": [226, 268, 277, 278, 304, 305, 308, 347, 357], "care": 226, "about": [226, 296], "being": 226, "unifi": [226, 261, 308], "It": [226, 302], "just": 226, "revers": 226, "whatev": 226, "delete_boundary_fac": 229, "precis": [229, 231, 233, 235, 239, 241, 268, 278, 296, 302, 328, 347], "describ": [229, 231, 232, 233, 239], "most": [229, 342], "expect": [229, 335], "therefor": [229, 269, 356], "have": [229, 261, 263, 265, 276, 296, 335], "geometr": [229, 231, 239, 241, 296, 328, 347, 355], "map": [229, 231, 239, 241, 253, 296, 328, 329, 347], "dx": [230, 351], "nx": [230, 351], "dy": 230, "ny": 230, "regular": [230, 263], "grid": 230, "There": 231, "few": 231, "test": 231, "debug": 231, "faces_big": 231, "faces_revers": 231, "hypar": 231, "quadmesh": 231, "off": [232, 297], "ply": [233, 298], "delaunai": 234, "triangul": [234, 303], "seri": 235, "tol": [235, 241, 268, 278, 328], "platon": 236, "solid": 236, "4": [236, 270, 304, 305], "12": [236, 268], "20": 236, "boundary_polylin": 237, "other_polylin": 237, "polylin": [237, 301], "from_lin": 237, "extrem": 237, "discretis": 237, "curv": 237, "could": 237, "overlap": 237, "wrong": 237, "shape": [238, 352, 353], "primit": 238, "input": [238, 289, 290], "keyword": [238, 290], "pass": [238, 285, 286], "to_vertices_and_fac": 238, "stl": [239, 302], "indic": [240, 253, 277, 303, 350], "referenc": 240, "verifi": [249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "mai": 249, "produc": [249, 335], "unexpect": 249, "vertex_index": 253, "return_fkei": 254, "insert": [254, 287, 288], "newli": 254, "close": [255, 260, 268], "nake": [255, 256], "is_valid": [255, 256, 258, 260, 261, 262, 263, 264], "is_regular": [255, 256, 258, 260, 261, 262, 264, 265], "is_manifold": [255, 256, 258, 261, 262, 263, 264, 265], "is_orient": [255, 256, 258, 260, 262, 263, 264, 265], "is_empti": [255, 256, 260, 261, 262, 263, 264, 265], "is_trimesh": [255, 256, 258, 260, 261, 262, 263, 265], "is_quadmesh": [255, 256, 258, 260, 261, 263, 264, 265], "is_clos": [258, 260, 261, 262, 263, 264, 265], "manifold": [260, 261], "follow": [260, 263, 265, 269, 357], "fulfil": [260, 263, 265], "incid": [260, 263], "open": 260, "fan": 260, "e": [261, 263, 269], "consist": [262, 264], "quad": [262, 270, 277, 290], "thei": 263, "triangl": [264, 277, 302], "don": 265, "non": [265, 350], "entri": 265, "least": 266, "weld": 268, "anoth": 268, "translat": 268, "from_width_height_depth": [268, 284], "b": 268, "from_vector": 268, "transform": [268, 305, 307], "from_shap": [268, 284], "number_of_vertic": [268, 272, 273, 278], "number_of_fac": [268, 272, 274, 288], "16": 268, "laplacian": [269, 330], "time": 269, "uniform": 269, "mathbf": 269, "l": 269, "_": [269, 351], "frac": 269, "deg": 269, "nealen": 269, "igarashi": 269, "sorkin": 269, "o": 269, "alexa": 269, "m": 269, "optim": 269, "d": 269, "merg": [270, 357], "share": [270, 296], "from_vertices_and_fac": [270, 276, 292], "scheme": [270, 290], "mesh_merge_fac": 270, "face_vertic": [270, 288], "number_of_edg": [273, 274], "posit": [276, 284, 287, 292], "neg": [276, 284], "opposit": [276, 335], "both": [276, 292], "high": 276, "intersect": [276, 284], "mesh_offset": 276, "distance_point_point": 276, "dist": 276, "0x109eaad60": [276, 292], "check_angl": 277, "ad": 277, "flag": 277, "choos": 277, "duplic": 278, "clean": 278, "up": [278, 328], "affect": 278, "36": 278, "38": 278, "39": 278, "40": 278, "41": 278, "anchor": 280, "submesh": 284, "cut": 284, "do": [284, 357], "degener": 284, "mesh_slice_plan": 284, "len": [284, 351], "kmax": [285, 286, 350, 352], "100": [285, 286, 350, 352], "callback": [285, 286], "callback_arg": [285, 286], "smooth": [285, 286], "move": [285, 286], "barycent": 285, "surround": 285, "weight": [285, 336], "factor": [285, 286, 350], "user": [285, 286, 302], "execut": [285, 286], "everi": [285, 286], "free": [286, 357], "split": [287, 288, 289], "also": [287, 296], "belong": 288, "new": 288, "face_vertex_descend": 288, "25": 288, "mesh_split_fac": 288, "26": 288, "srip": 289, "catmullclark": 290, "tri": 290, "doosabin": 290, "accord": 290, "support": [290, 302], "thick": 292, "thicknen": 292, "side": 292, "unweld": [296, 312, 313], "write": [296, 297, 298, 302], "full": 296, "own": 296, "uniqu": 296, "collect": [299, 300, 301], "binari": 302, "round": 302, "written": 302, "ascii": 302, "respons": 302, "matrix_from_axis_and_angl": 304, "math": [304, 305], "pi": [304, 305], "matrix_from_axis_and_angle_numpi": 305, "copi": [306, 307, 357], "root": 308, "unset": [309, 310, 311], "unset_vertex_attribut": [309, 310, 321], "implicitli": [309, 310, 311], "back": [309, 310, 311], "store": [309, 310, 311], "update_default_vertex_attribut": [314, 315], "update_default_face_attribut": [314, 316], "overwrit": [314, 315, 316], "update_default_edge_attribut": [315, 316], "tributari": 320, "vkei": 324, "botsch": 324, "mario": 324, "et": 324, "al": 324, "process": 324, "ak": 324, "peter": 324, "crc": 324, "press": 324, "2010": 324, "include_non": 327, "index_vertex": 329, "unord": 333, "li": 335, "alwai": 335, "due": 335, "natur": 335, "around": 335, "node": 335, "doesn": 335, "dual": 335, "convent": 335, "oposit": 335, "compar": 335, "closer": 347, "forcedens": [350, 351], "tol_r": [350, 352], "001": [350, 352], "tol_disp": [350, 352], "selfweight": 350, "equilibrium": [350, 351, 352, 353, 355], "system": [350, 351], "recomput": 350, "floatnx3": [350, 351], "toler": 350, "residu": [350, 351], "displac": 350, "constrain": 350, "fd_numpi": 350, "fd_constrained_numpi": 351, "from_meshgrid": 351, "10": 351, "vertex_degre": 351, "q": 351, "1e": 351, "cablemesh": [352, 353], "equilibri": [352, 353], "rpc": [352, 353], "python": 355, "packag": 355, "activ": 355, "subject": [355, 357], "introduct": 355, "instal": 355, "tutori": 355, "api": 355, "licens": 355, "modul": 355, "pypi": 356, "yet": 356, "conda": 356, "forg": 356, "pip": 356, "latest": 356, "local": 356, "sourc": 356, "git": 356, "clone": 356, "github": 356, "com": 356, "blockresearchgroup": 356, "cd": 356, "r": 356, "dev": 356, "txt": 356, "mit": 357, "block": 357, "research": 357, "eth": 357, "zurich": 357, "permiss": 357, "herebi": 357, "grant": 357, "charg": 357, "person": 357, "obtain": 357, "softwar": 357, "associ": 357, "document": 357, "deal": 357, "without": 357, "restrict": 357, "right": 357, "publish": 357, "distribut": 357, "sublicens": 357, "sell": 357, "permit": 357, "whom": 357, "furnish": 357, "abov": 357, "copyright": 357, "notic": 357, "shall": 357, "substanti": 357, "portion": 357, "THE": 357, "AS": 357, "warranti": 357, "OF": 357, "kind": 357, "express": 357, "OR": 357, "impli": 357, "BUT": 357, "NOT": 357, "TO": 357, "merchant": 357, "FOR": 357, "particular": 357, "purpos": 357, "AND": 357, "noninfring": 357, "IN": 357, "NO": 357, "event": 357, "author": 357, "holder": 357, "BE": 357, "liabl": 357, "claim": 357, "damag": 357, "liabil": 357, "action": 357, "contract": 357, "tort": 357, "aris": 357, "out": 357, "WITH": 357}, "objects": {"compas_fd.constraints": [[6, 0, 1, "", "CircleConstraint"], [23, 0, 1, "", "Constraint"], [40, 0, 1, "", "CurveConstraint"], [57, 0, 1, "", "FrameConstraint"], [74, 0, 1, "", "LineConstraint"], [91, 0, 1, "", "PlaneConstraint"], [108, 0, 1, "", "SurfaceConstraint"], [125, 0, 1, "", "VectorConstraint"]], "compas_fd.constraints.CircleConstraint": [[7, 1, 1, "", "ToString"], [8, 1, 1, "", "compute_normal"], [9, 1, 1, "", "compute_param"], [10, 1, 1, "", "compute_tangent"], [11, 1, 1, "", "copy"], [12, 1, 1, "", "from_json"], [13, 1, 1, "", "from_jsonstring"], [14, 1, 1, "", "get_constraint_cls"], [15, 1, 1, "", "project"], [16, 1, 1, "", "register"], [17, 1, 1, "", "sha256"], [18, 1, 1, "", "to_json"], [19, 1, 1, "", "to_jsonstring"], [20, 1, 1, "", "update"], [21, 1, 1, "", "update_location_at_param"], [22, 1, 1, "", "validate_data"]], "compas_fd.constraints.Constraint": [[24, 1, 1, "", "ToString"], [25, 1, 1, "", "compute_normal"], [26, 1, 1, "", "compute_param"], [27, 1, 1, "", "compute_tangent"], [28, 1, 1, "", "copy"], [29, 1, 1, "", "from_json"], [30, 1, 1, "", "from_jsonstring"], [31, 1, 1, "", "get_constraint_cls"], [32, 1, 1, "", "project"], [33, 1, 1, "", "register"], [34, 1, 1, "", "sha256"], [35, 1, 1, "", "to_json"], [36, 1, 1, "", "to_jsonstring"], [37, 1, 1, "", "update"], [38, 1, 1, "", "update_location_at_param"], [39, 1, 1, "", "validate_data"]], "compas_fd.constraints.CurveConstraint": [[41, 1, 1, "", "ToString"], [42, 1, 1, "", "compute_normal"], [43, 1, 1, "", "compute_param"], [44, 1, 1, "", "compute_tangent"], [45, 1, 1, "", "copy"], [46, 1, 1, "", "from_json"], [47, 1, 1, "", "from_jsonstring"], [48, 1, 1, "", "get_constraint_cls"], [49, 1, 1, "", "project"], [50, 1, 1, "", "register"], [51, 1, 1, "", "sha256"], [52, 1, 1, "", "to_json"], [53, 1, 1, "", "to_jsonstring"], [54, 1, 1, "", "update"], [55, 1, 1, "", "update_location_at_param"], [56, 1, 1, "", "validate_data"]], "compas_fd.constraints.FrameConstraint": [[58, 1, 1, "", "ToString"], [59, 1, 1, "", "compute_normal"], [60, 1, 1, "", "compute_param"], [61, 1, 1, "", "compute_tangent"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "from_json"], [64, 1, 1, "", "from_jsonstring"], [65, 1, 1, "", "get_constraint_cls"], [66, 1, 1, "", "project"], [67, 1, 1, "", "register"], [68, 1, 1, "", "sha256"], [69, 1, 1, "", "to_json"], [70, 1, 1, "", "to_jsonstring"], [71, 1, 1, "", "update"], [72, 1, 1, "", "update_location_at_param"], [73, 1, 1, "", "validate_data"]], "compas_fd.constraints.LineConstraint": [[75, 1, 1, "", "ToString"], [76, 1, 1, "", "compute_normal"], [77, 1, 1, "", "compute_param"], [78, 1, 1, "", "compute_tangent"], [79, 1, 1, "", "copy"], [80, 1, 1, "", "from_json"], [81, 1, 1, "", "from_jsonstring"], [82, 1, 1, "", "get_constraint_cls"], [83, 1, 1, "", "project"], [84, 1, 1, "", "register"], [85, 1, 1, "", "sha256"], [86, 1, 1, "", "to_json"], [87, 1, 1, "", "to_jsonstring"], [88, 1, 1, "", "update"], [89, 1, 1, "", "update_location_at_param"], [90, 1, 1, "", "validate_data"]], "compas_fd.constraints.PlaneConstraint": [[92, 1, 1, "", "ToString"], [93, 1, 1, "", "compute_normal"], [94, 1, 1, "", "compute_param"], [95, 1, 1, "", "compute_tangent"], [96, 1, 1, "", "copy"], [97, 1, 1, "", "from_json"], [98, 1, 1, "", "from_jsonstring"], [99, 1, 1, "", "get_constraint_cls"], [100, 1, 1, "", "project"], [101, 1, 1, "", "register"], [102, 1, 1, "", "sha256"], [103, 1, 1, "", "to_json"], [104, 1, 1, "", "to_jsonstring"], [105, 1, 1, "", "update"], [106, 1, 1, "", "update_location_at_param"], [107, 1, 1, "", "validate_data"]], "compas_fd.constraints.SurfaceConstraint": [[109, 1, 1, "", "ToString"], [110, 1, 1, "", "compute_normal"], [111, 1, 1, "", "compute_param"], [112, 1, 1, "", "compute_tangent"], [113, 1, 1, "", "copy"], [114, 1, 1, "", "from_json"], [115, 1, 1, "", "from_jsonstring"], [116, 1, 1, "", "get_constraint_cls"], [117, 1, 1, "", "project"], [118, 1, 1, "", "register"], [119, 1, 1, "", "sha256"], [120, 1, 1, "", "to_json"], [121, 1, 1, "", "to_jsonstring"], [122, 1, 1, "", "update"], [123, 1, 1, "", "update_location_at_param"], [124, 1, 1, "", "validate_data"]], "compas_fd.constraints.VectorConstraint": [[126, 1, 1, "", "ToString"], [127, 1, 1, "", "compute_normal"], [128, 1, 1, "", "compute_param"], [129, 1, 1, "", "compute_tangent"], [130, 1, 1, "", "copy"], [131, 1, 1, "", "from_json"], [132, 1, 1, "", "from_jsonstring"], [133, 1, 1, "", "get_constraint_cls"], [134, 1, 1, "", "project"], [135, 1, 1, "", "register"], [136, 1, 1, "", "sha256"], [137, 1, 1, "", "to_json"], [138, 1, 1, "", "to_jsonstring"], [139, 1, 1, "", "update"], [140, 1, 1, "", "update_location_at_param"], [141, 1, 1, "", "validate_data"]], "compas_fd.datastructures": [[142, 0, 1, "", "CableMesh"]], "compas_fd.datastructures.CableMesh": [[143, 1, 1, "", "ToString"], [144, 1, 1, "", "aabb"], [145, 1, 1, "", "add_face"], [146, 1, 1, "", "add_vertex"], [147, 1, 1, "", "adjacency_matrix"], [148, 1, 1, "", "anchors"], [149, 1, 1, "", "area"], [150, 1, 1, "", "centroid"], [151, 1, 1, "", "clear"], [152, 1, 1, "", "collapse_edge"], [153, 1, 1, "", "connected_faces"], [154, 1, 1, "", "connected_vertices"], [155, 1, 1, "", "connectivity_matrix"], [156, 1, 1, "", "copy"], [157, 1, 1, "", "cull_vertices"], [158, 1, 1, "", "degree_matrix"], [159, 1, 1, "", "delete_face"], [160, 1, 1, "", "delete_vertex"], [161, 1, 1, "", "dual"], [162, 1, 1, "", "edge_attribute"], [163, 1, 1, "", "edge_attributes"], [164, 1, 1, "", "edge_coordinates"], [165, 1, 1, "", "edge_direction"], [166, 1, 1, "", "edge_end"], [167, 1, 1, "", "edge_faces"], [168, 1, 1, "", "edge_length"], [169, 1, 1, "", "edge_line"], [170, 1, 1, "", "edge_loop"], [171, 1, 1, "", "edge_midpoint"], [172, 1, 1, "", "edge_point"], [173, 1, 1, "", "edge_sample"], [174, 1, 1, "", "edge_start"], [175, 1, 1, "", "edge_strip"], [176, 1, 1, "", "edge_vector"], [177, 1, 1, "", "edges"], [178, 1, 1, "", "edges_attribute"], [179, 1, 1, "", "edges_attributes"], [180, 1, 1, "", "edges_on_boundaries"], [181, 1, 1, "", "edges_on_boundary"], [182, 1, 1, "", "edges_where"], [183, 1, 1, "", "edges_where_predicate"], [184, 1, 1, "", "euler"], [185, 1, 1, "", "exploded"], [186, 1, 1, "", "face_adjacency_halfedge"], [187, 1, 1, "", "face_adjacency_vertices"], [188, 1, 1, "", "face_area"], [189, 1, 1, "", "face_aspect_ratio"], [190, 1, 1, "", "face_attribute"], [191, 1, 1, "", "face_attributes"], [192, 1, 1, "", "face_center"], [193, 1, 1, "", "face_centroid"], [194, 1, 1, "", "face_circle"], [195, 1, 1, "", "face_coordinates"], [196, 1, 1, "", "face_corners"], [197, 1, 1, "", "face_curvature"], [198, 1, 1, "", "face_degree"], [199, 1, 1, "", "face_flatness"], [200, 1, 1, "", "face_frame"], [201, 1, 1, "", "face_halfedges"], [202, 1, 1, "", "face_matrix"], [203, 1, 1, "", "face_max_degree"], [204, 1, 1, "", "face_min_degree"], [205, 1, 1, "", "face_neighborhood"], [206, 1, 1, "", "face_neighbors"], [207, 1, 1, "", "face_normal"], [208, 1, 1, "", "face_plane"], [209, 1, 1, "", "face_points"], [210, 1, 1, "", "face_polygon"], [211, 1, 1, "", "face_sample"], [212, 1, 1, "", "face_skewness"], [213, 1, 1, "", "face_vertex_after"], [214, 1, 1, "", "face_vertex_ancestor"], [215, 1, 1, "", "face_vertex_before"], [216, 1, 1, "", "face_vertex_descendant"], [217, 1, 1, "", "face_vertices"], [218, 1, 1, "", "faces"], [219, 1, 1, "", "faces_attribute"], [220, 1, 1, "", "faces_attributes"], [221, 1, 1, "", "faces_on_boundaries"], [222, 1, 1, "", "faces_on_boundary"], [223, 1, 1, "", "faces_where"], [224, 1, 1, "", "faces_where_predicate"], [225, 1, 1, "", "fixed"], [226, 1, 1, "", "flip_cycles"], [227, 1, 1, "", "from_json"], [228, 1, 1, "", "from_jsonstring"], [229, 1, 1, "", "from_lines"], [230, 1, 1, "", "from_meshgrid"], [231, 1, 1, "", "from_obj"], [232, 1, 1, "", "from_off"], [233, 1, 1, "", "from_ply"], [234, 1, 1, "", "from_points"], [235, 1, 1, "", "from_polygons"], [236, 1, 1, "", "from_polyhedron"], [237, 1, 1, "", "from_polylines"], [238, 1, 1, "", "from_shape"], [239, 1, 1, "", "from_stl"], [240, 1, 1, "", "from_vertices_and_faces"], [241, 1, 1, "", "gkey_vertex"], [242, 1, 1, "", "halfedge_after"], [243, 1, 1, "", "halfedge_before"], [244, 1, 1, "", "halfedge_face"], [245, 1, 1, "", "halfedge_loop"], [246, 1, 1, "", "halfedge_loop_vertices"], [247, 1, 1, "", "halfedge_strip"], [248, 1, 1, "", "halfedge_strip_faces"], [249, 1, 1, "", "has_edge"], [250, 1, 1, "", "has_face"], [251, 1, 1, "", "has_halfedge"], [252, 1, 1, "", "has_vertex"], [253, 1, 1, "", "index_vertex"], [254, 1, 1, "", "insert_vertex"], [255, 1, 1, "", "is_closed"], [256, 1, 1, "", "is_connected"], [257, 1, 1, "", "is_edge_on_boundary"], [258, 1, 1, "", "is_empty"], [259, 1, 1, "", "is_face_on_boundary"], [260, 1, 1, "", "is_manifold"], [261, 1, 1, "", "is_orientable"], [262, 1, 1, "", "is_quadmesh"], [263, 1, 1, "", "is_regular"], [264, 1, 1, "", "is_trimesh"], [265, 1, 1, "", "is_valid"], [266, 1, 1, "", "is_vertex_connected"], [267, 1, 1, "", "is_vertex_on_boundary"], [268, 1, 1, "", "join"], [269, 1, 1, "", "laplacian_matrix"], [270, 1, 1, "", "merge_faces"], [271, 1, 1, "", "normal"], [272, 1, 1, "", "number_of_edges"], [273, 1, 1, "", "number_of_faces"], [274, 1, 1, "", "number_of_vertices"], [275, 1, 1, "", "obb"], [276, 1, 1, "", "offset"], [277, 1, 1, "", "quads_to_triangles"], [278, 1, 1, "", "remove_duplicate_vertices"], [279, 1, 1, "", "remove_unused_vertices"], [280, 1, 1, "", "set_anchors"], [281, 1, 1, "", "set_fixed"], [282, 1, 1, "", "set_vertex_point"], [283, 1, 1, "", "sha256"], [284, 1, 1, "", "slice"], [285, 1, 1, "", "smooth_area"], [286, 1, 1, "", "smooth_centroid"], [287, 1, 1, "", "split_edge"], [288, 1, 1, "", "split_face"], [289, 1, 1, "", "split_strip"], [290, 1, 1, "", "subdivided"], [291, 1, 1, "", "summary"], [292, 1, 1, "", "thickened"], [293, 1, 1, "", "to_json"], [294, 1, 1, "", "to_jsonstring"], [295, 1, 1, "", "to_lines"], [296, 1, 1, "", "to_obj"], [297, 1, 1, "", "to_off"], [298, 1, 1, "", "to_ply"], [299, 1, 1, "", "to_points"], [300, 1, 1, "", "to_polygons"], [301, 1, 1, "", "to_polylines"], [302, 1, 1, "", "to_stl"], [303, 1, 1, "", "to_vertices_and_faces"], [304, 1, 1, "", "transform"], [305, 1, 1, "", "transform_numpy"], [306, 1, 1, "", "transformed"], [307, 1, 1, "", "transformed_numpy"], [308, 1, 1, "", "unify_cycles"], [309, 1, 1, "", "unset_edge_attribute"], [310, 1, 1, "", "unset_face_attribute"], [311, 1, 1, "", "unset_vertex_attribute"], [312, 1, 1, "", "unweld_edges"], [313, 1, 1, "", "unweld_vertices"], [314, 1, 1, "", "update_default_edge_attributes"], [315, 1, 1, "", "update_default_face_attributes"], [316, 1, 1, "", "update_default_vertex_attributes"], [317, 1, 1, "", "update_edges"], [318, 1, 1, "", "update_vertices"], [319, 1, 1, "", "validate_data"], [320, 1, 1, "", "vertex_area"], [321, 1, 1, "", "vertex_attribute"], [322, 1, 1, "", "vertex_attributes"], [323, 1, 1, "", "vertex_coordinates"], [324, 1, 1, "", "vertex_curvature"], [325, 1, 1, "", "vertex_degree"], [326, 1, 1, "", "vertex_edges"], [327, 1, 1, "", "vertex_faces"], [328, 1, 1, "", "vertex_gkey"], [329, 1, 1, "", "vertex_index"], [330, 1, 1, "", "vertex_laplacian"], [331, 1, 1, "", "vertex_max_degree"], [332, 1, 1, "", "vertex_min_degree"], [333, 1, 1, "", "vertex_neighborhood"], [334, 1, 1, "", "vertex_neighborhood_centroid"], [335, 1, 1, "", "vertex_neighbors"], [336, 1, 1, "", "vertex_normal"], [337, 1, 1, "", "vertex_point"], [338, 1, 1, "", "vertex_sample"], [339, 1, 1, "", "vertices"], [340, 1, 1, "", "vertices_attribute"], [341, 1, 1, "", "vertices_attributes"], [342, 1, 1, "", "vertices_on_boundaries"], [343, 1, 1, "", "vertices_on_boundary"], [344, 1, 1, "", "vertices_points"], [345, 1, 1, "", "vertices_where"], [346, 1, 1, "", "vertices_where_predicate"], [347, 1, 1, "", "weld"]], "compas_fd.loads": [[348, 0, 1, "", "SelfweightCalculator"]], "compas_fd.loads.SelfweightCalculator": [[349, 1, 1, "", "face_matrix"]], "compas_fd.solvers": [[350, 2, 1, "", "fd_constrained_numpy"], [351, 2, 1, "", "fd_numpy"], [352, 2, 1, "", "mesh_fd_constrained_numpy"], [353, 2, 1, "", "mesh_fd_numpy"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "compas_fd": 1, "constraint": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "base": 2, "class": [2, 3, 4], "datastructur": 3, "load": 4, "solver": 5, "function": 5, "circleconstraint": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "tostr": [7, 24, 41, 58, 75, 92, 109, 126, 143], "compute_norm": [8, 25, 42, 59, 76, 93, 110, 127], "compute_param": [9, 26, 43, 60, 77, 94, 111, 128], "compute_tang": [10, 27, 44, 61, 78, 95, 112, 129], "copi": [11, 28, 45, 62, 79, 96, 113, 130, 156], "from_json": [12, 29, 46, 63, 80, 97, 114, 131, 227], "from_jsonstr": [13, 30, 47, 64, 81, 98, 115, 132, 228], "get_constraint_cl": [14, 31, 48, 65, 82, 99, 116, 133], "project": [15, 32, 49, 66, 83, 100, 117, 134], "regist": [16, 33, 50, 67, 84, 101, 118, 135], "sha256": [17, 34, 51, 68, 85, 102, 119, 136, 283], "to_json": [18, 35, 52, 69, 86, 103, 120, 137, 293], "to_jsonstr": [19, 36, 53, 70, 87, 104, 121, 138, 294], "updat": [20, 37, 54, 71, 88, 105, 122, 139], "update_location_at_param": [21, 38, 55, 72, 89, 106, 123, 140], "validate_data": [22, 39, 56, 73, 90, 107, 124, 141, 319], "curveconstraint": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "frameconstraint": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "lineconstraint": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "planeconstraint": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "surfaceconstraint": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "vectorconstraint": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "cablemesh": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347], "aabb": 144, "add_fac": 145, "add_vertex": 146, "adjacency_matrix": 147, "anchor": 148, "area": 149, "centroid": 150, "clear": 151, "collapse_edg": 152, "connected_fac": 153, "connected_vertic": 154, "connectivity_matrix": 155, "cull_vertic": 157, "degree_matrix": 158, "delete_fac": 159, "delete_vertex": 160, "dual": 161, "edge_attribut": [162, 163], "edge_coordin": 164, "edge_direct": 165, "edge_end": 166, "edge_fac": 167, "edge_length": 168, "edge_lin": 169, "edge_loop": 170, "edge_midpoint": 171, "edge_point": 172, "edge_sampl": 173, "edge_start": 174, "edge_strip": 175, "edge_vector": 176, "edg": 177, "edges_attribut": [178, 179], "edges_on_boundari": [180, 181], "edges_wher": 182, "edges_where_pred": 183, "euler": 184, "explod": 185, "face_adjacency_halfedg": 186, "face_adjacency_vertic": 187, "face_area": 188, "face_aspect_ratio": 189, "face_attribut": [190, 191], "face_cent": 192, "face_centroid": 193, "face_circl": 194, "face_coordin": 195, "face_corn": 196, "face_curvatur": 197, "face_degre": 198, "face_flat": 199, "face_fram": 200, "face_halfedg": 201, "face_matrix": [202, 349], "face_max_degre": 203, "face_min_degre": 204, "face_neighborhood": 205, "face_neighbor": 206, "face_norm": 207, "face_plan": 208, "face_point": 209, "face_polygon": 210, "face_sampl": 211, "face_skew": 212, "face_vertex_aft": 213, "face_vertex_ancestor": 214, "face_vertex_befor": 215, "face_vertex_descend": 216, "face_vertic": 217, "face": 218, "faces_attribut": [219, 220], "faces_on_boundari": [221, 222], "faces_wher": 223, "faces_where_pred": 224, "fix": 225, "flip_cycl": 226, "from_lin": 229, "from_meshgrid": 230, "from_obj": 231, "from_off": 232, "from_pli": 233, "from_point": 234, "from_polygon": 235, "from_polyhedron": 236, "from_polylin": 237, "from_shap": 238, "from_stl": 239, "from_vertices_and_fac": 240, "gkey_vertex": 241, "halfedge_aft": 242, "halfedge_befor": 243, "halfedge_fac": 244, "halfedge_loop": 245, "halfedge_loop_vertic": 246, "halfedge_strip": 247, "halfedge_strip_fac": 248, "has_edg": 249, "has_fac": 250, "has_halfedg": 251, "has_vertex": 252, "index_vertex": 253, "insert_vertex": 254, "is_clos": 255, "is_connect": 256, "is_edge_on_boundari": 257, "is_empti": 258, "is_face_on_boundari": 259, "is_manifold": 260, "is_orient": 261, "is_quadmesh": 262, "is_regular": 263, "is_trimesh": 264, "is_valid": 265, "is_vertex_connect": 266, "is_vertex_on_boundari": 267, "join": 268, "laplacian_matrix": 269, "merge_fac": 270, "normal": 271, "number_of_edg": 272, "number_of_fac": 273, "number_of_vertic": 274, "obb": 275, "offset": 276, "quads_to_triangl": 277, "remove_duplicate_vertic": 278, "remove_unused_vertic": 279, "set_anchor": 280, "set_fix": 281, "set_vertex_point": 282, "slice": 284, "smooth_area": 285, "smooth_centroid": 286, "split_edg": 287, "split_fac": 288, "split_strip": 289, "subdivid": 290, "summari": 291, "thicken": 292, "to_lin": 295, "to_obj": 296, "to_off": 297, "to_pli": 298, "to_point": 299, "to_polygon": 300, "to_polylin": 301, "to_stl": 302, "to_vertices_and_fac": 303, "transform": [304, 306], "transform_numpi": 305, "transformed_numpi": 307, "unify_cycl": 308, "unset_edge_attribut": 309, "unset_face_attribut": 310, "unset_vertex_attribut": 311, "unweld_edg": 312, "unweld_vertic": 313, "update_default_edge_attribut": 314, "update_default_face_attribut": 315, "update_default_vertex_attribut": 316, "update_edg": 317, "update_vertic": 318, "vertex_area": 320, "vertex_attribut": [321, 322], "vertex_coordin": 323, "vertex_curvatur": 324, "vertex_degre": 325, "vertex_edg": 326, "vertex_fac": 327, "vertex_gkei": 328, "vertex_index": 329, "vertex_laplacian": 330, "vertex_max_degre": 331, "vertex_min_degre": 332, "vertex_neighborhood": 333, "vertex_neighborhood_centroid": 334, "vertex_neighbor": 335, "vertex_norm": 336, "vertex_point": 337, "vertex_sampl": 338, "vertic": 339, "vertices_attribut": [340, 341], "vertices_on_boundari": [342, 343], "vertices_point": 344, "vertices_wher": 345, "vertices_where_pred": 346, "weld": 347, "selfweightcalcul": [348, 349], "fd_constrained_numpi": 350, "fd_numpi": 351, "mesh_fd_constrained_numpi": 352, "mesh_fd_numpi": 353, "exampl": 354, "compa": 355, "constrain": 355, "forc": 355, "densiti": 355, "method": 355, "tabl": 355, "content": 355, "indic": 355, "instal": 356, "stabl": 356, "develop": 356, "licens": 357, "tutori": 358}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "compas_fd": [[1, "compas-fd"]], "constraints": [[2, "constraints"]], "Base Class": [[2, "base-class"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"]], "datastructures": [[3, "datastructures"]], "loads": [[4, "loads"]], "solvers": [[5, "solvers"]], "Functions": [[5, "functions"]], "CircleConstraint": [[6, "circleconstraint"]], "CircleConstraint.ToString": [[7, "circleconstraint-tostring"]], "CircleConstraint.compute_normal": [[8, "circleconstraint-compute-normal"]], "CircleConstraint.compute_param": [[9, "circleconstraint-compute-param"]], "CircleConstraint.compute_tangent": [[10, "circleconstraint-compute-tangent"]], "CircleConstraint.copy": [[11, "circleconstraint-copy"]], "CircleConstraint.from_json": [[12, "circleconstraint-from-json"]], "CircleConstraint.from_jsonstring": [[13, "circleconstraint-from-jsonstring"]], "CircleConstraint.get_constraint_cls": [[14, "circleconstraint-get-constraint-cls"]], "CircleConstraint.project": [[15, "circleconstraint-project"]], "CircleConstraint.register": [[16, "circleconstraint-register"]], "CircleConstraint.sha256": [[17, "circleconstraint-sha256"]], "CircleConstraint.to_json": [[18, "circleconstraint-to-json"]], "CircleConstraint.to_jsonstring": [[19, "circleconstraint-to-jsonstring"]], "CircleConstraint.update": [[20, "circleconstraint-update"]], "CircleConstraint.update_location_at_param": [[21, "circleconstraint-update-location-at-param"]], "CircleConstraint.validate_data": [[22, "circleconstraint-validate-data"]], "Constraint": [[23, "constraint"]], "Constraint.ToString": [[24, "constraint-tostring"]], "Constraint.compute_normal": [[25, "constraint-compute-normal"]], "Constraint.compute_param": [[26, "constraint-compute-param"]], "Constraint.compute_tangent": [[27, "constraint-compute-tangent"]], "Constraint.copy": [[28, "constraint-copy"]], "Constraint.from_json": [[29, "constraint-from-json"]], "Constraint.from_jsonstring": [[30, "constraint-from-jsonstring"]], "Constraint.get_constraint_cls": [[31, "constraint-get-constraint-cls"]], "Constraint.project": [[32, "constraint-project"]], "Constraint.register": [[33, "constraint-register"]], "Constraint.sha256": [[34, "constraint-sha256"]], "Constraint.to_json": [[35, "constraint-to-json"]], "Constraint.to_jsonstring": [[36, "constraint-to-jsonstring"]], "Constraint.update": [[37, "constraint-update"]], "Constraint.update_location_at_param": [[38, "constraint-update-location-at-param"]], "Constraint.validate_data": [[39, "constraint-validate-data"]], "CurveConstraint": [[40, "curveconstraint"]], "CurveConstraint.ToString": [[41, "curveconstraint-tostring"]], "CurveConstraint.compute_normal": [[42, "curveconstraint-compute-normal"]], "CurveConstraint.compute_param": [[43, "curveconstraint-compute-param"]], "CurveConstraint.compute_tangent": [[44, "curveconstraint-compute-tangent"]], "CurveConstraint.copy": [[45, "curveconstraint-copy"]], "CurveConstraint.from_json": [[46, "curveconstraint-from-json"]], "CurveConstraint.from_jsonstring": [[47, "curveconstraint-from-jsonstring"]], "CurveConstraint.get_constraint_cls": [[48, "curveconstraint-get-constraint-cls"]], "CurveConstraint.project": [[49, "curveconstraint-project"]], "CurveConstraint.register": [[50, "curveconstraint-register"]], "CurveConstraint.sha256": [[51, "curveconstraint-sha256"]], "CurveConstraint.to_json": [[52, "curveconstraint-to-json"]], "CurveConstraint.to_jsonstring": [[53, "curveconstraint-to-jsonstring"]], "CurveConstraint.update": [[54, "curveconstraint-update"]], "CurveConstraint.update_location_at_param": [[55, "curveconstraint-update-location-at-param"]], "CurveConstraint.validate_data": [[56, "curveconstraint-validate-data"]], "FrameConstraint": [[57, "frameconstraint"]], "FrameConstraint.ToString": [[58, "frameconstraint-tostring"]], "FrameConstraint.compute_normal": [[59, "frameconstraint-compute-normal"]], "FrameConstraint.compute_param": [[60, "frameconstraint-compute-param"]], "FrameConstraint.compute_tangent": [[61, "frameconstraint-compute-tangent"]], "FrameConstraint.copy": [[62, "frameconstraint-copy"]], "FrameConstraint.from_json": [[63, "frameconstraint-from-json"]], "FrameConstraint.from_jsonstring": [[64, "frameconstraint-from-jsonstring"]], "FrameConstraint.get_constraint_cls": [[65, "frameconstraint-get-constraint-cls"]], "FrameConstraint.project": [[66, "frameconstraint-project"]], "FrameConstraint.register": [[67, "frameconstraint-register"]], "FrameConstraint.sha256": [[68, "frameconstraint-sha256"]], "FrameConstraint.to_json": [[69, "frameconstraint-to-json"]], "FrameConstraint.to_jsonstring": [[70, "frameconstraint-to-jsonstring"]], "FrameConstraint.update": [[71, "frameconstraint-update"]], "FrameConstraint.update_location_at_param": [[72, "frameconstraint-update-location-at-param"]], "FrameConstraint.validate_data": [[73, "frameconstraint-validate-data"]], "LineConstraint": [[74, "lineconstraint"]], "LineConstraint.ToString": [[75, "lineconstraint-tostring"]], "LineConstraint.compute_normal": [[76, "lineconstraint-compute-normal"]], "LineConstraint.compute_param": [[77, "lineconstraint-compute-param"]], "LineConstraint.compute_tangent": [[78, "lineconstraint-compute-tangent"]], "LineConstraint.copy": [[79, "lineconstraint-copy"]], "LineConstraint.from_json": [[80, "lineconstraint-from-json"]], "LineConstraint.from_jsonstring": [[81, "lineconstraint-from-jsonstring"]], "LineConstraint.get_constraint_cls": [[82, "lineconstraint-get-constraint-cls"]], "LineConstraint.project": [[83, "lineconstraint-project"]], "LineConstraint.register": [[84, "lineconstraint-register"]], "LineConstraint.sha256": [[85, "lineconstraint-sha256"]], "LineConstraint.to_json": [[86, "lineconstraint-to-json"]], "LineConstraint.to_jsonstring": [[87, "lineconstraint-to-jsonstring"]], "LineConstraint.update": [[88, "lineconstraint-update"]], "LineConstraint.update_location_at_param": [[89, "lineconstraint-update-location-at-param"]], "LineConstraint.validate_data": [[90, "lineconstraint-validate-data"]], "PlaneConstraint": [[91, "planeconstraint"]], "PlaneConstraint.ToString": [[92, "planeconstraint-tostring"]], "PlaneConstraint.compute_normal": [[93, "planeconstraint-compute-normal"]], "PlaneConstraint.compute_param": [[94, "planeconstraint-compute-param"]], "PlaneConstraint.compute_tangent": [[95, "planeconstraint-compute-tangent"]], "PlaneConstraint.copy": [[96, "planeconstraint-copy"]], "PlaneConstraint.from_json": [[97, "planeconstraint-from-json"]], "PlaneConstraint.from_jsonstring": [[98, "planeconstraint-from-jsonstring"]], "PlaneConstraint.get_constraint_cls": [[99, "planeconstraint-get-constraint-cls"]], "PlaneConstraint.project": [[100, "planeconstraint-project"]], "PlaneConstraint.register": [[101, "planeconstraint-register"]], "PlaneConstraint.sha256": [[102, "planeconstraint-sha256"]], "PlaneConstraint.to_json": [[103, "planeconstraint-to-json"]], "PlaneConstraint.to_jsonstring": [[104, "planeconstraint-to-jsonstring"]], "PlaneConstraint.update": [[105, "planeconstraint-update"]], "PlaneConstraint.update_location_at_param": [[106, "planeconstraint-update-location-at-param"]], "PlaneConstraint.validate_data": [[107, "planeconstraint-validate-data"]], "SurfaceConstraint": [[108, "surfaceconstraint"]], "SurfaceConstraint.ToString": [[109, "surfaceconstraint-tostring"]], "SurfaceConstraint.compute_normal": [[110, "surfaceconstraint-compute-normal"]], "SurfaceConstraint.compute_param": [[111, "surfaceconstraint-compute-param"]], "SurfaceConstraint.compute_tangent": [[112, "surfaceconstraint-compute-tangent"]], "SurfaceConstraint.copy": [[113, "surfaceconstraint-copy"]], "SurfaceConstraint.from_json": [[114, "surfaceconstraint-from-json"]], "SurfaceConstraint.from_jsonstring": [[115, "surfaceconstraint-from-jsonstring"]], "SurfaceConstraint.get_constraint_cls": [[116, "surfaceconstraint-get-constraint-cls"]], "SurfaceConstraint.project": [[117, "surfaceconstraint-project"]], "SurfaceConstraint.register": [[118, "surfaceconstraint-register"]], "SurfaceConstraint.sha256": [[119, "surfaceconstraint-sha256"]], "SurfaceConstraint.to_json": [[120, "surfaceconstraint-to-json"]], "SurfaceConstraint.to_jsonstring": [[121, "surfaceconstraint-to-jsonstring"]], "SurfaceConstraint.update": [[122, "surfaceconstraint-update"]], "SurfaceConstraint.update_location_at_param": [[123, "surfaceconstraint-update-location-at-param"]], "SurfaceConstraint.validate_data": [[124, "surfaceconstraint-validate-data"]], "VectorConstraint": [[125, "vectorconstraint"]], "VectorConstraint.ToString": [[126, "vectorconstraint-tostring"]], "VectorConstraint.compute_normal": [[127, "vectorconstraint-compute-normal"]], "VectorConstraint.compute_param": [[128, "vectorconstraint-compute-param"]], "VectorConstraint.compute_tangent": [[129, "vectorconstraint-compute-tangent"]], "VectorConstraint.copy": [[130, "vectorconstraint-copy"]], "VectorConstraint.from_json": [[131, "vectorconstraint-from-json"]], "VectorConstraint.from_jsonstring": [[132, "vectorconstraint-from-jsonstring"]], "VectorConstraint.get_constraint_cls": [[133, "vectorconstraint-get-constraint-cls"]], "VectorConstraint.project": [[134, "vectorconstraint-project"]], "VectorConstraint.register": [[135, "vectorconstraint-register"]], "VectorConstraint.sha256": [[136, "vectorconstraint-sha256"]], "VectorConstraint.to_json": [[137, "vectorconstraint-to-json"]], "VectorConstraint.to_jsonstring": [[138, "vectorconstraint-to-jsonstring"]], "VectorConstraint.update": [[139, "vectorconstraint-update"]], "VectorConstraint.update_location_at_param": [[140, "vectorconstraint-update-location-at-param"]], "VectorConstraint.validate_data": [[141, "vectorconstraint-validate-data"]], "CableMesh": [[142, "cablemesh"]], "CableMesh.ToString": [[143, "cablemesh-tostring"]], "CableMesh.aabb": [[144, "cablemesh-aabb"]], "CableMesh.add_face": [[145, "cablemesh-add-face"]], "CableMesh.add_vertex": [[146, "cablemesh-add-vertex"]], "CableMesh.adjacency_matrix": [[147, "cablemesh-adjacency-matrix"]], "CableMesh.anchors": [[148, "cablemesh-anchors"]], "CableMesh.area": [[149, "cablemesh-area"]], "CableMesh.centroid": [[150, "cablemesh-centroid"]], "CableMesh.clear": [[151, "cablemesh-clear"]], "CableMesh.collapse_edge": [[152, "cablemesh-collapse-edge"]], "CableMesh.connected_faces": [[153, "cablemesh-connected-faces"]], "CableMesh.connected_vertices": [[154, "cablemesh-connected-vertices"]], "CableMesh.connectivity_matrix": [[155, "cablemesh-connectivity-matrix"]], "CableMesh.copy": [[156, "cablemesh-copy"]], "CableMesh.cull_vertices": [[157, "cablemesh-cull-vertices"]], "CableMesh.degree_matrix": [[158, "cablemesh-degree-matrix"]], "CableMesh.delete_face": [[159, "cablemesh-delete-face"]], "CableMesh.delete_vertex": [[160, "cablemesh-delete-vertex"]], "CableMesh.dual": [[161, "cablemesh-dual"]], "CableMesh.edge_attribute": [[162, "cablemesh-edge-attribute"]], "CableMesh.edge_attributes": [[163, "cablemesh-edge-attributes"]], "CableMesh.edge_coordinates": [[164, "cablemesh-edge-coordinates"]], "CableMesh.edge_direction": [[165, "cablemesh-edge-direction"]], "CableMesh.edge_end": [[166, "cablemesh-edge-end"]], "CableMesh.edge_faces": [[167, "cablemesh-edge-faces"]], "CableMesh.edge_length": [[168, "cablemesh-edge-length"]], "CableMesh.edge_line": [[169, "cablemesh-edge-line"]], "CableMesh.edge_loop": [[170, "cablemesh-edge-loop"]], "CableMesh.edge_midpoint": [[171, "cablemesh-edge-midpoint"]], "CableMesh.edge_point": [[172, "cablemesh-edge-point"]], "CableMesh.edge_sample": [[173, "cablemesh-edge-sample"]], "CableMesh.edge_start": [[174, "cablemesh-edge-start"]], "CableMesh.edge_strip": [[175, "cablemesh-edge-strip"]], "CableMesh.edge_vector": [[176, "cablemesh-edge-vector"]], "CableMesh.edges": [[177, "cablemesh-edges"]], "CableMesh.edges_attribute": [[178, "cablemesh-edges-attribute"]], "CableMesh.edges_attributes": [[179, "cablemesh-edges-attributes"]], "CableMesh.edges_on_boundaries": [[180, "cablemesh-edges-on-boundaries"]], "CableMesh.edges_on_boundary": [[181, "cablemesh-edges-on-boundary"]], "CableMesh.edges_where": [[182, "cablemesh-edges-where"]], "CableMesh.edges_where_predicate": [[183, "cablemesh-edges-where-predicate"]], "CableMesh.euler": [[184, "cablemesh-euler"]], "CableMesh.exploded": [[185, "cablemesh-exploded"]], "CableMesh.face_adjacency_halfedge": [[186, "cablemesh-face-adjacency-halfedge"]], "CableMesh.face_adjacency_vertices": [[187, "cablemesh-face-adjacency-vertices"]], "CableMesh.face_area": [[188, "cablemesh-face-area"]], "CableMesh.face_aspect_ratio": [[189, "cablemesh-face-aspect-ratio"]], "CableMesh.face_attribute": [[190, "cablemesh-face-attribute"]], "CableMesh.face_attributes": [[191, "cablemesh-face-attributes"]], "CableMesh.face_center": [[192, "cablemesh-face-center"]], "CableMesh.face_centroid": [[193, "cablemesh-face-centroid"]], "CableMesh.face_circle": [[194, "cablemesh-face-circle"]], "CableMesh.face_coordinates": [[195, "cablemesh-face-coordinates"]], "CableMesh.face_corners": [[196, "cablemesh-face-corners"]], "CableMesh.face_curvature": [[197, "cablemesh-face-curvature"]], "CableMesh.face_degree": [[198, "cablemesh-face-degree"]], "CableMesh.face_flatness": [[199, "cablemesh-face-flatness"]], "CableMesh.face_frame": [[200, "cablemesh-face-frame"]], "CableMesh.face_halfedges": [[201, "cablemesh-face-halfedges"]], "CableMesh.face_matrix": [[202, "cablemesh-face-matrix"]], "CableMesh.face_max_degree": [[203, "cablemesh-face-max-degree"]], "CableMesh.face_min_degree": [[204, "cablemesh-face-min-degree"]], "CableMesh.face_neighborhood": [[205, "cablemesh-face-neighborhood"]], "CableMesh.face_neighbors": [[206, "cablemesh-face-neighbors"]], "CableMesh.face_normal": [[207, "cablemesh-face-normal"]], "CableMesh.face_plane": [[208, "cablemesh-face-plane"]], "CableMesh.face_points": [[209, "cablemesh-face-points"]], "CableMesh.face_polygon": [[210, "cablemesh-face-polygon"]], "CableMesh.face_sample": [[211, "cablemesh-face-sample"]], "CableMesh.face_skewness": [[212, "cablemesh-face-skewness"]], "CableMesh.face_vertex_after": [[213, "cablemesh-face-vertex-after"]], "CableMesh.face_vertex_ancestor": [[214, "cablemesh-face-vertex-ancestor"]], "CableMesh.face_vertex_before": [[215, "cablemesh-face-vertex-before"]], "CableMesh.face_vertex_descendant": [[216, "cablemesh-face-vertex-descendant"]], "CableMesh.face_vertices": [[217, "cablemesh-face-vertices"]], "CableMesh.faces": [[218, "cablemesh-faces"]], "CableMesh.faces_attribute": [[219, "cablemesh-faces-attribute"]], "CableMesh.faces_attributes": [[220, "cablemesh-faces-attributes"]], "CableMesh.faces_on_boundaries": [[221, "cablemesh-faces-on-boundaries"]], "CableMesh.faces_on_boundary": [[222, "cablemesh-faces-on-boundary"]], "CableMesh.faces_where": [[223, "cablemesh-faces-where"]], "CableMesh.faces_where_predicate": [[224, "cablemesh-faces-where-predicate"]], "CableMesh.fixed": [[225, "cablemesh-fixed"]], "CableMesh.flip_cycles": [[226, "cablemesh-flip-cycles"]], "CableMesh.from_json": [[227, "cablemesh-from-json"]], "CableMesh.from_jsonstring": [[228, "cablemesh-from-jsonstring"]], "CableMesh.from_lines": [[229, "cablemesh-from-lines"]], "CableMesh.from_meshgrid": [[230, "cablemesh-from-meshgrid"]], "CableMesh.from_obj": [[231, "cablemesh-from-obj"]], "CableMesh.from_off": [[232, "cablemesh-from-off"]], "CableMesh.from_ply": [[233, "cablemesh-from-ply"]], "CableMesh.from_points": [[234, "cablemesh-from-points"]], "CableMesh.from_polygons": [[235, "cablemesh-from-polygons"]], "CableMesh.from_polyhedron": [[236, "cablemesh-from-polyhedron"]], "CableMesh.from_polylines": [[237, "cablemesh-from-polylines"]], "CableMesh.from_shape": [[238, "cablemesh-from-shape"]], "CableMesh.from_stl": [[239, "cablemesh-from-stl"]], "CableMesh.from_vertices_and_faces": [[240, "cablemesh-from-vertices-and-faces"]], "CableMesh.gkey_vertex": [[241, "cablemesh-gkey-vertex"]], "CableMesh.halfedge_after": [[242, "cablemesh-halfedge-after"]], "CableMesh.halfedge_before": [[243, "cablemesh-halfedge-before"]], "CableMesh.halfedge_face": [[244, "cablemesh-halfedge-face"]], "CableMesh.halfedge_loop": [[245, "cablemesh-halfedge-loop"]], "CableMesh.halfedge_loop_vertices": [[246, "cablemesh-halfedge-loop-vertices"]], "CableMesh.halfedge_strip": [[247, "cablemesh-halfedge-strip"]], "CableMesh.halfedge_strip_faces": [[248, "cablemesh-halfedge-strip-faces"]], "CableMesh.has_edge": [[249, "cablemesh-has-edge"]], "CableMesh.has_face": [[250, "cablemesh-has-face"]], "CableMesh.has_halfedge": [[251, "cablemesh-has-halfedge"]], "CableMesh.has_vertex": [[252, "cablemesh-has-vertex"]], "CableMesh.index_vertex": [[253, "cablemesh-index-vertex"]], "CableMesh.insert_vertex": [[254, "cablemesh-insert-vertex"]], "CableMesh.is_closed": [[255, "cablemesh-is-closed"]], "CableMesh.is_connected": [[256, "cablemesh-is-connected"]], "CableMesh.is_edge_on_boundary": [[257, "cablemesh-is-edge-on-boundary"]], "CableMesh.is_empty": [[258, "cablemesh-is-empty"]], "CableMesh.is_face_on_boundary": [[259, "cablemesh-is-face-on-boundary"]], "CableMesh.is_manifold": [[260, "cablemesh-is-manifold"]], "CableMesh.is_orientable": [[261, "cablemesh-is-orientable"]], "CableMesh.is_quadmesh": [[262, "cablemesh-is-quadmesh"]], "CableMesh.is_regular": [[263, "cablemesh-is-regular"]], "CableMesh.is_trimesh": [[264, "cablemesh-is-trimesh"]], "CableMesh.is_valid": [[265, "cablemesh-is-valid"]], "CableMesh.is_vertex_connected": [[266, "cablemesh-is-vertex-connected"]], "CableMesh.is_vertex_on_boundary": [[267, "cablemesh-is-vertex-on-boundary"]], "CableMesh.join": [[268, "cablemesh-join"]], "CableMesh.laplacian_matrix": [[269, "cablemesh-laplacian-matrix"]], "CableMesh.merge_faces": [[270, "cablemesh-merge-faces"]], "CableMesh.normal": [[271, "cablemesh-normal"]], "CableMesh.number_of_edges": [[272, "cablemesh-number-of-edges"]], "CableMesh.number_of_faces": [[273, "cablemesh-number-of-faces"]], "CableMesh.number_of_vertices": [[274, "cablemesh-number-of-vertices"]], "CableMesh.obb": [[275, "cablemesh-obb"]], "CableMesh.offset": [[276, "cablemesh-offset"]], "CableMesh.quads_to_triangles": [[277, "cablemesh-quads-to-triangles"]], "CableMesh.remove_duplicate_vertices": [[278, "cablemesh-remove-duplicate-vertices"]], "CableMesh.remove_unused_vertices": [[279, "cablemesh-remove-unused-vertices"]], "CableMesh.set_anchors": [[280, "cablemesh-set-anchors"]], "CableMesh.set_fixed": [[281, "cablemesh-set-fixed"]], "CableMesh.set_vertex_point": [[282, "cablemesh-set-vertex-point"]], "CableMesh.sha256": [[283, "cablemesh-sha256"]], "CableMesh.slice": [[284, "cablemesh-slice"]], "CableMesh.smooth_area": [[285, "cablemesh-smooth-area"]], "CableMesh.smooth_centroid": [[286, "cablemesh-smooth-centroid"]], "CableMesh.split_edge": [[287, "cablemesh-split-edge"]], "CableMesh.split_face": [[288, "cablemesh-split-face"]], "CableMesh.split_strip": [[289, "cablemesh-split-strip"]], "CableMesh.subdivided": [[290, "cablemesh-subdivided"]], "CableMesh.summary": [[291, "cablemesh-summary"]], "CableMesh.thickened": [[292, "cablemesh-thickened"]], "CableMesh.to_json": [[293, "cablemesh-to-json"]], "CableMesh.to_jsonstring": [[294, "cablemesh-to-jsonstring"]], "CableMesh.to_lines": [[295, "cablemesh-to-lines"]], "CableMesh.to_obj": [[296, "cablemesh-to-obj"]], "CableMesh.to_off": [[297, "cablemesh-to-off"]], "CableMesh.to_ply": [[298, "cablemesh-to-ply"]], "CableMesh.to_points": [[299, "cablemesh-to-points"]], "CableMesh.to_polygons": [[300, "cablemesh-to-polygons"]], "CableMesh.to_polylines": [[301, "cablemesh-to-polylines"]], "CableMesh.to_stl": [[302, "cablemesh-to-stl"]], "CableMesh.to_vertices_and_faces": [[303, "cablemesh-to-vertices-and-faces"]], "CableMesh.transform": [[304, "cablemesh-transform"]], "CableMesh.transform_numpy": [[305, "cablemesh-transform-numpy"]], "CableMesh.transformed": [[306, "cablemesh-transformed"]], "CableMesh.transformed_numpy": [[307, "cablemesh-transformed-numpy"]], "CableMesh.unify_cycles": [[308, "cablemesh-unify-cycles"]], "CableMesh.unset_edge_attribute": [[309, "cablemesh-unset-edge-attribute"]], "CableMesh.unset_face_attribute": [[310, "cablemesh-unset-face-attribute"]], "CableMesh.unset_vertex_attribute": [[311, "cablemesh-unset-vertex-attribute"]], "CableMesh.unweld_edges": [[312, "cablemesh-unweld-edges"]], "CableMesh.unweld_vertices": [[313, "cablemesh-unweld-vertices"]], "CableMesh.update_default_edge_attributes": [[314, "cablemesh-update-default-edge-attributes"]], "CableMesh.update_default_face_attributes": [[315, "cablemesh-update-default-face-attributes"]], "CableMesh.update_default_vertex_attributes": [[316, "cablemesh-update-default-vertex-attributes"]], "CableMesh.update_edges": [[317, "cablemesh-update-edges"]], "CableMesh.update_vertices": [[318, "cablemesh-update-vertices"]], "CableMesh.validate_data": [[319, "cablemesh-validate-data"]], "CableMesh.vertex_area": [[320, "cablemesh-vertex-area"]], "CableMesh.vertex_attribute": [[321, "cablemesh-vertex-attribute"]], "CableMesh.vertex_attributes": [[322, "cablemesh-vertex-attributes"]], "CableMesh.vertex_coordinates": [[323, "cablemesh-vertex-coordinates"]], "CableMesh.vertex_curvature": [[324, "cablemesh-vertex-curvature"]], "CableMesh.vertex_degree": [[325, "cablemesh-vertex-degree"]], "CableMesh.vertex_edges": [[326, "cablemesh-vertex-edges"]], "CableMesh.vertex_faces": [[327, "cablemesh-vertex-faces"]], "CableMesh.vertex_gkey": [[328, "cablemesh-vertex-gkey"]], "CableMesh.vertex_index": [[329, "cablemesh-vertex-index"]], "CableMesh.vertex_laplacian": [[330, "cablemesh-vertex-laplacian"]], "CableMesh.vertex_max_degree": [[331, "cablemesh-vertex-max-degree"]], "CableMesh.vertex_min_degree": [[332, "cablemesh-vertex-min-degree"]], "CableMesh.vertex_neighborhood": [[333, "cablemesh-vertex-neighborhood"]], "CableMesh.vertex_neighborhood_centroid": [[334, "cablemesh-vertex-neighborhood-centroid"]], "CableMesh.vertex_neighbors": [[335, "cablemesh-vertex-neighbors"]], "CableMesh.vertex_normal": [[336, "cablemesh-vertex-normal"]], "CableMesh.vertex_point": [[337, "cablemesh-vertex-point"]], "CableMesh.vertex_sample": [[338, "cablemesh-vertex-sample"]], "CableMesh.vertices": [[339, "cablemesh-vertices"]], "CableMesh.vertices_attribute": [[340, "cablemesh-vertices-attribute"]], "CableMesh.vertices_attributes": [[341, "cablemesh-vertices-attributes"]], "CableMesh.vertices_on_boundaries": [[342, "cablemesh-vertices-on-boundaries"]], "CableMesh.vertices_on_boundary": [[343, "cablemesh-vertices-on-boundary"]], "CableMesh.vertices_points": [[344, "cablemesh-vertices-points"]], "CableMesh.vertices_where": [[345, "cablemesh-vertices-where"]], "CableMesh.vertices_where_predicate": [[346, "cablemesh-vertices-where-predicate"]], "CableMesh.weld": [[347, "cablemesh-weld"]], "SelfweightCalculator": [[348, "selfweightcalculator"]], "SelfweightCalculator.face_matrix": [[349, "selfweightcalculator-face-matrix"]], "fd_constrained_numpy": [[350, "fd-constrained-numpy"]], "fd_numpy": [[351, "fd-numpy"]], "mesh_fd_constrained_numpy": [[352, "mesh-fd-constrained-numpy"]], "mesh_fd_numpy": [[353, "mesh-fd-numpy"]], "Examples": [[354, "examples"]], "COMPAS Constrained Force Density Method": [[355, "compas-constrained-force-density-method"]], "Table of Contents": [[355, "table-of-contents"]], "Indices and tables": [[355, "indices-and-tables"]], "Installation": [[356, "installation"]], "Stable": [[356, "stable"]], "Development": [[356, "development"]], "License": [[357, "license"]], "Tutorial": [[358, "tutorial"]]}, "indexentries": {"circleconstraint (class in compas_fd.constraints)": [[6, "compas_fd.constraints.CircleConstraint"]], "tostring() (compas_fd.constraints.circleconstraint method)": [[7, "compas_fd.constraints.CircleConstraint.ToString"]], "compute_normal() (compas_fd.constraints.circleconstraint method)": [[8, "compas_fd.constraints.CircleConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.circleconstraint method)": [[9, "compas_fd.constraints.CircleConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.circleconstraint method)": [[10, "compas_fd.constraints.CircleConstraint.compute_tangent"]], "copy() (compas_fd.constraints.circleconstraint method)": [[11, "compas_fd.constraints.CircleConstraint.copy"]], "from_json() (compas_fd.constraints.circleconstraint class method)": [[12, "compas_fd.constraints.CircleConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.circleconstraint class method)": [[13, "compas_fd.constraints.CircleConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.circleconstraint static method)": [[14, "compas_fd.constraints.CircleConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.circleconstraint method)": [[15, "compas_fd.constraints.CircleConstraint.project"]], "register() (compas_fd.constraints.circleconstraint static method)": [[16, "compas_fd.constraints.CircleConstraint.register"]], "sha256() (compas_fd.constraints.circleconstraint method)": [[17, "compas_fd.constraints.CircleConstraint.sha256"]], "to_json() (compas_fd.constraints.circleconstraint method)": [[18, "compas_fd.constraints.CircleConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.circleconstraint method)": [[19, "compas_fd.constraints.CircleConstraint.to_jsonstring"]], "update() (compas_fd.constraints.circleconstraint method)": [[20, "compas_fd.constraints.CircleConstraint.update"]], "update_location_at_param() (compas_fd.constraints.circleconstraint method)": [[21, "compas_fd.constraints.CircleConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.circleconstraint class method)": [[22, "compas_fd.constraints.CircleConstraint.validate_data"]], "constraint (class in compas_fd.constraints)": [[23, "compas_fd.constraints.Constraint"]], "tostring() (compas_fd.constraints.constraint method)": [[24, "compas_fd.constraints.Constraint.ToString"]], "compute_normal() (compas_fd.constraints.constraint method)": [[25, "compas_fd.constraints.Constraint.compute_normal"]], "compute_param() (compas_fd.constraints.constraint method)": [[26, "compas_fd.constraints.Constraint.compute_param"]], "compute_tangent() (compas_fd.constraints.constraint method)": [[27, "compas_fd.constraints.Constraint.compute_tangent"]], "copy() (compas_fd.constraints.constraint method)": [[28, "compas_fd.constraints.Constraint.copy"]], "from_json() (compas_fd.constraints.constraint class method)": [[29, "compas_fd.constraints.Constraint.from_json"]], "from_jsonstring() (compas_fd.constraints.constraint class method)": [[30, "compas_fd.constraints.Constraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.constraint static method)": [[31, "compas_fd.constraints.Constraint.get_constraint_cls"]], "project() (compas_fd.constraints.constraint method)": [[32, "compas_fd.constraints.Constraint.project"]], "register() (compas_fd.constraints.constraint static method)": [[33, "compas_fd.constraints.Constraint.register"]], "sha256() (compas_fd.constraints.constraint method)": [[34, "compas_fd.constraints.Constraint.sha256"]], "to_json() (compas_fd.constraints.constraint method)": [[35, "compas_fd.constraints.Constraint.to_json"]], "to_jsonstring() (compas_fd.constraints.constraint method)": [[36, "compas_fd.constraints.Constraint.to_jsonstring"]], "update() (compas_fd.constraints.constraint method)": [[37, "compas_fd.constraints.Constraint.update"]], "update_location_at_param() (compas_fd.constraints.constraint method)": [[38, "compas_fd.constraints.Constraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.constraint class method)": [[39, "compas_fd.constraints.Constraint.validate_data"]], "curveconstraint (class in compas_fd.constraints)": [[40, "compas_fd.constraints.CurveConstraint"]], "tostring() (compas_fd.constraints.curveconstraint method)": [[41, "compas_fd.constraints.CurveConstraint.ToString"]], "compute_normal() (compas_fd.constraints.curveconstraint method)": [[42, "compas_fd.constraints.CurveConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.curveconstraint method)": [[43, "compas_fd.constraints.CurveConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.curveconstraint method)": [[44, "compas_fd.constraints.CurveConstraint.compute_tangent"]], "copy() (compas_fd.constraints.curveconstraint method)": [[45, "compas_fd.constraints.CurveConstraint.copy"]], "from_json() (compas_fd.constraints.curveconstraint class method)": [[46, "compas_fd.constraints.CurveConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.curveconstraint class method)": [[47, "compas_fd.constraints.CurveConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.curveconstraint static method)": [[48, "compas_fd.constraints.CurveConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.curveconstraint method)": [[49, "compas_fd.constraints.CurveConstraint.project"]], "register() (compas_fd.constraints.curveconstraint static method)": [[50, "compas_fd.constraints.CurveConstraint.register"]], "sha256() (compas_fd.constraints.curveconstraint method)": [[51, "compas_fd.constraints.CurveConstraint.sha256"]], "to_json() (compas_fd.constraints.curveconstraint method)": [[52, "compas_fd.constraints.CurveConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.curveconstraint method)": [[53, "compas_fd.constraints.CurveConstraint.to_jsonstring"]], "update() (compas_fd.constraints.curveconstraint method)": [[54, "compas_fd.constraints.CurveConstraint.update"]], "update_location_at_param() (compas_fd.constraints.curveconstraint method)": [[55, "compas_fd.constraints.CurveConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.curveconstraint class method)": [[56, "compas_fd.constraints.CurveConstraint.validate_data"]], "frameconstraint (class in compas_fd.constraints)": [[57, "compas_fd.constraints.FrameConstraint"]], "tostring() (compas_fd.constraints.frameconstraint method)": [[58, "compas_fd.constraints.FrameConstraint.ToString"]], "compute_normal() (compas_fd.constraints.frameconstraint method)": [[59, "compas_fd.constraints.FrameConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.frameconstraint method)": [[60, "compas_fd.constraints.FrameConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.frameconstraint method)": [[61, "compas_fd.constraints.FrameConstraint.compute_tangent"]], "copy() (compas_fd.constraints.frameconstraint method)": [[62, "compas_fd.constraints.FrameConstraint.copy"]], "from_json() (compas_fd.constraints.frameconstraint class method)": [[63, "compas_fd.constraints.FrameConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.frameconstraint class method)": [[64, "compas_fd.constraints.FrameConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.frameconstraint static method)": [[65, "compas_fd.constraints.FrameConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.frameconstraint method)": [[66, "compas_fd.constraints.FrameConstraint.project"]], "register() (compas_fd.constraints.frameconstraint static method)": [[67, "compas_fd.constraints.FrameConstraint.register"]], "sha256() (compas_fd.constraints.frameconstraint method)": [[68, "compas_fd.constraints.FrameConstraint.sha256"]], "to_json() (compas_fd.constraints.frameconstraint method)": [[69, "compas_fd.constraints.FrameConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.frameconstraint method)": [[70, "compas_fd.constraints.FrameConstraint.to_jsonstring"]], "update() (compas_fd.constraints.frameconstraint method)": [[71, "compas_fd.constraints.FrameConstraint.update"]], "update_location_at_param() (compas_fd.constraints.frameconstraint method)": [[72, "compas_fd.constraints.FrameConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.frameconstraint class method)": [[73, "compas_fd.constraints.FrameConstraint.validate_data"]], "lineconstraint (class in compas_fd.constraints)": [[74, "compas_fd.constraints.LineConstraint"]], "tostring() (compas_fd.constraints.lineconstraint method)": [[75, "compas_fd.constraints.LineConstraint.ToString"]], "compute_normal() (compas_fd.constraints.lineconstraint method)": [[76, "compas_fd.constraints.LineConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.lineconstraint method)": [[77, "compas_fd.constraints.LineConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.lineconstraint method)": [[78, "compas_fd.constraints.LineConstraint.compute_tangent"]], "copy() (compas_fd.constraints.lineconstraint method)": [[79, "compas_fd.constraints.LineConstraint.copy"]], "from_json() (compas_fd.constraints.lineconstraint class method)": [[80, "compas_fd.constraints.LineConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.lineconstraint class method)": [[81, "compas_fd.constraints.LineConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.lineconstraint static method)": [[82, "compas_fd.constraints.LineConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.lineconstraint method)": [[83, "compas_fd.constraints.LineConstraint.project"]], "register() (compas_fd.constraints.lineconstraint static method)": [[84, "compas_fd.constraints.LineConstraint.register"]], "sha256() (compas_fd.constraints.lineconstraint method)": [[85, "compas_fd.constraints.LineConstraint.sha256"]], "to_json() (compas_fd.constraints.lineconstraint method)": [[86, "compas_fd.constraints.LineConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.lineconstraint method)": [[87, "compas_fd.constraints.LineConstraint.to_jsonstring"]], "update() (compas_fd.constraints.lineconstraint method)": [[88, "compas_fd.constraints.LineConstraint.update"]], "update_location_at_param() (compas_fd.constraints.lineconstraint method)": [[89, "compas_fd.constraints.LineConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.lineconstraint class method)": [[90, "compas_fd.constraints.LineConstraint.validate_data"]], "planeconstraint (class in compas_fd.constraints)": [[91, "compas_fd.constraints.PlaneConstraint"]], "tostring() (compas_fd.constraints.planeconstraint method)": [[92, "compas_fd.constraints.PlaneConstraint.ToString"]], "compute_normal() (compas_fd.constraints.planeconstraint method)": [[93, "compas_fd.constraints.PlaneConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.planeconstraint method)": [[94, "compas_fd.constraints.PlaneConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.planeconstraint method)": [[95, "compas_fd.constraints.PlaneConstraint.compute_tangent"]], "copy() (compas_fd.constraints.planeconstraint method)": [[96, "compas_fd.constraints.PlaneConstraint.copy"]], "from_json() (compas_fd.constraints.planeconstraint class method)": [[97, "compas_fd.constraints.PlaneConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.planeconstraint class method)": [[98, "compas_fd.constraints.PlaneConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.planeconstraint static method)": [[99, "compas_fd.constraints.PlaneConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.planeconstraint method)": [[100, "compas_fd.constraints.PlaneConstraint.project"]], "register() (compas_fd.constraints.planeconstraint static method)": [[101, "compas_fd.constraints.PlaneConstraint.register"]], "sha256() (compas_fd.constraints.planeconstraint method)": [[102, "compas_fd.constraints.PlaneConstraint.sha256"]], "to_json() (compas_fd.constraints.planeconstraint method)": [[103, "compas_fd.constraints.PlaneConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.planeconstraint method)": [[104, "compas_fd.constraints.PlaneConstraint.to_jsonstring"]], "update() (compas_fd.constraints.planeconstraint method)": [[105, "compas_fd.constraints.PlaneConstraint.update"]], "update_location_at_param() (compas_fd.constraints.planeconstraint method)": [[106, "compas_fd.constraints.PlaneConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.planeconstraint class method)": [[107, "compas_fd.constraints.PlaneConstraint.validate_data"]], "surfaceconstraint (class in compas_fd.constraints)": [[108, "compas_fd.constraints.SurfaceConstraint"]], "tostring() (compas_fd.constraints.surfaceconstraint method)": [[109, "compas_fd.constraints.SurfaceConstraint.ToString"]], "compute_normal() (compas_fd.constraints.surfaceconstraint method)": [[110, "compas_fd.constraints.SurfaceConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.surfaceconstraint method)": [[111, "compas_fd.constraints.SurfaceConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.surfaceconstraint method)": [[112, "compas_fd.constraints.SurfaceConstraint.compute_tangent"]], "copy() (compas_fd.constraints.surfaceconstraint method)": [[113, "compas_fd.constraints.SurfaceConstraint.copy"]], "from_json() (compas_fd.constraints.surfaceconstraint class method)": [[114, "compas_fd.constraints.SurfaceConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.surfaceconstraint class method)": [[115, "compas_fd.constraints.SurfaceConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.surfaceconstraint static method)": [[116, "compas_fd.constraints.SurfaceConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.surfaceconstraint method)": [[117, "compas_fd.constraints.SurfaceConstraint.project"]], "register() (compas_fd.constraints.surfaceconstraint static method)": [[118, "compas_fd.constraints.SurfaceConstraint.register"]], "sha256() (compas_fd.constraints.surfaceconstraint method)": [[119, "compas_fd.constraints.SurfaceConstraint.sha256"]], "to_json() (compas_fd.constraints.surfaceconstraint method)": [[120, "compas_fd.constraints.SurfaceConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.surfaceconstraint method)": [[121, "compas_fd.constraints.SurfaceConstraint.to_jsonstring"]], "update() (compas_fd.constraints.surfaceconstraint method)": [[122, "compas_fd.constraints.SurfaceConstraint.update"]], "update_location_at_param() (compas_fd.constraints.surfaceconstraint method)": [[123, "compas_fd.constraints.SurfaceConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.surfaceconstraint class method)": [[124, "compas_fd.constraints.SurfaceConstraint.validate_data"]], "vectorconstraint (class in compas_fd.constraints)": [[125, "compas_fd.constraints.VectorConstraint"]], "tostring() (compas_fd.constraints.vectorconstraint method)": [[126, "compas_fd.constraints.VectorConstraint.ToString"]], "compute_normal() (compas_fd.constraints.vectorconstraint method)": [[127, "compas_fd.constraints.VectorConstraint.compute_normal"]], "compute_param() (compas_fd.constraints.vectorconstraint method)": [[128, "compas_fd.constraints.VectorConstraint.compute_param"]], "compute_tangent() (compas_fd.constraints.vectorconstraint method)": [[129, "compas_fd.constraints.VectorConstraint.compute_tangent"]], "copy() (compas_fd.constraints.vectorconstraint method)": [[130, "compas_fd.constraints.VectorConstraint.copy"]], "from_json() (compas_fd.constraints.vectorconstraint class method)": [[131, "compas_fd.constraints.VectorConstraint.from_json"]], "from_jsonstring() (compas_fd.constraints.vectorconstraint class method)": [[132, "compas_fd.constraints.VectorConstraint.from_jsonstring"]], "get_constraint_cls() (compas_fd.constraints.vectorconstraint static method)": [[133, "compas_fd.constraints.VectorConstraint.get_constraint_cls"]], "project() (compas_fd.constraints.vectorconstraint method)": [[134, "compas_fd.constraints.VectorConstraint.project"]], "register() (compas_fd.constraints.vectorconstraint static method)": [[135, "compas_fd.constraints.VectorConstraint.register"]], "sha256() (compas_fd.constraints.vectorconstraint method)": [[136, "compas_fd.constraints.VectorConstraint.sha256"]], "to_json() (compas_fd.constraints.vectorconstraint method)": [[137, "compas_fd.constraints.VectorConstraint.to_json"]], "to_jsonstring() (compas_fd.constraints.vectorconstraint method)": [[138, "compas_fd.constraints.VectorConstraint.to_jsonstring"]], "update() (compas_fd.constraints.vectorconstraint method)": [[139, "compas_fd.constraints.VectorConstraint.update"]], "update_location_at_param() (compas_fd.constraints.vectorconstraint method)": [[140, "compas_fd.constraints.VectorConstraint.update_location_at_param"]], "validate_data() (compas_fd.constraints.vectorconstraint class method)": [[141, "compas_fd.constraints.VectorConstraint.validate_data"]], "cablemesh (class in compas_fd.datastructures)": [[142, "compas_fd.datastructures.CableMesh"]], "tostring() (compas_fd.datastructures.cablemesh method)": [[143, "compas_fd.datastructures.CableMesh.ToString"]], "aabb() (compas_fd.datastructures.cablemesh method)": [[144, "compas_fd.datastructures.CableMesh.aabb"]], "add_face() (compas_fd.datastructures.cablemesh method)": [[145, "compas_fd.datastructures.CableMesh.add_face"]], "add_vertex() (compas_fd.datastructures.cablemesh method)": [[146, "compas_fd.datastructures.CableMesh.add_vertex"]], "adjacency_matrix() (compas_fd.datastructures.cablemesh method)": [[147, "compas_fd.datastructures.CableMesh.adjacency_matrix"]], "anchors() (compas_fd.datastructures.cablemesh method)": [[148, "compas_fd.datastructures.CableMesh.anchors"]], "area() (compas_fd.datastructures.cablemesh method)": [[149, "compas_fd.datastructures.CableMesh.area"]], "centroid() (compas_fd.datastructures.cablemesh method)": [[150, "compas_fd.datastructures.CableMesh.centroid"]], "clear() (compas_fd.datastructures.cablemesh method)": [[151, "compas_fd.datastructures.CableMesh.clear"]], "collapse_edge() (compas_fd.datastructures.cablemesh method)": [[152, "compas_fd.datastructures.CableMesh.collapse_edge"]], "connected_faces() (compas_fd.datastructures.cablemesh method)": [[153, "compas_fd.datastructures.CableMesh.connected_faces"]], "connected_vertices() (compas_fd.datastructures.cablemesh method)": [[154, "compas_fd.datastructures.CableMesh.connected_vertices"]], "connectivity_matrix() (compas_fd.datastructures.cablemesh method)": [[155, "compas_fd.datastructures.CableMesh.connectivity_matrix"]], "copy() (compas_fd.datastructures.cablemesh method)": [[156, "compas_fd.datastructures.CableMesh.copy"]], "cull_vertices() (compas_fd.datastructures.cablemesh method)": [[157, "compas_fd.datastructures.CableMesh.cull_vertices"]], "degree_matrix() (compas_fd.datastructures.cablemesh method)": [[158, "compas_fd.datastructures.CableMesh.degree_matrix"]], "delete_face() (compas_fd.datastructures.cablemesh method)": [[159, "compas_fd.datastructures.CableMesh.delete_face"]], "delete_vertex() (compas_fd.datastructures.cablemesh method)": [[160, "compas_fd.datastructures.CableMesh.delete_vertex"]], "dual() (compas_fd.datastructures.cablemesh method)": [[161, "compas_fd.datastructures.CableMesh.dual"]], "edge_attribute() (compas_fd.datastructures.cablemesh method)": [[162, "compas_fd.datastructures.CableMesh.edge_attribute"]], "edge_attributes() (compas_fd.datastructures.cablemesh method)": [[163, "compas_fd.datastructures.CableMesh.edge_attributes"]], "edge_coordinates() (compas_fd.datastructures.cablemesh method)": [[164, "compas_fd.datastructures.CableMesh.edge_coordinates"]], "edge_direction() (compas_fd.datastructures.cablemesh method)": [[165, "compas_fd.datastructures.CableMesh.edge_direction"]], "edge_end() (compas_fd.datastructures.cablemesh method)": [[166, "compas_fd.datastructures.CableMesh.edge_end"]], "edge_faces() (compas_fd.datastructures.cablemesh method)": [[167, "compas_fd.datastructures.CableMesh.edge_faces"]], "edge_length() (compas_fd.datastructures.cablemesh method)": [[168, "compas_fd.datastructures.CableMesh.edge_length"]], "edge_line() (compas_fd.datastructures.cablemesh method)": [[169, "compas_fd.datastructures.CableMesh.edge_line"]], "edge_loop() (compas_fd.datastructures.cablemesh method)": [[170, "compas_fd.datastructures.CableMesh.edge_loop"]], "edge_midpoint() (compas_fd.datastructures.cablemesh method)": [[171, "compas_fd.datastructures.CableMesh.edge_midpoint"]], "edge_point() (compas_fd.datastructures.cablemesh method)": [[172, "compas_fd.datastructures.CableMesh.edge_point"]], "edge_sample() (compas_fd.datastructures.cablemesh method)": [[173, "compas_fd.datastructures.CableMesh.edge_sample"]], "edge_start() (compas_fd.datastructures.cablemesh method)": [[174, "compas_fd.datastructures.CableMesh.edge_start"]], "edge_strip() (compas_fd.datastructures.cablemesh method)": [[175, "compas_fd.datastructures.CableMesh.edge_strip"]], "edge_vector() (compas_fd.datastructures.cablemesh method)": [[176, "compas_fd.datastructures.CableMesh.edge_vector"]], "edges() (compas_fd.datastructures.cablemesh method)": [[177, "compas_fd.datastructures.CableMesh.edges"]], "edges_attribute() (compas_fd.datastructures.cablemesh method)": [[178, "compas_fd.datastructures.CableMesh.edges_attribute"]], "edges_attributes() (compas_fd.datastructures.cablemesh method)": [[179, "compas_fd.datastructures.CableMesh.edges_attributes"]], "edges_on_boundaries() (compas_fd.datastructures.cablemesh method)": [[180, "compas_fd.datastructures.CableMesh.edges_on_boundaries"]], "edges_on_boundary() (compas_fd.datastructures.cablemesh method)": [[181, "compas_fd.datastructures.CableMesh.edges_on_boundary"]], "edges_where() (compas_fd.datastructures.cablemesh method)": [[182, "compas_fd.datastructures.CableMesh.edges_where"]], "edges_where_predicate() (compas_fd.datastructures.cablemesh method)": [[183, "compas_fd.datastructures.CableMesh.edges_where_predicate"]], "euler() (compas_fd.datastructures.cablemesh method)": [[184, "compas_fd.datastructures.CableMesh.euler"]], "exploded() (compas_fd.datastructures.cablemesh method)": [[185, "compas_fd.datastructures.CableMesh.exploded"]], "face_adjacency_halfedge() (compas_fd.datastructures.cablemesh method)": [[186, "compas_fd.datastructures.CableMesh.face_adjacency_halfedge"]], "face_adjacency_vertices() (compas_fd.datastructures.cablemesh method)": [[187, "compas_fd.datastructures.CableMesh.face_adjacency_vertices"]], "face_area() (compas_fd.datastructures.cablemesh method)": [[188, "compas_fd.datastructures.CableMesh.face_area"]], "face_aspect_ratio() (compas_fd.datastructures.cablemesh method)": [[189, "compas_fd.datastructures.CableMesh.face_aspect_ratio"]], "face_attribute() (compas_fd.datastructures.cablemesh method)": [[190, "compas_fd.datastructures.CableMesh.face_attribute"]], "face_attributes() (compas_fd.datastructures.cablemesh method)": [[191, "compas_fd.datastructures.CableMesh.face_attributes"]], "face_center() (compas_fd.datastructures.cablemesh method)": [[192, "compas_fd.datastructures.CableMesh.face_center"]], "face_centroid() (compas_fd.datastructures.cablemesh method)": [[193, "compas_fd.datastructures.CableMesh.face_centroid"]], "face_circle() (compas_fd.datastructures.cablemesh method)": [[194, "compas_fd.datastructures.CableMesh.face_circle"]], "face_coordinates() (compas_fd.datastructures.cablemesh method)": [[195, "compas_fd.datastructures.CableMesh.face_coordinates"]], "face_corners() (compas_fd.datastructures.cablemesh method)": [[196, "compas_fd.datastructures.CableMesh.face_corners"]], "face_curvature() (compas_fd.datastructures.cablemesh method)": [[197, "compas_fd.datastructures.CableMesh.face_curvature"]], "face_degree() (compas_fd.datastructures.cablemesh method)": [[198, "compas_fd.datastructures.CableMesh.face_degree"]], "face_flatness() (compas_fd.datastructures.cablemesh method)": [[199, "compas_fd.datastructures.CableMesh.face_flatness"]], "face_frame() (compas_fd.datastructures.cablemesh method)": [[200, "compas_fd.datastructures.CableMesh.face_frame"]], "face_halfedges() (compas_fd.datastructures.cablemesh method)": [[201, "compas_fd.datastructures.CableMesh.face_halfedges"]], "face_matrix() (compas_fd.datastructures.cablemesh method)": [[202, "compas_fd.datastructures.CableMesh.face_matrix"]], "face_max_degree() (compas_fd.datastructures.cablemesh method)": [[203, "compas_fd.datastructures.CableMesh.face_max_degree"]], "face_min_degree() (compas_fd.datastructures.cablemesh method)": [[204, "compas_fd.datastructures.CableMesh.face_min_degree"]], "face_neighborhood() (compas_fd.datastructures.cablemesh method)": [[205, "compas_fd.datastructures.CableMesh.face_neighborhood"]], "face_neighbors() (compas_fd.datastructures.cablemesh method)": [[206, "compas_fd.datastructures.CableMesh.face_neighbors"]], "face_normal() (compas_fd.datastructures.cablemesh method)": [[207, "compas_fd.datastructures.CableMesh.face_normal"]], "face_plane() (compas_fd.datastructures.cablemesh method)": [[208, "compas_fd.datastructures.CableMesh.face_plane"]], "face_points() (compas_fd.datastructures.cablemesh method)": [[209, "compas_fd.datastructures.CableMesh.face_points"]], "face_polygon() (compas_fd.datastructures.cablemesh method)": [[210, "compas_fd.datastructures.CableMesh.face_polygon"]], "face_sample() (compas_fd.datastructures.cablemesh method)": [[211, "compas_fd.datastructures.CableMesh.face_sample"]], "face_skewness() (compas_fd.datastructures.cablemesh method)": [[212, "compas_fd.datastructures.CableMesh.face_skewness"]], "face_vertex_after() (compas_fd.datastructures.cablemesh method)": [[213, "compas_fd.datastructures.CableMesh.face_vertex_after"]], "face_vertex_ancestor() (compas_fd.datastructures.cablemesh method)": [[214, "compas_fd.datastructures.CableMesh.face_vertex_ancestor"]], "face_vertex_before() (compas_fd.datastructures.cablemesh method)": [[215, "compas_fd.datastructures.CableMesh.face_vertex_before"]], "face_vertex_descendant() (compas_fd.datastructures.cablemesh method)": [[216, "compas_fd.datastructures.CableMesh.face_vertex_descendant"]], "face_vertices() (compas_fd.datastructures.cablemesh method)": [[217, "compas_fd.datastructures.CableMesh.face_vertices"]], "faces() (compas_fd.datastructures.cablemesh method)": [[218, "compas_fd.datastructures.CableMesh.faces"]], "faces_attribute() (compas_fd.datastructures.cablemesh method)": [[219, "compas_fd.datastructures.CableMesh.faces_attribute"]], "faces_attributes() (compas_fd.datastructures.cablemesh method)": [[220, "compas_fd.datastructures.CableMesh.faces_attributes"]], "faces_on_boundaries() (compas_fd.datastructures.cablemesh method)": [[221, "compas_fd.datastructures.CableMesh.faces_on_boundaries"]], "faces_on_boundary() (compas_fd.datastructures.cablemesh method)": [[222, "compas_fd.datastructures.CableMesh.faces_on_boundary"]], "faces_where() (compas_fd.datastructures.cablemesh method)": [[223, "compas_fd.datastructures.CableMesh.faces_where"]], "faces_where_predicate() (compas_fd.datastructures.cablemesh method)": [[224, "compas_fd.datastructures.CableMesh.faces_where_predicate"]], "fixed() (compas_fd.datastructures.cablemesh method)": [[225, "compas_fd.datastructures.CableMesh.fixed"]], "flip_cycles() (compas_fd.datastructures.cablemesh method)": [[226, "compas_fd.datastructures.CableMesh.flip_cycles"]], "from_json() (compas_fd.datastructures.cablemesh class method)": [[227, "compas_fd.datastructures.CableMesh.from_json"]], "from_jsonstring() (compas_fd.datastructures.cablemesh class method)": [[228, "compas_fd.datastructures.CableMesh.from_jsonstring"]], "from_lines() (compas_fd.datastructures.cablemesh class method)": [[229, "compas_fd.datastructures.CableMesh.from_lines"]], "from_meshgrid() (compas_fd.datastructures.cablemesh class method)": [[230, "compas_fd.datastructures.CableMesh.from_meshgrid"]], "from_obj() (compas_fd.datastructures.cablemesh class method)": [[231, "compas_fd.datastructures.CableMesh.from_obj"]], "from_off() (compas_fd.datastructures.cablemesh class method)": [[232, "compas_fd.datastructures.CableMesh.from_off"]], "from_ply() (compas_fd.datastructures.cablemesh class method)": [[233, "compas_fd.datastructures.CableMesh.from_ply"]], "from_points() (compas_fd.datastructures.cablemesh class method)": [[234, "compas_fd.datastructures.CableMesh.from_points"]], "from_polygons() (compas_fd.datastructures.cablemesh class method)": [[235, "compas_fd.datastructures.CableMesh.from_polygons"]], "from_polyhedron() (compas_fd.datastructures.cablemesh class method)": [[236, "compas_fd.datastructures.CableMesh.from_polyhedron"]], "from_polylines() (compas_fd.datastructures.cablemesh class method)": [[237, "compas_fd.datastructures.CableMesh.from_polylines"]], "from_shape() (compas_fd.datastructures.cablemesh class method)": [[238, "compas_fd.datastructures.CableMesh.from_shape"]], "from_stl() (compas_fd.datastructures.cablemesh class method)": [[239, "compas_fd.datastructures.CableMesh.from_stl"]], "from_vertices_and_faces() (compas_fd.datastructures.cablemesh class method)": [[240, "compas_fd.datastructures.CableMesh.from_vertices_and_faces"]], "gkey_vertex() (compas_fd.datastructures.cablemesh method)": [[241, "compas_fd.datastructures.CableMesh.gkey_vertex"]], "halfedge_after() (compas_fd.datastructures.cablemesh method)": [[242, "compas_fd.datastructures.CableMesh.halfedge_after"]], "halfedge_before() (compas_fd.datastructures.cablemesh method)": [[243, "compas_fd.datastructures.CableMesh.halfedge_before"]], "halfedge_face() (compas_fd.datastructures.cablemesh method)": [[244, "compas_fd.datastructures.CableMesh.halfedge_face"]], "halfedge_loop() (compas_fd.datastructures.cablemesh method)": [[245, "compas_fd.datastructures.CableMesh.halfedge_loop"]], "halfedge_loop_vertices() (compas_fd.datastructures.cablemesh method)": [[246, "compas_fd.datastructures.CableMesh.halfedge_loop_vertices"]], "halfedge_strip() (compas_fd.datastructures.cablemesh method)": [[247, "compas_fd.datastructures.CableMesh.halfedge_strip"]], "halfedge_strip_faces() (compas_fd.datastructures.cablemesh method)": [[248, "compas_fd.datastructures.CableMesh.halfedge_strip_faces"]], "has_edge() (compas_fd.datastructures.cablemesh method)": [[249, "compas_fd.datastructures.CableMesh.has_edge"]], "has_face() (compas_fd.datastructures.cablemesh method)": [[250, "compas_fd.datastructures.CableMesh.has_face"]], "has_halfedge() (compas_fd.datastructures.cablemesh method)": [[251, "compas_fd.datastructures.CableMesh.has_halfedge"]], "has_vertex() (compas_fd.datastructures.cablemesh method)": [[252, "compas_fd.datastructures.CableMesh.has_vertex"]], "index_vertex() (compas_fd.datastructures.cablemesh method)": [[253, "compas_fd.datastructures.CableMesh.index_vertex"]], "insert_vertex() (compas_fd.datastructures.cablemesh method)": [[254, "compas_fd.datastructures.CableMesh.insert_vertex"]], "is_closed() (compas_fd.datastructures.cablemesh method)": [[255, "compas_fd.datastructures.CableMesh.is_closed"]], "is_connected() (compas_fd.datastructures.cablemesh method)": [[256, "compas_fd.datastructures.CableMesh.is_connected"]], "is_edge_on_boundary() (compas_fd.datastructures.cablemesh method)": [[257, "compas_fd.datastructures.CableMesh.is_edge_on_boundary"]], "is_empty() (compas_fd.datastructures.cablemesh method)": [[258, "compas_fd.datastructures.CableMesh.is_empty"]], "is_face_on_boundary() (compas_fd.datastructures.cablemesh method)": [[259, "compas_fd.datastructures.CableMesh.is_face_on_boundary"]], "is_manifold() (compas_fd.datastructures.cablemesh method)": [[260, "compas_fd.datastructures.CableMesh.is_manifold"]], "is_orientable() (compas_fd.datastructures.cablemesh method)": [[261, "compas_fd.datastructures.CableMesh.is_orientable"]], "is_quadmesh() (compas_fd.datastructures.cablemesh method)": [[262, "compas_fd.datastructures.CableMesh.is_quadmesh"]], "is_regular() (compas_fd.datastructures.cablemesh method)": [[263, "compas_fd.datastructures.CableMesh.is_regular"]], "is_trimesh() (compas_fd.datastructures.cablemesh method)": [[264, "compas_fd.datastructures.CableMesh.is_trimesh"]], "is_valid() (compas_fd.datastructures.cablemesh method)": [[265, "compas_fd.datastructures.CableMesh.is_valid"]], "is_vertex_connected() (compas_fd.datastructures.cablemesh method)": [[266, "compas_fd.datastructures.CableMesh.is_vertex_connected"]], "is_vertex_on_boundary() (compas_fd.datastructures.cablemesh method)": [[267, "compas_fd.datastructures.CableMesh.is_vertex_on_boundary"]], "join() (compas_fd.datastructures.cablemesh method)": [[268, "compas_fd.datastructures.CableMesh.join"]], "laplacian_matrix() (compas_fd.datastructures.cablemesh method)": [[269, "compas_fd.datastructures.CableMesh.laplacian_matrix"]], "merge_faces() (compas_fd.datastructures.cablemesh method)": [[270, "compas_fd.datastructures.CableMesh.merge_faces"]], "normal() (compas_fd.datastructures.cablemesh method)": [[271, "compas_fd.datastructures.CableMesh.normal"]], "number_of_edges() (compas_fd.datastructures.cablemesh method)": [[272, "compas_fd.datastructures.CableMesh.number_of_edges"]], "number_of_faces() (compas_fd.datastructures.cablemesh method)": [[273, "compas_fd.datastructures.CableMesh.number_of_faces"]], "number_of_vertices() (compas_fd.datastructures.cablemesh method)": [[274, "compas_fd.datastructures.CableMesh.number_of_vertices"]], "obb() (compas_fd.datastructures.cablemesh method)": [[275, "compas_fd.datastructures.CableMesh.obb"]], "offset() (compas_fd.datastructures.cablemesh method)": [[276, "compas_fd.datastructures.CableMesh.offset"]], "quads_to_triangles() (compas_fd.datastructures.cablemesh method)": [[277, "compas_fd.datastructures.CableMesh.quads_to_triangles"]], "remove_duplicate_vertices() (compas_fd.datastructures.cablemesh method)": [[278, "compas_fd.datastructures.CableMesh.remove_duplicate_vertices"]], "remove_unused_vertices() (compas_fd.datastructures.cablemesh method)": [[279, "compas_fd.datastructures.CableMesh.remove_unused_vertices"]], "set_anchors() (compas_fd.datastructures.cablemesh method)": [[280, "compas_fd.datastructures.CableMesh.set_anchors"]], "set_fixed() (compas_fd.datastructures.cablemesh method)": [[281, "compas_fd.datastructures.CableMesh.set_fixed"]], "set_vertex_point() (compas_fd.datastructures.cablemesh method)": [[282, "compas_fd.datastructures.CableMesh.set_vertex_point"]], "sha256() (compas_fd.datastructures.cablemesh method)": [[283, "compas_fd.datastructures.CableMesh.sha256"]], "slice() (compas_fd.datastructures.cablemesh method)": [[284, "compas_fd.datastructures.CableMesh.slice"]], "smooth_area() (compas_fd.datastructures.cablemesh method)": [[285, "compas_fd.datastructures.CableMesh.smooth_area"]], "smooth_centroid() (compas_fd.datastructures.cablemesh method)": [[286, "compas_fd.datastructures.CableMesh.smooth_centroid"]], "split_edge() (compas_fd.datastructures.cablemesh method)": [[287, "compas_fd.datastructures.CableMesh.split_edge"]], "split_face() (compas_fd.datastructures.cablemesh method)": [[288, "compas_fd.datastructures.CableMesh.split_face"]], "split_strip() (compas_fd.datastructures.cablemesh method)": [[289, "compas_fd.datastructures.CableMesh.split_strip"]], "subdivided() (compas_fd.datastructures.cablemesh method)": [[290, "compas_fd.datastructures.CableMesh.subdivided"]], "summary() (compas_fd.datastructures.cablemesh method)": [[291, "compas_fd.datastructures.CableMesh.summary"]], "thickened() (compas_fd.datastructures.cablemesh method)": [[292, "compas_fd.datastructures.CableMesh.thickened"]], "to_json() (compas_fd.datastructures.cablemesh method)": [[293, "compas_fd.datastructures.CableMesh.to_json"]], "to_jsonstring() (compas_fd.datastructures.cablemesh method)": [[294, "compas_fd.datastructures.CableMesh.to_jsonstring"]], "to_lines() (compas_fd.datastructures.cablemesh method)": [[295, "compas_fd.datastructures.CableMesh.to_lines"]], "to_obj() (compas_fd.datastructures.cablemesh method)": [[296, "compas_fd.datastructures.CableMesh.to_obj"]], "to_off() (compas_fd.datastructures.cablemesh method)": [[297, "compas_fd.datastructures.CableMesh.to_off"]], "to_ply() (compas_fd.datastructures.cablemesh method)": [[298, "compas_fd.datastructures.CableMesh.to_ply"]], "to_points() (compas_fd.datastructures.cablemesh method)": [[299, "compas_fd.datastructures.CableMesh.to_points"]], "to_polygons() (compas_fd.datastructures.cablemesh method)": [[300, "compas_fd.datastructures.CableMesh.to_polygons"]], "to_polylines() (compas_fd.datastructures.cablemesh method)": [[301, "compas_fd.datastructures.CableMesh.to_polylines"]], "to_stl() (compas_fd.datastructures.cablemesh method)": [[302, "compas_fd.datastructures.CableMesh.to_stl"]], "to_vertices_and_faces() (compas_fd.datastructures.cablemesh method)": [[303, "compas_fd.datastructures.CableMesh.to_vertices_and_faces"]], "transform() (compas_fd.datastructures.cablemesh method)": [[304, "compas_fd.datastructures.CableMesh.transform"]], "transform_numpy() (compas_fd.datastructures.cablemesh method)": [[305, "compas_fd.datastructures.CableMesh.transform_numpy"]], "transformed() (compas_fd.datastructures.cablemesh method)": [[306, "compas_fd.datastructures.CableMesh.transformed"]], "transformed_numpy() (compas_fd.datastructures.cablemesh method)": [[307, "compas_fd.datastructures.CableMesh.transformed_numpy"]], "unify_cycles() (compas_fd.datastructures.cablemesh method)": [[308, "compas_fd.datastructures.CableMesh.unify_cycles"]], "unset_edge_attribute() (compas_fd.datastructures.cablemesh method)": [[309, "compas_fd.datastructures.CableMesh.unset_edge_attribute"]], "unset_face_attribute() (compas_fd.datastructures.cablemesh method)": [[310, "compas_fd.datastructures.CableMesh.unset_face_attribute"]], "unset_vertex_attribute() (compas_fd.datastructures.cablemesh method)": [[311, "compas_fd.datastructures.CableMesh.unset_vertex_attribute"]], "unweld_edges() (compas_fd.datastructures.cablemesh method)": [[312, "compas_fd.datastructures.CableMesh.unweld_edges"]], "unweld_vertices() (compas_fd.datastructures.cablemesh method)": [[313, "compas_fd.datastructures.CableMesh.unweld_vertices"]], "update_default_edge_attributes() (compas_fd.datastructures.cablemesh method)": [[314, "compas_fd.datastructures.CableMesh.update_default_edge_attributes"]], "update_default_face_attributes() (compas_fd.datastructures.cablemesh method)": [[315, "compas_fd.datastructures.CableMesh.update_default_face_attributes"]], "update_default_vertex_attributes() (compas_fd.datastructures.cablemesh method)": [[316, "compas_fd.datastructures.CableMesh.update_default_vertex_attributes"]], "update_edges() (compas_fd.datastructures.cablemesh method)": [[317, "compas_fd.datastructures.CableMesh.update_edges"]], "update_vertices() (compas_fd.datastructures.cablemesh method)": [[318, "compas_fd.datastructures.CableMesh.update_vertices"]], "validate_data() (compas_fd.datastructures.cablemesh class method)": [[319, "compas_fd.datastructures.CableMesh.validate_data"]], "vertex_area() (compas_fd.datastructures.cablemesh method)": [[320, "compas_fd.datastructures.CableMesh.vertex_area"]], "vertex_attribute() (compas_fd.datastructures.cablemesh method)": [[321, "compas_fd.datastructures.CableMesh.vertex_attribute"]], "vertex_attributes() (compas_fd.datastructures.cablemesh method)": [[322, "compas_fd.datastructures.CableMesh.vertex_attributes"]], "vertex_coordinates() (compas_fd.datastructures.cablemesh method)": [[323, "compas_fd.datastructures.CableMesh.vertex_coordinates"]], "vertex_curvature() (compas_fd.datastructures.cablemesh method)": [[324, "compas_fd.datastructures.CableMesh.vertex_curvature"]], "vertex_degree() (compas_fd.datastructures.cablemesh method)": [[325, "compas_fd.datastructures.CableMesh.vertex_degree"]], "vertex_edges() (compas_fd.datastructures.cablemesh method)": [[326, "compas_fd.datastructures.CableMesh.vertex_edges"]], "vertex_faces() (compas_fd.datastructures.cablemesh method)": [[327, "compas_fd.datastructures.CableMesh.vertex_faces"]], "vertex_gkey() (compas_fd.datastructures.cablemesh method)": [[328, "compas_fd.datastructures.CableMesh.vertex_gkey"]], "vertex_index() (compas_fd.datastructures.cablemesh method)": [[329, "compas_fd.datastructures.CableMesh.vertex_index"]], "vertex_laplacian() (compas_fd.datastructures.cablemesh method)": [[330, "compas_fd.datastructures.CableMesh.vertex_laplacian"]], "vertex_max_degree() (compas_fd.datastructures.cablemesh method)": [[331, "compas_fd.datastructures.CableMesh.vertex_max_degree"]], "vertex_min_degree() (compas_fd.datastructures.cablemesh method)": [[332, "compas_fd.datastructures.CableMesh.vertex_min_degree"]], "vertex_neighborhood() (compas_fd.datastructures.cablemesh method)": [[333, "compas_fd.datastructures.CableMesh.vertex_neighborhood"]], "vertex_neighborhood_centroid() (compas_fd.datastructures.cablemesh method)": [[334, "compas_fd.datastructures.CableMesh.vertex_neighborhood_centroid"]], "vertex_neighbors() (compas_fd.datastructures.cablemesh method)": [[335, "compas_fd.datastructures.CableMesh.vertex_neighbors"]], "vertex_normal() (compas_fd.datastructures.cablemesh method)": [[336, "compas_fd.datastructures.CableMesh.vertex_normal"]], "vertex_point() (compas_fd.datastructures.cablemesh method)": [[337, "compas_fd.datastructures.CableMesh.vertex_point"]], "vertex_sample() (compas_fd.datastructures.cablemesh method)": [[338, "compas_fd.datastructures.CableMesh.vertex_sample"]], "vertices() (compas_fd.datastructures.cablemesh method)": [[339, "compas_fd.datastructures.CableMesh.vertices"]], "vertices_attribute() (compas_fd.datastructures.cablemesh method)": [[340, "compas_fd.datastructures.CableMesh.vertices_attribute"]], "vertices_attributes() (compas_fd.datastructures.cablemesh method)": [[341, "compas_fd.datastructures.CableMesh.vertices_attributes"]], "vertices_on_boundaries() (compas_fd.datastructures.cablemesh method)": [[342, "compas_fd.datastructures.CableMesh.vertices_on_boundaries"]], "vertices_on_boundary() (compas_fd.datastructures.cablemesh method)": [[343, "compas_fd.datastructures.CableMesh.vertices_on_boundary"]], "vertices_points() (compas_fd.datastructures.cablemesh method)": [[344, "compas_fd.datastructures.CableMesh.vertices_points"]], "vertices_where() (compas_fd.datastructures.cablemesh method)": [[345, "compas_fd.datastructures.CableMesh.vertices_where"]], "vertices_where_predicate() (compas_fd.datastructures.cablemesh method)": [[346, "compas_fd.datastructures.CableMesh.vertices_where_predicate"]], "weld() (compas_fd.datastructures.cablemesh method)": [[347, "compas_fd.datastructures.CableMesh.weld"]], "selfweightcalculator (class in compas_fd.loads)": [[348, "compas_fd.loads.SelfweightCalculator"]], "face_matrix() (compas_fd.loads.selfweightcalculator method)": [[349, "compas_fd.loads.SelfweightCalculator.face_matrix"]], "fd_constrained_numpy() (in module compas_fd.solvers)": [[350, "compas_fd.solvers.fd_constrained_numpy"]], "fd_numpy() (in module compas_fd.solvers)": [[351, "compas_fd.solvers.fd_numpy"]], "mesh_fd_constrained_numpy() (in module compas_fd.solvers)": [[352, "compas_fd.solvers.mesh_fd_constrained_numpy"]], "mesh_fd_numpy() (in module compas_fd.solvers)": [[353, "compas_fd.solvers.mesh_fd_numpy"]]}})