Search.setIndex({"docnames": ["api", "api/compas_fd", "api/compas_fd.constraints", "api/compas_fd.datastructures", "api/compas_fd.fd", "api/compas_fd.loads", "api/generated/compas_fd.constraints.CircleConstraint", "api/generated/compas_fd.constraints.CircleConstraint.ToString", "api/generated/compas_fd.constraints.CircleConstraint.compute_normal", "api/generated/compas_fd.constraints.CircleConstraint.compute_param", "api/generated/compas_fd.constraints.CircleConstraint.compute_tangent", "api/generated/compas_fd.constraints.CircleConstraint.copy", "api/generated/compas_fd.constraints.CircleConstraint.from_data", "api/generated/compas_fd.constraints.CircleConstraint.from_json", "api/generated/compas_fd.constraints.CircleConstraint.from_jsonstring", "api/generated/compas_fd.constraints.CircleConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.CircleConstraint.project", "api/generated/compas_fd.constraints.CircleConstraint.register", "api/generated/compas_fd.constraints.CircleConstraint.sha256", "api/generated/compas_fd.constraints.CircleConstraint.to_data", "api/generated/compas_fd.constraints.CircleConstraint.to_json", "api/generated/compas_fd.constraints.CircleConstraint.to_jsonstring", "api/generated/compas_fd.constraints.CircleConstraint.update", "api/generated/compas_fd.constraints.CircleConstraint.update_location_at_param", "api/generated/compas_fd.constraints.CircleConstraint.validate_data", "api/generated/compas_fd.constraints.CircleConstraint.validate_json", "api/generated/compas_fd.constraints.Constraint", "api/generated/compas_fd.constraints.Constraint.ToString", "api/generated/compas_fd.constraints.Constraint.compute_normal", "api/generated/compas_fd.constraints.Constraint.compute_param", "api/generated/compas_fd.constraints.Constraint.compute_tangent", "api/generated/compas_fd.constraints.Constraint.copy", "api/generated/compas_fd.constraints.Constraint.from_data", "api/generated/compas_fd.constraints.Constraint.from_json", "api/generated/compas_fd.constraints.Constraint.from_jsonstring", "api/generated/compas_fd.constraints.Constraint.get_constraint_cls", "api/generated/compas_fd.constraints.Constraint.project", "api/generated/compas_fd.constraints.Constraint.register", "api/generated/compas_fd.constraints.Constraint.sha256", "api/generated/compas_fd.constraints.Constraint.to_data", "api/generated/compas_fd.constraints.Constraint.to_json", "api/generated/compas_fd.constraints.Constraint.to_jsonstring", "api/generated/compas_fd.constraints.Constraint.update", "api/generated/compas_fd.constraints.Constraint.update_location_at_param", "api/generated/compas_fd.constraints.Constraint.validate_data", "api/generated/compas_fd.constraints.Constraint.validate_json", "api/generated/compas_fd.constraints.CurveConstraint", "api/generated/compas_fd.constraints.CurveConstraint.ToString", "api/generated/compas_fd.constraints.CurveConstraint.compute_normal", "api/generated/compas_fd.constraints.CurveConstraint.compute_param", "api/generated/compas_fd.constraints.CurveConstraint.compute_tangent", "api/generated/compas_fd.constraints.CurveConstraint.copy", "api/generated/compas_fd.constraints.CurveConstraint.from_data", "api/generated/compas_fd.constraints.CurveConstraint.from_json", "api/generated/compas_fd.constraints.CurveConstraint.from_jsonstring", "api/generated/compas_fd.constraints.CurveConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.CurveConstraint.project", "api/generated/compas_fd.constraints.CurveConstraint.register", "api/generated/compas_fd.constraints.CurveConstraint.sha256", "api/generated/compas_fd.constraints.CurveConstraint.to_data", "api/generated/compas_fd.constraints.CurveConstraint.to_json", "api/generated/compas_fd.constraints.CurveConstraint.to_jsonstring", "api/generated/compas_fd.constraints.CurveConstraint.update", "api/generated/compas_fd.constraints.CurveConstraint.update_location_at_param", "api/generated/compas_fd.constraints.CurveConstraint.validate_data", "api/generated/compas_fd.constraints.CurveConstraint.validate_json", "api/generated/compas_fd.constraints.FrameConstraint", "api/generated/compas_fd.constraints.FrameConstraint.ToString", "api/generated/compas_fd.constraints.FrameConstraint.compute_normal", "api/generated/compas_fd.constraints.FrameConstraint.compute_param", "api/generated/compas_fd.constraints.FrameConstraint.compute_tangent", "api/generated/compas_fd.constraints.FrameConstraint.copy", "api/generated/compas_fd.constraints.FrameConstraint.from_data", "api/generated/compas_fd.constraints.FrameConstraint.from_json", "api/generated/compas_fd.constraints.FrameConstraint.from_jsonstring", "api/generated/compas_fd.constraints.FrameConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.FrameConstraint.project", "api/generated/compas_fd.constraints.FrameConstraint.register", "api/generated/compas_fd.constraints.FrameConstraint.sha256", "api/generated/compas_fd.constraints.FrameConstraint.to_data", "api/generated/compas_fd.constraints.FrameConstraint.to_json", "api/generated/compas_fd.constraints.FrameConstraint.to_jsonstring", "api/generated/compas_fd.constraints.FrameConstraint.update", "api/generated/compas_fd.constraints.FrameConstraint.update_location_at_param", "api/generated/compas_fd.constraints.FrameConstraint.validate_data", "api/generated/compas_fd.constraints.FrameConstraint.validate_json", "api/generated/compas_fd.constraints.LineConstraint", "api/generated/compas_fd.constraints.LineConstraint.ToString", "api/generated/compas_fd.constraints.LineConstraint.compute_normal", "api/generated/compas_fd.constraints.LineConstraint.compute_param", "api/generated/compas_fd.constraints.LineConstraint.compute_tangent", "api/generated/compas_fd.constraints.LineConstraint.copy", "api/generated/compas_fd.constraints.LineConstraint.from_data", "api/generated/compas_fd.constraints.LineConstraint.from_json", "api/generated/compas_fd.constraints.LineConstraint.from_jsonstring", "api/generated/compas_fd.constraints.LineConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.LineConstraint.project", "api/generated/compas_fd.constraints.LineConstraint.register", "api/generated/compas_fd.constraints.LineConstraint.sha256", "api/generated/compas_fd.constraints.LineConstraint.to_data", "api/generated/compas_fd.constraints.LineConstraint.to_json", "api/generated/compas_fd.constraints.LineConstraint.to_jsonstring", "api/generated/compas_fd.constraints.LineConstraint.update", "api/generated/compas_fd.constraints.LineConstraint.update_location_at_param", "api/generated/compas_fd.constraints.LineConstraint.validate_data", "api/generated/compas_fd.constraints.LineConstraint.validate_json", "api/generated/compas_fd.constraints.PlaneConstraint", "api/generated/compas_fd.constraints.PlaneConstraint.ToString", "api/generated/compas_fd.constraints.PlaneConstraint.compute_normal", "api/generated/compas_fd.constraints.PlaneConstraint.compute_param", "api/generated/compas_fd.constraints.PlaneConstraint.compute_tangent", "api/generated/compas_fd.constraints.PlaneConstraint.copy", "api/generated/compas_fd.constraints.PlaneConstraint.from_data", "api/generated/compas_fd.constraints.PlaneConstraint.from_json", "api/generated/compas_fd.constraints.PlaneConstraint.from_jsonstring", "api/generated/compas_fd.constraints.PlaneConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.PlaneConstraint.project", "api/generated/compas_fd.constraints.PlaneConstraint.register", "api/generated/compas_fd.constraints.PlaneConstraint.sha256", "api/generated/compas_fd.constraints.PlaneConstraint.to_data", "api/generated/compas_fd.constraints.PlaneConstraint.to_json", "api/generated/compas_fd.constraints.PlaneConstraint.to_jsonstring", "api/generated/compas_fd.constraints.PlaneConstraint.update", "api/generated/compas_fd.constraints.PlaneConstraint.update_location_at_param", "api/generated/compas_fd.constraints.PlaneConstraint.validate_data", "api/generated/compas_fd.constraints.PlaneConstraint.validate_json", "api/generated/compas_fd.constraints.SurfaceConstraint", "api/generated/compas_fd.constraints.SurfaceConstraint.ToString", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_normal", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_param", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_tangent", "api/generated/compas_fd.constraints.SurfaceConstraint.copy", "api/generated/compas_fd.constraints.SurfaceConstraint.from_data", "api/generated/compas_fd.constraints.SurfaceConstraint.from_json", "api/generated/compas_fd.constraints.SurfaceConstraint.from_jsonstring", "api/generated/compas_fd.constraints.SurfaceConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.SurfaceConstraint.project", "api/generated/compas_fd.constraints.SurfaceConstraint.register", "api/generated/compas_fd.constraints.SurfaceConstraint.sha256", "api/generated/compas_fd.constraints.SurfaceConstraint.to_data", "api/generated/compas_fd.constraints.SurfaceConstraint.to_json", "api/generated/compas_fd.constraints.SurfaceConstraint.to_jsonstring", "api/generated/compas_fd.constraints.SurfaceConstraint.update", "api/generated/compas_fd.constraints.SurfaceConstraint.update_location_at_param", "api/generated/compas_fd.constraints.SurfaceConstraint.validate_data", "api/generated/compas_fd.constraints.SurfaceConstraint.validate_json", "api/generated/compas_fd.constraints.VectorConstraint", "api/generated/compas_fd.constraints.VectorConstraint.ToString", "api/generated/compas_fd.constraints.VectorConstraint.compute_normal", "api/generated/compas_fd.constraints.VectorConstraint.compute_param", "api/generated/compas_fd.constraints.VectorConstraint.compute_tangent", "api/generated/compas_fd.constraints.VectorConstraint.copy", "api/generated/compas_fd.constraints.VectorConstraint.from_data", "api/generated/compas_fd.constraints.VectorConstraint.from_json", "api/generated/compas_fd.constraints.VectorConstraint.from_jsonstring", "api/generated/compas_fd.constraints.VectorConstraint.get_constraint_cls", "api/generated/compas_fd.constraints.VectorConstraint.project", "api/generated/compas_fd.constraints.VectorConstraint.register", "api/generated/compas_fd.constraints.VectorConstraint.sha256", "api/generated/compas_fd.constraints.VectorConstraint.to_data", "api/generated/compas_fd.constraints.VectorConstraint.to_json", "api/generated/compas_fd.constraints.VectorConstraint.to_jsonstring", "api/generated/compas_fd.constraints.VectorConstraint.update", "api/generated/compas_fd.constraints.VectorConstraint.update_location_at_param", "api/generated/compas_fd.constraints.VectorConstraint.validate_data", "api/generated/compas_fd.constraints.VectorConstraint.validate_json", "api/generated/compas_fd.datastructures.CableMesh", "api/generated/compas_fd.datastructures.CableMesh.ToString", "api/generated/compas_fd.datastructures.CableMesh.add_face", "api/generated/compas_fd.datastructures.CableMesh.add_vertex", "api/generated/compas_fd.datastructures.CableMesh.area", "api/generated/compas_fd.datastructures.CableMesh.bounding_box", "api/generated/compas_fd.datastructures.CableMesh.bounding_box_xy", "api/generated/compas_fd.datastructures.CableMesh.centroid", "api/generated/compas_fd.datastructures.CableMesh.clear", "api/generated/compas_fd.datastructures.CableMesh.collapse_edge", "api/generated/compas_fd.datastructures.CableMesh.connected_components", "api/generated/compas_fd.datastructures.CableMesh.copy", "api/generated/compas_fd.datastructures.CableMesh.cull_vertices", "api/generated/compas_fd.datastructures.CableMesh.delete_face", "api/generated/compas_fd.datastructures.CableMesh.delete_vertex", "api/generated/compas_fd.datastructures.CableMesh.dual", "api/generated/compas_fd.datastructures.CableMesh.edge_attribute", "api/generated/compas_fd.datastructures.CableMesh.edge_attributes", "api/generated/compas_fd.datastructures.CableMesh.edge_coordinates", "api/generated/compas_fd.datastructures.CableMesh.edge_direction", "api/generated/compas_fd.datastructures.CableMesh.edge_faces", "api/generated/compas_fd.datastructures.CableMesh.edge_length", "api/generated/compas_fd.datastructures.CableMesh.edge_loop", "api/generated/compas_fd.datastructures.CableMesh.edge_midpoint", "api/generated/compas_fd.datastructures.CableMesh.edge_point", "api/generated/compas_fd.datastructures.CableMesh.edge_sample", "api/generated/compas_fd.datastructures.CableMesh.edge_strip", "api/generated/compas_fd.datastructures.CableMesh.edge_vector", "api/generated/compas_fd.datastructures.CableMesh.edges", "api/generated/compas_fd.datastructures.CableMesh.edges_attribute", "api/generated/compas_fd.datastructures.CableMesh.edges_attributes", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundaries", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.edges_where", "api/generated/compas_fd.datastructures.CableMesh.edges_where_predicate", "api/generated/compas_fd.datastructures.CableMesh.euler", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_halfedge", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_vertices", "api/generated/compas_fd.datastructures.CableMesh.face_area", "api/generated/compas_fd.datastructures.CableMesh.face_aspect_ratio", "api/generated/compas_fd.datastructures.CableMesh.face_attribute", "api/generated/compas_fd.datastructures.CableMesh.face_attributes", "api/generated/compas_fd.datastructures.CableMesh.face_center", "api/generated/compas_fd.datastructures.CableMesh.face_centroid", "api/generated/compas_fd.datastructures.CableMesh.face_coordinates", "api/generated/compas_fd.datastructures.CableMesh.face_corners", "api/generated/compas_fd.datastructures.CableMesh.face_curvature", "api/generated/compas_fd.datastructures.CableMesh.face_degree", "api/generated/compas_fd.datastructures.CableMesh.face_flatness", "api/generated/compas_fd.datastructures.CableMesh.face_halfedges", "api/generated/compas_fd.datastructures.CableMesh.face_max_degree", "api/generated/compas_fd.datastructures.CableMesh.face_min_degree", "api/generated/compas_fd.datastructures.CableMesh.face_neighborhood", "api/generated/compas_fd.datastructures.CableMesh.face_neighbors", "api/generated/compas_fd.datastructures.CableMesh.face_normal", "api/generated/compas_fd.datastructures.CableMesh.face_plane", "api/generated/compas_fd.datastructures.CableMesh.face_sample", "api/generated/compas_fd.datastructures.CableMesh.face_skewness", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_after", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_ancestor", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_before", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_descendant", "api/generated/compas_fd.datastructures.CableMesh.face_vertices", "api/generated/compas_fd.datastructures.CableMesh.faces", "api/generated/compas_fd.datastructures.CableMesh.faces_attribute", "api/generated/compas_fd.datastructures.CableMesh.faces_attributes", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundaries", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.faces_where", "api/generated/compas_fd.datastructures.CableMesh.faces_where_predicate", "api/generated/compas_fd.datastructures.CableMesh.flip_cycles", "api/generated/compas_fd.datastructures.CableMesh.from_data", "api/generated/compas_fd.datastructures.CableMesh.from_json", "api/generated/compas_fd.datastructures.CableMesh.from_jsonstring", "api/generated/compas_fd.datastructures.CableMesh.from_lines", "api/generated/compas_fd.datastructures.CableMesh.from_meshgrid", "api/generated/compas_fd.datastructures.CableMesh.from_obj", "api/generated/compas_fd.datastructures.CableMesh.from_off", "api/generated/compas_fd.datastructures.CableMesh.from_ply", "api/generated/compas_fd.datastructures.CableMesh.from_points", "api/generated/compas_fd.datastructures.CableMesh.from_polygons", "api/generated/compas_fd.datastructures.CableMesh.from_polyhedron", "api/generated/compas_fd.datastructures.CableMesh.from_polylines", "api/generated/compas_fd.datastructures.CableMesh.from_shape", "api/generated/compas_fd.datastructures.CableMesh.from_stl", "api/generated/compas_fd.datastructures.CableMesh.from_vertices_and_faces", "api/generated/compas_fd.datastructures.CableMesh.genus", "api/generated/compas_fd.datastructures.CableMesh.get_any_face", "api/generated/compas_fd.datastructures.CableMesh.get_any_vertex", "api/generated/compas_fd.datastructures.CableMesh.get_any_vertices", "api/generated/compas_fd.datastructures.CableMesh.gkey_key", "api/generated/compas_fd.datastructures.CableMesh.gkey_vertex", "api/generated/compas_fd.datastructures.CableMesh.halfedge_after", "api/generated/compas_fd.datastructures.CableMesh.halfedge_before", "api/generated/compas_fd.datastructures.CableMesh.halfedge_face", "api/generated/compas_fd.datastructures.CableMesh.halfedge_loop", "api/generated/compas_fd.datastructures.CableMesh.halfedge_strip", "api/generated/compas_fd.datastructures.CableMesh.has_edge", "api/generated/compas_fd.datastructures.CableMesh.has_face", "api/generated/compas_fd.datastructures.CableMesh.has_halfedge", "api/generated/compas_fd.datastructures.CableMesh.has_vertex", "api/generated/compas_fd.datastructures.CableMesh.index_key", "api/generated/compas_fd.datastructures.CableMesh.index_vertex", "api/generated/compas_fd.datastructures.CableMesh.insert_vertex", "api/generated/compas_fd.datastructures.CableMesh.is_closed", "api/generated/compas_fd.datastructures.CableMesh.is_connected", "api/generated/compas_fd.datastructures.CableMesh.is_edge_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.is_empty", "api/generated/compas_fd.datastructures.CableMesh.is_face_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.is_manifold", "api/generated/compas_fd.datastructures.CableMesh.is_orientable", "api/generated/compas_fd.datastructures.CableMesh.is_quadmesh", "api/generated/compas_fd.datastructures.CableMesh.is_regular", "api/generated/compas_fd.datastructures.CableMesh.is_trimesh", "api/generated/compas_fd.datastructures.CableMesh.is_valid", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_connected", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.join", "api/generated/compas_fd.datastructures.CableMesh.key_gkey", "api/generated/compas_fd.datastructures.CableMesh.key_index", "api/generated/compas_fd.datastructures.CableMesh.merge_faces", "api/generated/compas_fd.datastructures.CableMesh.mesh_oriented_bounding_box_numpy", "api/generated/compas_fd.datastructures.CableMesh.mesh_oriented_bounding_box_xy_numpy", "api/generated/compas_fd.datastructures.CableMesh.normal", "api/generated/compas_fd.datastructures.CableMesh.number_of_edges", "api/generated/compas_fd.datastructures.CableMesh.number_of_faces", "api/generated/compas_fd.datastructures.CableMesh.number_of_vertices", "api/generated/compas_fd.datastructures.CableMesh.obb_numpy", "api/generated/compas_fd.datastructures.CableMesh.obb_xy_numpy", "api/generated/compas_fd.datastructures.CableMesh.quads_to_triangles", "api/generated/compas_fd.datastructures.CableMesh.remove_unused_vertices", "api/generated/compas_fd.datastructures.CableMesh.sha256", "api/generated/compas_fd.datastructures.CableMesh.slice_plane", "api/generated/compas_fd.datastructures.CableMesh.smooth_area", "api/generated/compas_fd.datastructures.CableMesh.smooth_centroid", "api/generated/compas_fd.datastructures.CableMesh.split_edge", "api/generated/compas_fd.datastructures.CableMesh.split_face", "api/generated/compas_fd.datastructures.CableMesh.split_strip", "api/generated/compas_fd.datastructures.CableMesh.subdivide", "api/generated/compas_fd.datastructures.CableMesh.summary", "api/generated/compas_fd.datastructures.CableMesh.to_data", "api/generated/compas_fd.datastructures.CableMesh.to_json", "api/generated/compas_fd.datastructures.CableMesh.to_jsonstring", "api/generated/compas_fd.datastructures.CableMesh.to_lines", "api/generated/compas_fd.datastructures.CableMesh.to_obj", "api/generated/compas_fd.datastructures.CableMesh.to_off", "api/generated/compas_fd.datastructures.CableMesh.to_ply", "api/generated/compas_fd.datastructures.CableMesh.to_points", "api/generated/compas_fd.datastructures.CableMesh.to_polygons", "api/generated/compas_fd.datastructures.CableMesh.to_polylines", "api/generated/compas_fd.datastructures.CableMesh.to_stl", "api/generated/compas_fd.datastructures.CableMesh.to_vertices_and_faces", "api/generated/compas_fd.datastructures.CableMesh.transform", "api/generated/compas_fd.datastructures.CableMesh.transformed", "api/generated/compas_fd.datastructures.CableMesh.unify_cycles", "api/generated/compas_fd.datastructures.CableMesh.unset_edge_attribute", "api/generated/compas_fd.datastructures.CableMesh.unset_face_attribute", "api/generated/compas_fd.datastructures.CableMesh.unset_vertex_attribute", "api/generated/compas_fd.datastructures.CableMesh.update_default_edge_attributes", "api/generated/compas_fd.datastructures.CableMesh.update_default_face_attributes", "api/generated/compas_fd.datastructures.CableMesh.update_default_vertex_attributes", "api/generated/compas_fd.datastructures.CableMesh.validate_data", "api/generated/compas_fd.datastructures.CableMesh.validate_json", "api/generated/compas_fd.datastructures.CableMesh.vertex_area", "api/generated/compas_fd.datastructures.CableMesh.vertex_attribute", "api/generated/compas_fd.datastructures.CableMesh.vertex_attributes", "api/generated/compas_fd.datastructures.CableMesh.vertex_coordinates", "api/generated/compas_fd.datastructures.CableMesh.vertex_curvature", "api/generated/compas_fd.datastructures.CableMesh.vertex_degree", "api/generated/compas_fd.datastructures.CableMesh.vertex_edges", "api/generated/compas_fd.datastructures.CableMesh.vertex_faces", "api/generated/compas_fd.datastructures.CableMesh.vertex_gkey", "api/generated/compas_fd.datastructures.CableMesh.vertex_index", "api/generated/compas_fd.datastructures.CableMesh.vertex_laplacian", "api/generated/compas_fd.datastructures.CableMesh.vertex_max_degree", "api/generated/compas_fd.datastructures.CableMesh.vertex_min_degree", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood_centroid", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighbors", "api/generated/compas_fd.datastructures.CableMesh.vertex_normal", "api/generated/compas_fd.datastructures.CableMesh.vertex_sample", "api/generated/compas_fd.datastructures.CableMesh.vertices", "api/generated/compas_fd.datastructures.CableMesh.vertices_attribute", "api/generated/compas_fd.datastructures.CableMesh.vertices_attributes", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundaries", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundary", "api/generated/compas_fd.datastructures.CableMesh.vertices_where", "api/generated/compas_fd.datastructures.CableMesh.vertices_where_predicate", "api/generated/compas_fd.fd.fd_constrained_numpy", "api/generated/compas_fd.fd.fd_numpy", "api/generated/compas_fd.fd.mesh_fd_constrained_numpy", "api/generated/compas_fd.fd.mesh_fd_numpy", "api/generated/compas_fd.loads.SelfweightCalculator", "api/generated/compas_fd.loads.SelfweightCalculator.face_matrix", "examples", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/compas_fd.rst", "api/compas_fd.constraints.rst", "api/compas_fd.datastructures.rst", "api/compas_fd.fd.rst", "api/compas_fd.loads.rst", "api/generated/compas_fd.constraints.CircleConstraint.rst", "api/generated/compas_fd.constraints.CircleConstraint.ToString.rst", "api/generated/compas_fd.constraints.CircleConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.CircleConstraint.compute_param.rst", "api/generated/compas_fd.constraints.CircleConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.CircleConstraint.copy.rst", "api/generated/compas_fd.constraints.CircleConstraint.from_data.rst", "api/generated/compas_fd.constraints.CircleConstraint.from_json.rst", "api/generated/compas_fd.constraints.CircleConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.CircleConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.CircleConstraint.project.rst", "api/generated/compas_fd.constraints.CircleConstraint.register.rst", "api/generated/compas_fd.constraints.CircleConstraint.sha256.rst", "api/generated/compas_fd.constraints.CircleConstraint.to_data.rst", "api/generated/compas_fd.constraints.CircleConstraint.to_json.rst", "api/generated/compas_fd.constraints.CircleConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.CircleConstraint.update.rst", "api/generated/compas_fd.constraints.CircleConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.CircleConstraint.validate_data.rst", "api/generated/compas_fd.constraints.CircleConstraint.validate_json.rst", "api/generated/compas_fd.constraints.Constraint.rst", "api/generated/compas_fd.constraints.Constraint.ToString.rst", "api/generated/compas_fd.constraints.Constraint.compute_normal.rst", "api/generated/compas_fd.constraints.Constraint.compute_param.rst", "api/generated/compas_fd.constraints.Constraint.compute_tangent.rst", "api/generated/compas_fd.constraints.Constraint.copy.rst", "api/generated/compas_fd.constraints.Constraint.from_data.rst", "api/generated/compas_fd.constraints.Constraint.from_json.rst", "api/generated/compas_fd.constraints.Constraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.Constraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.Constraint.project.rst", "api/generated/compas_fd.constraints.Constraint.register.rst", "api/generated/compas_fd.constraints.Constraint.sha256.rst", "api/generated/compas_fd.constraints.Constraint.to_data.rst", "api/generated/compas_fd.constraints.Constraint.to_json.rst", "api/generated/compas_fd.constraints.Constraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.Constraint.update.rst", "api/generated/compas_fd.constraints.Constraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.Constraint.validate_data.rst", "api/generated/compas_fd.constraints.Constraint.validate_json.rst", "api/generated/compas_fd.constraints.CurveConstraint.rst", "api/generated/compas_fd.constraints.CurveConstraint.ToString.rst", "api/generated/compas_fd.constraints.CurveConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.CurveConstraint.compute_param.rst", "api/generated/compas_fd.constraints.CurveConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.CurveConstraint.copy.rst", "api/generated/compas_fd.constraints.CurveConstraint.from_data.rst", "api/generated/compas_fd.constraints.CurveConstraint.from_json.rst", "api/generated/compas_fd.constraints.CurveConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.CurveConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.CurveConstraint.project.rst", "api/generated/compas_fd.constraints.CurveConstraint.register.rst", "api/generated/compas_fd.constraints.CurveConstraint.sha256.rst", "api/generated/compas_fd.constraints.CurveConstraint.to_data.rst", "api/generated/compas_fd.constraints.CurveConstraint.to_json.rst", "api/generated/compas_fd.constraints.CurveConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.CurveConstraint.update.rst", "api/generated/compas_fd.constraints.CurveConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.CurveConstraint.validate_data.rst", "api/generated/compas_fd.constraints.CurveConstraint.validate_json.rst", "api/generated/compas_fd.constraints.FrameConstraint.rst", "api/generated/compas_fd.constraints.FrameConstraint.ToString.rst", "api/generated/compas_fd.constraints.FrameConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.FrameConstraint.compute_param.rst", "api/generated/compas_fd.constraints.FrameConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.FrameConstraint.copy.rst", "api/generated/compas_fd.constraints.FrameConstraint.from_data.rst", "api/generated/compas_fd.constraints.FrameConstraint.from_json.rst", "api/generated/compas_fd.constraints.FrameConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.FrameConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.FrameConstraint.project.rst", "api/generated/compas_fd.constraints.FrameConstraint.register.rst", "api/generated/compas_fd.constraints.FrameConstraint.sha256.rst", "api/generated/compas_fd.constraints.FrameConstraint.to_data.rst", "api/generated/compas_fd.constraints.FrameConstraint.to_json.rst", "api/generated/compas_fd.constraints.FrameConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.FrameConstraint.update.rst", "api/generated/compas_fd.constraints.FrameConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.FrameConstraint.validate_data.rst", "api/generated/compas_fd.constraints.FrameConstraint.validate_json.rst", "api/generated/compas_fd.constraints.LineConstraint.rst", "api/generated/compas_fd.constraints.LineConstraint.ToString.rst", "api/generated/compas_fd.constraints.LineConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.LineConstraint.compute_param.rst", "api/generated/compas_fd.constraints.LineConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.LineConstraint.copy.rst", "api/generated/compas_fd.constraints.LineConstraint.from_data.rst", "api/generated/compas_fd.constraints.LineConstraint.from_json.rst", "api/generated/compas_fd.constraints.LineConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.LineConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.LineConstraint.project.rst", "api/generated/compas_fd.constraints.LineConstraint.register.rst", "api/generated/compas_fd.constraints.LineConstraint.sha256.rst", "api/generated/compas_fd.constraints.LineConstraint.to_data.rst", "api/generated/compas_fd.constraints.LineConstraint.to_json.rst", "api/generated/compas_fd.constraints.LineConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.LineConstraint.update.rst", "api/generated/compas_fd.constraints.LineConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.LineConstraint.validate_data.rst", "api/generated/compas_fd.constraints.LineConstraint.validate_json.rst", "api/generated/compas_fd.constraints.PlaneConstraint.rst", "api/generated/compas_fd.constraints.PlaneConstraint.ToString.rst", "api/generated/compas_fd.constraints.PlaneConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.PlaneConstraint.compute_param.rst", "api/generated/compas_fd.constraints.PlaneConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.PlaneConstraint.copy.rst", "api/generated/compas_fd.constraints.PlaneConstraint.from_data.rst", "api/generated/compas_fd.constraints.PlaneConstraint.from_json.rst", "api/generated/compas_fd.constraints.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.PlaneConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.PlaneConstraint.project.rst", "api/generated/compas_fd.constraints.PlaneConstraint.register.rst", "api/generated/compas_fd.constraints.PlaneConstraint.sha256.rst", "api/generated/compas_fd.constraints.PlaneConstraint.to_data.rst", "api/generated/compas_fd.constraints.PlaneConstraint.to_json.rst", "api/generated/compas_fd.constraints.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.PlaneConstraint.update.rst", "api/generated/compas_fd.constraints.PlaneConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.PlaneConstraint.validate_data.rst", "api/generated/compas_fd.constraints.PlaneConstraint.validate_json.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.ToString.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_param.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.copy.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.from_data.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.from_json.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.project.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.register.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.sha256.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.to_data.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.to_json.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.update.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.validate_data.rst", "api/generated/compas_fd.constraints.SurfaceConstraint.validate_json.rst", "api/generated/compas_fd.constraints.VectorConstraint.rst", "api/generated/compas_fd.constraints.VectorConstraint.ToString.rst", "api/generated/compas_fd.constraints.VectorConstraint.compute_normal.rst", "api/generated/compas_fd.constraints.VectorConstraint.compute_param.rst", "api/generated/compas_fd.constraints.VectorConstraint.compute_tangent.rst", "api/generated/compas_fd.constraints.VectorConstraint.copy.rst", "api/generated/compas_fd.constraints.VectorConstraint.from_data.rst", "api/generated/compas_fd.constraints.VectorConstraint.from_json.rst", "api/generated/compas_fd.constraints.VectorConstraint.from_jsonstring.rst", "api/generated/compas_fd.constraints.VectorConstraint.get_constraint_cls.rst", "api/generated/compas_fd.constraints.VectorConstraint.project.rst", "api/generated/compas_fd.constraints.VectorConstraint.register.rst", "api/generated/compas_fd.constraints.VectorConstraint.sha256.rst", "api/generated/compas_fd.constraints.VectorConstraint.to_data.rst", "api/generated/compas_fd.constraints.VectorConstraint.to_json.rst", "api/generated/compas_fd.constraints.VectorConstraint.to_jsonstring.rst", "api/generated/compas_fd.constraints.VectorConstraint.update.rst", "api/generated/compas_fd.constraints.VectorConstraint.update_location_at_param.rst", "api/generated/compas_fd.constraints.VectorConstraint.validate_data.rst", "api/generated/compas_fd.constraints.VectorConstraint.validate_json.rst", "api/generated/compas_fd.datastructures.CableMesh.rst", "api/generated/compas_fd.datastructures.CableMesh.ToString.rst", "api/generated/compas_fd.datastructures.CableMesh.add_face.rst", "api/generated/compas_fd.datastructures.CableMesh.add_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.area.rst", "api/generated/compas_fd.datastructures.CableMesh.bounding_box.rst", "api/generated/compas_fd.datastructures.CableMesh.bounding_box_xy.rst", "api/generated/compas_fd.datastructures.CableMesh.centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.clear.rst", "api/generated/compas_fd.datastructures.CableMesh.collapse_edge.rst", "api/generated/compas_fd.datastructures.CableMesh.connected_components.rst", "api/generated/compas_fd.datastructures.CableMesh.copy.rst", "api/generated/compas_fd.datastructures.CableMesh.cull_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.delete_face.rst", "api/generated/compas_fd.datastructures.CableMesh.delete_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.dual.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_coordinates.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_direction.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_length.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_loop.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_midpoint.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_point.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_sample.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_strip.rst", "api/generated/compas_fd.datastructures.CableMesh.edge_vector.rst", "api/generated/compas_fd.datastructures.CableMesh.edges.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundaries.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_where.rst", "api/generated/compas_fd.datastructures.CableMesh.edges_where_predicate.rst", "api/generated/compas_fd.datastructures.CableMesh.euler.rst", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency.rst", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_halfedge.rst", "api/generated/compas_fd.datastructures.CableMesh.face_adjacency_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.face_area.rst", "api/generated/compas_fd.datastructures.CableMesh.face_aspect_ratio.rst", "api/generated/compas_fd.datastructures.CableMesh.face_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.face_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.face_center.rst", "api/generated/compas_fd.datastructures.CableMesh.face_centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.face_coordinates.rst", "api/generated/compas_fd.datastructures.CableMesh.face_corners.rst", "api/generated/compas_fd.datastructures.CableMesh.face_curvature.rst", "api/generated/compas_fd.datastructures.CableMesh.face_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.face_flatness.rst", "api/generated/compas_fd.datastructures.CableMesh.face_halfedges.rst", "api/generated/compas_fd.datastructures.CableMesh.face_max_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.face_min_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.face_neighborhood.rst", "api/generated/compas_fd.datastructures.CableMesh.face_neighbors.rst", "api/generated/compas_fd.datastructures.CableMesh.face_normal.rst", "api/generated/compas_fd.datastructures.CableMesh.face_plane.rst", "api/generated/compas_fd.datastructures.CableMesh.face_sample.rst", "api/generated/compas_fd.datastructures.CableMesh.face_skewness.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_after.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_ancestor.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_before.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertex_descendant.rst", "api/generated/compas_fd.datastructures.CableMesh.face_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.faces.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundaries.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_where.rst", "api/generated/compas_fd.datastructures.CableMesh.faces_where_predicate.rst", "api/generated/compas_fd.datastructures.CableMesh.flip_cycles.rst", "api/generated/compas_fd.datastructures.CableMesh.from_data.rst", "api/generated/compas_fd.datastructures.CableMesh.from_json.rst", "api/generated/compas_fd.datastructures.CableMesh.from_jsonstring.rst", "api/generated/compas_fd.datastructures.CableMesh.from_lines.rst", "api/generated/compas_fd.datastructures.CableMesh.from_meshgrid.rst", "api/generated/compas_fd.datastructures.CableMesh.from_obj.rst", "api/generated/compas_fd.datastructures.CableMesh.from_off.rst", "api/generated/compas_fd.datastructures.CableMesh.from_ply.rst", "api/generated/compas_fd.datastructures.CableMesh.from_points.rst", "api/generated/compas_fd.datastructures.CableMesh.from_polygons.rst", "api/generated/compas_fd.datastructures.CableMesh.from_polyhedron.rst", "api/generated/compas_fd.datastructures.CableMesh.from_polylines.rst", "api/generated/compas_fd.datastructures.CableMesh.from_shape.rst", "api/generated/compas_fd.datastructures.CableMesh.from_stl.rst", "api/generated/compas_fd.datastructures.CableMesh.from_vertices_and_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.genus.rst", "api/generated/compas_fd.datastructures.CableMesh.get_any_face.rst", "api/generated/compas_fd.datastructures.CableMesh.get_any_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.get_any_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.gkey_key.rst", "api/generated/compas_fd.datastructures.CableMesh.gkey_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_after.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_before.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_face.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_loop.rst", "api/generated/compas_fd.datastructures.CableMesh.halfedge_strip.rst", "api/generated/compas_fd.datastructures.CableMesh.has_edge.rst", "api/generated/compas_fd.datastructures.CableMesh.has_face.rst", "api/generated/compas_fd.datastructures.CableMesh.has_halfedge.rst", "api/generated/compas_fd.datastructures.CableMesh.has_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.index_key.rst", "api/generated/compas_fd.datastructures.CableMesh.index_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.insert_vertex.rst", "api/generated/compas_fd.datastructures.CableMesh.is_closed.rst", "api/generated/compas_fd.datastructures.CableMesh.is_connected.rst", "api/generated/compas_fd.datastructures.CableMesh.is_edge_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.is_empty.rst", "api/generated/compas_fd.datastructures.CableMesh.is_face_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.is_manifold.rst", "api/generated/compas_fd.datastructures.CableMesh.is_orientable.rst", "api/generated/compas_fd.datastructures.CableMesh.is_quadmesh.rst", "api/generated/compas_fd.datastructures.CableMesh.is_regular.rst", "api/generated/compas_fd.datastructures.CableMesh.is_trimesh.rst", "api/generated/compas_fd.datastructures.CableMesh.is_valid.rst", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_connected.rst", "api/generated/compas_fd.datastructures.CableMesh.is_vertex_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.join.rst", "api/generated/compas_fd.datastructures.CableMesh.key_gkey.rst", "api/generated/compas_fd.datastructures.CableMesh.key_index.rst", "api/generated/compas_fd.datastructures.CableMesh.merge_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.mesh_oriented_bounding_box_numpy.rst", "api/generated/compas_fd.datastructures.CableMesh.mesh_oriented_bounding_box_xy_numpy.rst", "api/generated/compas_fd.datastructures.CableMesh.normal.rst", "api/generated/compas_fd.datastructures.CableMesh.number_of_edges.rst", "api/generated/compas_fd.datastructures.CableMesh.number_of_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.number_of_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.obb_numpy.rst", "api/generated/compas_fd.datastructures.CableMesh.obb_xy_numpy.rst", "api/generated/compas_fd.datastructures.CableMesh.quads_to_triangles.rst", "api/generated/compas_fd.datastructures.CableMesh.remove_unused_vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.sha256.rst", "api/generated/compas_fd.datastructures.CableMesh.slice_plane.rst", "api/generated/compas_fd.datastructures.CableMesh.smooth_area.rst", "api/generated/compas_fd.datastructures.CableMesh.smooth_centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.split_edge.rst", "api/generated/compas_fd.datastructures.CableMesh.split_face.rst", "api/generated/compas_fd.datastructures.CableMesh.split_strip.rst", "api/generated/compas_fd.datastructures.CableMesh.subdivide.rst", "api/generated/compas_fd.datastructures.CableMesh.summary.rst", "api/generated/compas_fd.datastructures.CableMesh.to_data.rst", "api/generated/compas_fd.datastructures.CableMesh.to_json.rst", "api/generated/compas_fd.datastructures.CableMesh.to_jsonstring.rst", "api/generated/compas_fd.datastructures.CableMesh.to_lines.rst", "api/generated/compas_fd.datastructures.CableMesh.to_obj.rst", "api/generated/compas_fd.datastructures.CableMesh.to_off.rst", "api/generated/compas_fd.datastructures.CableMesh.to_ply.rst", "api/generated/compas_fd.datastructures.CableMesh.to_points.rst", "api/generated/compas_fd.datastructures.CableMesh.to_polygons.rst", "api/generated/compas_fd.datastructures.CableMesh.to_polylines.rst", "api/generated/compas_fd.datastructures.CableMesh.to_stl.rst", "api/generated/compas_fd.datastructures.CableMesh.to_vertices_and_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.transform.rst", "api/generated/compas_fd.datastructures.CableMesh.transformed.rst", "api/generated/compas_fd.datastructures.CableMesh.unify_cycles.rst", "api/generated/compas_fd.datastructures.CableMesh.unset_edge_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.unset_face_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.unset_vertex_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.update_default_edge_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.update_default_face_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.update_default_vertex_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.validate_data.rst", "api/generated/compas_fd.datastructures.CableMesh.validate_json.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_area.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_coordinates.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_curvature.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_edges.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_faces.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_gkey.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_index.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_laplacian.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_max_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_min_degree.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighborhood_centroid.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_neighbors.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_normal.rst", "api/generated/compas_fd.datastructures.CableMesh.vertex_sample.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_attribute.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_attributes.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundaries.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_on_boundary.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_where.rst", "api/generated/compas_fd.datastructures.CableMesh.vertices_where_predicate.rst", "api/generated/compas_fd.fd.fd_constrained_numpy.rst", "api/generated/compas_fd.fd.fd_numpy.rst", "api/generated/compas_fd.fd.mesh_fd_constrained_numpy.rst", "api/generated/compas_fd.fd.mesh_fd_numpy.rst", "api/generated/compas_fd.loads.SelfweightCalculator.rst", "api/generated/compas_fd.loads.SelfweightCalculator.face_matrix.rst", "examples.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "compas_fd", "constraints", "datastructures", "fd", "loads", "CircleConstraint", "CircleConstraint.ToString", "CircleConstraint.compute_normal", "CircleConstraint.compute_param", "CircleConstraint.compute_tangent", "CircleConstraint.copy", "CircleConstraint.from_data", "CircleConstraint.from_json", "CircleConstraint.from_jsonstring", "CircleConstraint.get_constraint_cls", "CircleConstraint.project", "CircleConstraint.register", "CircleConstraint.sha256", "CircleConstraint.to_data", "CircleConstraint.to_json", "CircleConstraint.to_jsonstring", "CircleConstraint.update", "CircleConstraint.update_location_at_param", "CircleConstraint.validate_data", "CircleConstraint.validate_json", "Constraint", "Constraint.ToString", "Constraint.compute_normal", "Constraint.compute_param", "Constraint.compute_tangent", "Constraint.copy", "Constraint.from_data", "Constraint.from_json", "Constraint.from_jsonstring", "Constraint.get_constraint_cls", "Constraint.project", "Constraint.register", "Constraint.sha256", "Constraint.to_data", "Constraint.to_json", "Constraint.to_jsonstring", "Constraint.update", "Constraint.update_location_at_param", "Constraint.validate_data", "Constraint.validate_json", "CurveConstraint", "CurveConstraint.ToString", "CurveConstraint.compute_normal", "CurveConstraint.compute_param", "CurveConstraint.compute_tangent", "CurveConstraint.copy", "CurveConstraint.from_data", "CurveConstraint.from_json", "CurveConstraint.from_jsonstring", "CurveConstraint.get_constraint_cls", "CurveConstraint.project", "CurveConstraint.register", "CurveConstraint.sha256", "CurveConstraint.to_data", "CurveConstraint.to_json", "CurveConstraint.to_jsonstring", "CurveConstraint.update", "CurveConstraint.update_location_at_param", "CurveConstraint.validate_data", "CurveConstraint.validate_json", "FrameConstraint", "FrameConstraint.ToString", "FrameConstraint.compute_normal", "FrameConstraint.compute_param", "FrameConstraint.compute_tangent", "FrameConstraint.copy", "FrameConstraint.from_data", "FrameConstraint.from_json", "FrameConstraint.from_jsonstring", "FrameConstraint.get_constraint_cls", "FrameConstraint.project", "FrameConstraint.register", "FrameConstraint.sha256", "FrameConstraint.to_data", "FrameConstraint.to_json", "FrameConstraint.to_jsonstring", "FrameConstraint.update", "FrameConstraint.update_location_at_param", "FrameConstraint.validate_data", "FrameConstraint.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.compute_normal", "LineConstraint.compute_param", "LineConstraint.compute_tangent", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.get_constraint_cls", "LineConstraint.project", "LineConstraint.register", "LineConstraint.sha256", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.update", "LineConstraint.update_location_at_param", "LineConstraint.validate_data", "LineConstraint.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.compute_normal", "PlaneConstraint.compute_param", "PlaneConstraint.compute_tangent", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.get_constraint_cls", "PlaneConstraint.project", "PlaneConstraint.register", "PlaneConstraint.sha256", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.update", "PlaneConstraint.update_location_at_param", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "SurfaceConstraint", "SurfaceConstraint.ToString", "SurfaceConstraint.compute_normal", "SurfaceConstraint.compute_param", "SurfaceConstraint.compute_tangent", "SurfaceConstraint.copy", "SurfaceConstraint.from_data", "SurfaceConstraint.from_json", "SurfaceConstraint.from_jsonstring", "SurfaceConstraint.get_constraint_cls", "SurfaceConstraint.project", "SurfaceConstraint.register", "SurfaceConstraint.sha256", "SurfaceConstraint.to_data", "SurfaceConstraint.to_json", "SurfaceConstraint.to_jsonstring", "SurfaceConstraint.update", "SurfaceConstraint.update_location_at_param", "SurfaceConstraint.validate_data", "SurfaceConstraint.validate_json", "VectorConstraint", "VectorConstraint.ToString", "VectorConstraint.compute_normal", "VectorConstraint.compute_param", "VectorConstraint.compute_tangent", "VectorConstraint.copy", "VectorConstraint.from_data", "VectorConstraint.from_json", "VectorConstraint.from_jsonstring", "VectorConstraint.get_constraint_cls", "VectorConstraint.project", "VectorConstraint.register", "VectorConstraint.sha256", "VectorConstraint.to_data", "VectorConstraint.to_json", "VectorConstraint.to_jsonstring", "VectorConstraint.update", "VectorConstraint.update_location_at_param", "VectorConstraint.validate_data", "VectorConstraint.validate_json", "CableMesh", "CableMesh.ToString", "CableMesh.add_face", "CableMesh.add_vertex", "CableMesh.area", "CableMesh.bounding_box", "CableMesh.bounding_box_xy", "CableMesh.centroid", "CableMesh.clear", "CableMesh.collapse_edge", "CableMesh.connected_components", "CableMesh.copy", "CableMesh.cull_vertices", "CableMesh.delete_face", "CableMesh.delete_vertex", "CableMesh.dual", "CableMesh.edge_attribute", "CableMesh.edge_attributes", "CableMesh.edge_coordinates", "CableMesh.edge_direction", "CableMesh.edge_faces", "CableMesh.edge_length", "CableMesh.edge_loop", "CableMesh.edge_midpoint", "CableMesh.edge_point", "CableMesh.edge_sample", "CableMesh.edge_strip", "CableMesh.edge_vector", "CableMesh.edges", "CableMesh.edges_attribute", "CableMesh.edges_attributes", "CableMesh.edges_on_boundaries", "CableMesh.edges_on_boundary", "CableMesh.edges_where", "CableMesh.edges_where_predicate", "CableMesh.euler", "CableMesh.face_adjacency", "CableMesh.face_adjacency_halfedge", "CableMesh.face_adjacency_vertices", "CableMesh.face_area", "CableMesh.face_aspect_ratio", "CableMesh.face_attribute", "CableMesh.face_attributes", "CableMesh.face_center", "CableMesh.face_centroid", "CableMesh.face_coordinates", "CableMesh.face_corners", "CableMesh.face_curvature", "CableMesh.face_degree", "CableMesh.face_flatness", "CableMesh.face_halfedges", "CableMesh.face_max_degree", "CableMesh.face_min_degree", "CableMesh.face_neighborhood", "CableMesh.face_neighbors", "CableMesh.face_normal", "CableMesh.face_plane", "CableMesh.face_sample", "CableMesh.face_skewness", "CableMesh.face_vertex_after", "CableMesh.face_vertex_ancestor", "CableMesh.face_vertex_before", "CableMesh.face_vertex_descendant", "CableMesh.face_vertices", "CableMesh.faces", "CableMesh.faces_attribute", "CableMesh.faces_attributes", "CableMesh.faces_on_boundaries", "CableMesh.faces_on_boundary", "CableMesh.faces_where", "CableMesh.faces_where_predicate", "CableMesh.flip_cycles", "CableMesh.from_data", "CableMesh.from_json", "CableMesh.from_jsonstring", "CableMesh.from_lines", "CableMesh.from_meshgrid", "CableMesh.from_obj", "CableMesh.from_off", "CableMesh.from_ply", "CableMesh.from_points", "CableMesh.from_polygons", "CableMesh.from_polyhedron", "CableMesh.from_polylines", "CableMesh.from_shape", "CableMesh.from_stl", "CableMesh.from_vertices_and_faces", "CableMesh.genus", "CableMesh.get_any_face", "CableMesh.get_any_vertex", "CableMesh.get_any_vertices", "CableMesh.gkey_key", "CableMesh.gkey_vertex", "CableMesh.halfedge_after", "CableMesh.halfedge_before", "CableMesh.halfedge_face", "CableMesh.halfedge_loop", "CableMesh.halfedge_strip", "CableMesh.has_edge", "CableMesh.has_face", "CableMesh.has_halfedge", "CableMesh.has_vertex", "CableMesh.index_key", "CableMesh.index_vertex", "CableMesh.insert_vertex", "CableMesh.is_closed", "CableMesh.is_connected", "CableMesh.is_edge_on_boundary", "CableMesh.is_empty", "CableMesh.is_face_on_boundary", "CableMesh.is_manifold", "CableMesh.is_orientable", "CableMesh.is_quadmesh", "CableMesh.is_regular", "CableMesh.is_trimesh", "CableMesh.is_valid", "CableMesh.is_vertex_connected", "CableMesh.is_vertex_on_boundary", "CableMesh.join", "CableMesh.key_gkey", "CableMesh.key_index", "CableMesh.merge_faces", "CableMesh.mesh_oriented_bounding_box_numpy", "CableMesh.mesh_oriented_bounding_box_xy_numpy", "CableMesh.normal", "CableMesh.number_of_edges", "CableMesh.number_of_faces", "CableMesh.number_of_vertices", "CableMesh.obb_numpy", "CableMesh.obb_xy_numpy", "CableMesh.quads_to_triangles", "CableMesh.remove_unused_vertices", "CableMesh.sha256", "CableMesh.slice_plane", "CableMesh.smooth_area", "CableMesh.smooth_centroid", "CableMesh.split_edge", "CableMesh.split_face", "CableMesh.split_strip", "CableMesh.subdivide", "CableMesh.summary", "CableMesh.to_data", "CableMesh.to_json", "CableMesh.to_jsonstring", "CableMesh.to_lines", "CableMesh.to_obj", "CableMesh.to_off", "CableMesh.to_ply", "CableMesh.to_points", "CableMesh.to_polygons", "CableMesh.to_polylines", "CableMesh.to_stl", "CableMesh.to_vertices_and_faces", "CableMesh.transform", "CableMesh.transformed", "CableMesh.unify_cycles", "CableMesh.unset_edge_attribute", "CableMesh.unset_face_attribute", "CableMesh.unset_vertex_attribute", "CableMesh.update_default_edge_attributes", "CableMesh.update_default_face_attributes", "CableMesh.update_default_vertex_attributes", "CableMesh.validate_data", "CableMesh.validate_json", "CableMesh.vertex_area", "CableMesh.vertex_attribute", "CableMesh.vertex_attributes", "CableMesh.vertex_coordinates", "CableMesh.vertex_curvature", "CableMesh.vertex_degree", "CableMesh.vertex_edges", "CableMesh.vertex_faces", "CableMesh.vertex_gkey", "CableMesh.vertex_index", "CableMesh.vertex_laplacian", "CableMesh.vertex_max_degree", "CableMesh.vertex_min_degree", "CableMesh.vertex_neighborhood", "CableMesh.vertex_neighborhood_centroid", "CableMesh.vertex_neighbors", "CableMesh.vertex_normal", "CableMesh.vertex_sample", "CableMesh.vertices", "CableMesh.vertices_attribute", "CableMesh.vertices_attributes", "CableMesh.vertices_on_boundaries", "CableMesh.vertices_on_boundary", "CableMesh.vertices_where", "CableMesh.vertices_where_predicate", "fd_constrained_numpy", "fd_numpy", "mesh_fd_constrained_numpy", "mesh_fd_numpy", "SelfweightCalculator", "SelfweightCalculator.face_matrix", "Examples", "compas_fd", "Getting Started", "License", "Tutorial"], "terms": {"compas_fd": [0, 6, 26, 46, 66, 86, 106, 126, 146, 166, 355, 356, 357, 358, 359], "constraint": [1, 6, 46, 66, 86, 106, 126, 146, 355, 362], "datastructur": [1, 18, 38, 58, 78, 98, 118, 138, 158, 166, 169, 171, 172, 181, 272, 284, 287, 288, 289, 294, 295, 298, 299, 303, 317, 319, 320, 357, 358, 362], "fd": [1, 355, 356, 357, 358, 362, 363], "load": [1, 355, 356, 359, 362], "class": [6, 7, 26, 27, 46, 47, 66, 67, 86, 87, 106, 107, 126, 127, 146, 147, 166, 167, 359], "arg": [6, 26, 46, 66, 86, 106, 126, 146], "kwarg": [6, 15, 26, 35, 46, 55, 66, 75, 86, 95, 106, 115, 126, 135, 146, 155, 199, 235, 250, 311, 312, 313, 317, 353], "sourc": [6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "base": [6, 26, 46, 66, 86, 106, 126, 146, 166, 222, 249, 334, 359], "method": [6, 7, 26, 27, 46, 47, 66, 67, 86, 87, 106, 107, 126, 127, 146, 147, 166, 167, 179, 180, 194, 215, 249, 264, 359], "inherit": [6, 26, 46, 66, 86, 106, 126, 146, 166], "convert": [7, 19, 27, 39, 47, 59, 67, 79, 87, 99, 107, 119, 127, 139, 147, 159, 167, 296, 307, 314, 315, 316, 317], "instanc": [7, 12, 13, 14, 27, 32, 33, 34, 47, 52, 53, 54, 67, 72, 73, 74, 87, 92, 93, 94, 107, 112, 113, 114, 127, 132, 133, 134, 147, 152, 153, 154, 167, 175, 238, 239, 240, 302, 303], "string": [7, 13, 14, 20, 21, 27, 33, 34, 40, 41, 47, 53, 54, 60, 61, 67, 73, 74, 80, 81, 87, 93, 94, 100, 101, 107, 113, 114, 120, 121, 127, 133, 134, 140, 141, 147, 153, 154, 160, 161, 167, 239, 240, 257, 258, 285, 308, 309, 338], "thi": [7, 11, 12, 13, 14, 27, 31, 32, 33, 34, 47, 51, 52, 53, 54, 67, 71, 72, 73, 74, 87, 91, 92, 93, 94, 107, 111, 112, 113, 114, 127, 131, 132, 133, 134, 147, 151, 152, 153, 154, 167, 177, 179, 180, 194, 202, 215, 237, 238, 239, 240, 241, 249, 264, 311, 321, 345, 364], "exist": [7, 27, 47, 67, 87, 107, 127, 147, 167, 182, 183, 195, 196, 207, 208, 231, 232, 261, 264, 265, 272, 281, 322, 323, 324, 331, 332, 349, 350], "net": [7, 27, 47, 67, 87, 107, 127, 147, 167], "compat": [7, 27, 47, 67, 87, 107, 127, 147, 167, 277, 357, 358], "when": [7, 27, 47, 67, 87, 107, 127, 147, 167, 182, 194, 207, 321, 331], "us": [7, 18, 27, 38, 47, 58, 67, 78, 87, 98, 107, 118, 127, 138, 147, 158, 167, 168, 169, 182, 183, 194, 195, 196, 200, 202, 203, 207, 208, 231, 232, 236, 241, 243, 247, 249, 251, 254, 255, 256, 257, 258, 270, 285, 298, 311, 331, 332, 338, 349, 350, 354, 363, 364], "ironpython": [7, 27, 47, 67, 87, 107, 127, 147, 167], "implicit": [7, 27, 47, 67, 87, 107, 127, 147, 167], "convers": [7, 27, 47, 67, 87, 107, 127, 147, 167], "usual": [7, 27, 47, 67, 87, 107, 127, 147, 167], "take": [7, 27, 47, 67, 87, 107, 127, 147, 167, 200, 211, 236, 333, 354], "place": [7, 27, 47, 67, 87, 107, 127, 147, 167, 237, 284, 296, 319, 321, 357, 358], "cpython": [7, 27, 47, 67, 87, 107, 127, 147, 167], "kick": [7, 27, 47, 67, 87, 107, 127, 147, 167], "its": [7, 19, 24, 25, 27, 39, 44, 45, 47, 59, 64, 65, 67, 79, 84, 85, 87, 99, 104, 105, 107, 119, 124, 125, 127, 139, 144, 145, 147, 159, 164, 165, 167, 175, 220, 235, 236, 247, 301, 302, 307, 328, 329, 340, 353, 354], "default": [7, 11, 27, 31, 47, 51, 67, 71, 87, 91, 107, 111, 127, 131, 147, 151, 167, 177, 181, 182, 195, 196, 225, 226, 227, 228, 231, 232, 241, 242, 247, 257, 258, 285, 311, 317, 322, 323, 324, 325, 326, 327, 338, 349], "print": [7, 27, 47, 67, 87, 107, 127, 147, 167, 306], "self": [7, 27, 47, 67, 87, 107, 127, 147, 167], "gettyp": [7, 27, 47, 67, 87, 107, 127, 147, 167], "fullnam": [7, 27, 47, 67, 87, 107, 127, 147, 167], "similar": [7, 27, 47, 67, 87, 107, 127, 147, 167], "overrid": [7, 27, 47, 67, 87, 107, 127, 147, 167], "object": [7, 11, 12, 13, 14, 19, 20, 21, 24, 25, 27, 31, 32, 33, 34, 39, 40, 41, 44, 45, 47, 51, 52, 53, 54, 59, 60, 61, 64, 65, 67, 71, 72, 73, 74, 79, 80, 81, 84, 85, 87, 91, 92, 93, 94, 99, 100, 101, 104, 105, 107, 111, 112, 113, 114, 119, 120, 121, 124, 125, 127, 131, 132, 133, 134, 139, 140, 141, 144, 145, 147, 151, 152, 153, 154, 159, 160, 161, 164, 165, 167, 168, 169, 177, 178, 179, 181, 182, 195, 202, 207, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 297, 300, 301, 305, 307, 308, 309, 312, 313, 321, 328, 329, 331, 349, 359], "fix": [7, 27, 47, 67, 87, 107, 127, 147, 167, 175, 300, 301, 355, 356], "make": [7, 11, 27, 31, 47, 51, 67, 71, 87, 91, 107, 111, 127, 131, 147, 151, 167, 177, 215], "rhino": [7, 27, 47, 67, 87, 107, 127, 147, 167], "grasshopp": [7, 27, 47, 67, 87, 107, 127, 147, 167], "displai": [7, 27, 47, 67, 87, 107, 127, 147, 167], "proper": [7, 27, 47, 67, 87, 107, 127, 147, 167], "represent": [7, 19, 20, 21, 25, 27, 39, 40, 41, 45, 47, 59, 60, 61, 65, 67, 79, 80, 81, 85, 87, 99, 100, 101, 105, 107, 119, 120, 121, 125, 127, 139, 140, 141, 145, 147, 159, 160, 161, 165, 167, 307, 308, 309, 329], "ar": [7, 27, 47, 67, 87, 107, 127, 147, 167, 175, 194, 203, 204, 243, 249, 276, 279, 281, 302, 303, 311, 316, 321, 330, 343, 355], "connect": [7, 27, 47, 67, 87, 107, 127, 147, 167, 176, 241, 243, 247, 249, 251, 256, 272, 282, 311, 336, 337, 355, 356, 364], "panel": [7, 27, 47, 67, 87, 107, 127, 147, 167], "other": [7, 27, 47, 67, 87, 107, 127, 147, 167, 249, 282, 284, 345, 364], "type": [7, 11, 12, 13, 14, 27, 31, 32, 33, 34, 47, 51, 52, 53, 54, 67, 71, 72, 73, 74, 87, 91, 92, 93, 94, 107, 111, 112, 113, 114, 127, 131, 132, 133, 134, 147, 151, 152, 153, 154, 167, 168, 177, 181, 206, 224, 238, 239, 240, 355, 356], "output": [7, 27, 47, 67, 87, 107, 127, 147, 167], "cl": [11, 31, 51, 71, 91, 111, 131, 151, 177, 181], "none": [11, 20, 31, 40, 51, 60, 71, 80, 91, 100, 111, 120, 131, 140, 151, 160, 168, 169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 195, 196, 199, 203, 204, 207, 208, 231, 232, 235, 237, 241, 242, 243, 245, 246, 247, 251, 257, 258, 261, 270, 281, 284, 285, 296, 297, 299, 300, 301, 308, 311, 312, 313, 317, 319, 321, 322, 323, 324, 325, 326, 327, 331, 332, 338, 349, 350, 353, 355, 356], "an": [11, 12, 13, 14, 19, 20, 21, 31, 32, 33, 34, 39, 40, 41, 51, 52, 53, 54, 59, 60, 61, 71, 72, 73, 74, 79, 80, 81, 91, 92, 93, 94, 99, 100, 101, 111, 112, 113, 114, 119, 120, 121, 131, 132, 133, 134, 139, 140, 141, 151, 152, 153, 154, 159, 160, 161, 168, 169, 175, 177, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 196, 207, 231, 232, 238, 239, 240, 243, 247, 273, 276, 303, 307, 308, 309, 311, 312, 317, 322, 331, 345, 349, 350, 364], "independ": [11, 31, 51, 71, 91, 111, 131, 151, 177, 320], "data": [11, 12, 13, 14, 18, 19, 20, 21, 24, 25, 26, 31, 32, 33, 34, 38, 39, 40, 41, 44, 45, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 71, 72, 73, 74, 78, 79, 80, 81, 84, 85, 91, 92, 93, 94, 98, 99, 100, 101, 104, 105, 111, 112, 113, 114, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 138, 139, 140, 141, 144, 145, 151, 152, 153, 154, 158, 159, 160, 161, 164, 165, 171, 172, 174, 176, 177, 194, 199, 200, 230, 235, 236, 238, 239, 240, 243, 244, 245, 251, 272, 287, 288, 289, 294, 295, 296, 298, 307, 308, 309, 311, 321, 328, 329, 348, 353, 354], "paramet": [11, 12, 13, 14, 18, 20, 21, 31, 32, 33, 34, 38, 40, 41, 51, 52, 53, 54, 58, 60, 61, 71, 72, 73, 74, 78, 80, 81, 91, 92, 93, 94, 98, 100, 101, 111, 112, 113, 114, 118, 120, 121, 131, 132, 133, 134, 138, 140, 141, 151, 152, 153, 154, 158, 160, 161, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 275, 282, 283, 284, 285, 287, 288, 289, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 312, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 357, 358], "option": [11, 18, 20, 21, 31, 38, 40, 41, 51, 58, 60, 61, 71, 78, 80, 81, 91, 98, 100, 101, 111, 118, 120, 121, 131, 138, 140, 141, 151, 158, 160, 161, 168, 169, 175, 177, 181, 182, 183, 184, 190, 191, 192, 194, 195, 196, 199, 200, 207, 208, 211, 215, 219, 221, 223, 225, 226, 227, 228, 230, 231, 232, 235, 236, 241, 242, 243, 247, 250, 251, 256, 257, 258, 270, 285, 296, 298, 300, 301, 302, 305, 308, 309, 311, 317, 318, 321, 325, 326, 327, 331, 332, 333, 337, 338, 343, 345, 347, 348, 349, 350, 353, 354, 355, 356], "The": [11, 12, 13, 14, 19, 20, 21, 24, 25, 31, 32, 33, 34, 39, 40, 41, 44, 45, 51, 52, 53, 54, 59, 60, 61, 64, 65, 71, 72, 73, 74, 79, 80, 81, 84, 85, 91, 92, 93, 94, 99, 100, 101, 104, 105, 111, 112, 113, 114, 119, 120, 121, 124, 125, 131, 132, 133, 134, 139, 140, 141, 144, 145, 151, 152, 153, 154, 159, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 273, 275, 276, 282, 283, 284, 285, 288, 289, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 357, 358, 364], "return": [11, 12, 13, 14, 18, 19, 20, 21, 24, 25, 31, 32, 33, 34, 38, 39, 40, 41, 44, 45, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 71, 72, 73, 74, 78, 79, 80, 81, 84, 85, 91, 92, 93, 94, 98, 99, 100, 101, 104, 105, 111, 112, 113, 114, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 138, 139, 140, 141, 144, 145, 151, 152, 153, 154, 158, 159, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 357, 358], "current": [11, 31, 51, 71, 91, 111, 131, 151, 168, 169, 177, 284], "classmethod": [12, 13, 14, 32, 33, 34, 52, 53, 54, 72, 73, 74, 92, 93, 94, 112, 113, 114, 132, 133, 134, 152, 153, 154, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "construct": [12, 13, 14, 32, 33, 34, 52, 53, 54, 72, 73, 74, 92, 93, 94, 112, 113, 114, 132, 133, 134, 152, 153, 154, 181, 202, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 299, 345], "from": [12, 13, 14, 18, 32, 33, 34, 38, 52, 53, 54, 58, 72, 73, 74, 78, 92, 93, 94, 98, 112, 113, 114, 118, 132, 133, 134, 138, 152, 153, 154, 158, 169, 171, 172, 178, 179, 180, 181, 193, 203, 204, 213, 215, 224, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 272, 284, 287, 288, 289, 294, 295, 297, 298, 299, 303, 319, 320, 340, 363, 364], "provid": [12, 32, 52, 72, 92, 112, 132, 152, 168, 169, 181, 183, 199, 208, 235, 238, 300, 301, 350, 353, 364], "dict": [12, 19, 21, 24, 32, 39, 41, 44, 52, 59, 61, 64, 72, 79, 81, 84, 92, 99, 101, 104, 112, 119, 121, 124, 132, 139, 141, 144, 152, 159, 161, 164, 168, 169, 183, 194, 196, 199, 200, 202, 208, 230, 232, 235, 236, 238, 250, 252, 257, 258, 268, 269, 281, 285, 286, 305, 307, 309, 322, 323, 324, 325, 326, 327, 328, 332, 338, 339, 348, 350, 353, 354], "dictionari": [12, 32, 52, 72, 92, 112, 132, 152, 168, 169, 183, 202, 208, 238, 252, 257, 258, 268, 269, 285, 286, 325, 326, 327, 332, 338, 339], "contain": [12, 13, 14, 20, 32, 33, 34, 40, 52, 53, 54, 60, 72, 73, 74, 80, 92, 93, 94, 100, 112, 113, 114, 120, 132, 133, 134, 140, 152, 153, 154, 160, 195, 196, 231, 232, 238, 239, 240, 264, 308, 350], "ha": [12, 13, 14, 32, 33, 34, 52, 53, 54, 72, 73, 74, 92, 93, 94, 112, 113, 114, 132, 133, 134, 152, 153, 154, 238, 239, 240, 271, 274], "correct": [12, 13, 14, 32, 33, 34, 52, 53, 54, 72, 73, 74, 92, 93, 94, 112, 113, 114, 132, 133, 134, 152, 153, 154, 238, 239, 240], "schema": [12, 13, 14, 19, 24, 25, 32, 33, 34, 39, 44, 45, 52, 53, 54, 59, 64, 65, 72, 73, 74, 79, 84, 85, 92, 93, 94, 99, 104, 105, 112, 113, 114, 119, 124, 125, 132, 133, 134, 139, 144, 145, 152, 153, 154, 159, 164, 165, 238, 239, 240, 307, 328, 329], "filepath": [13, 20, 33, 40, 53, 60, 73, 80, 93, 100, 113, 120, 133, 140, 153, 160, 239, 243, 244, 245, 251, 308, 311, 312, 313, 317], "serial": [13, 14, 20, 21, 33, 34, 40, 41, 53, 54, 60, 61, 73, 74, 80, 81, 93, 94, 100, 101, 113, 114, 120, 121, 133, 134, 140, 141, 153, 154, 160, 161, 239, 240, 308, 309], "json": [13, 14, 20, 21, 25, 33, 34, 40, 41, 45, 53, 54, 60, 61, 65, 73, 74, 80, 81, 85, 93, 94, 100, 101, 105, 113, 114, 120, 121, 125, 133, 134, 140, 141, 145, 153, 154, 160, 161, 165, 239, 240, 308, 309, 329], "file": [13, 14, 20, 33, 34, 40, 53, 54, 60, 73, 74, 80, 93, 94, 100, 113, 114, 120, 133, 134, 140, 153, 154, 160, 239, 240, 243, 244, 245, 251, 308, 311, 312, 313, 317, 364], "path": [13, 20, 33, 40, 53, 60, 73, 80, 93, 100, 113, 120, 133, 140, 153, 160, 239, 243, 244, 245, 251, 272, 308, 311, 312, 313, 317], "like": [13, 20, 33, 40, 53, 60, 73, 80, 93, 100, 113, 120, 133, 140, 153, 160, 239, 308], "url": [13, 33, 53, 73, 93, 113, 133, 153, 239], "str": [14, 18, 21, 25, 34, 38, 41, 45, 54, 58, 61, 65, 74, 78, 81, 85, 94, 98, 101, 105, 114, 118, 121, 125, 134, 138, 141, 145, 154, 158, 161, 165, 168, 169, 175, 182, 183, 184, 194, 195, 196, 199, 200, 207, 208, 211, 230, 231, 232, 235, 236, 240, 241, 243, 244, 245, 247, 250, 251, 257, 258, 285, 298, 305, 306, 309, 311, 312, 313, 317, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 338, 348, 349, 350, 353, 354], "static": [15, 17, 35, 37, 55, 57, 75, 77, 95, 97, 115, 117, 135, 137, 155, 157], "geometri": [15, 35, 55, 75, 95, 115, 135, 155, 250, 284, 299, 319, 320], "gtype": [17, 37, 57, 77, 97, 117, 137, 157], "ctype": [17, 37, 57, 77, 97, 117, 137, 157], "as_str": [18, 38, 58, 78, 98, 118, 138, 158, 298], "fals": [18, 20, 21, 38, 40, 41, 58, 60, 61, 78, 80, 81, 98, 100, 101, 118, 120, 121, 138, 140, 141, 158, 160, 161, 175, 181, 192, 194, 199, 200, 230, 235, 236, 241, 256, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 296, 298, 302, 308, 309, 311, 317, 318, 337, 345, 348, 353, 354], "comput": [18, 38, 58, 78, 98, 118, 138, 158, 171, 172, 205, 209, 210, 211, 215, 217, 218, 221, 288, 289, 294, 295, 298, 330, 340, 341, 342, 344, 355, 356], "hash": [18, 38, 58, 78, 98, 118, 138, 158, 298], "comparison": [18, 38, 58, 78, 98, 118, 138, 158, 298], "dure": [18, 38, 58, 78, 98, 118, 138, 158, 298], "version": [18, 38, 58, 78, 98, 118, 138, 158, 254, 255, 256, 298], "control": [18, 38, 58, 78, 98, 118, 138, 158, 298], "algorithm": [18, 38, 58, 78, 98, 118, 138, 158, 202, 203, 241, 298, 345], "bool": [18, 20, 21, 38, 40, 41, 58, 60, 61, 78, 80, 81, 98, 100, 101, 118, 120, 121, 138, 140, 141, 158, 160, 161, 175, 181, 192, 194, 199, 200, 221, 230, 235, 236, 241, 256, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 296, 298, 302, 308, 309, 311, 317, 318, 337, 345, 348, 353, 354], "If": [18, 20, 21, 38, 40, 41, 58, 60, 61, 78, 80, 81, 98, 100, 101, 118, 120, 121, 138, 140, 141, 158, 160, 161, 168, 169, 175, 181, 182, 183, 186, 190, 192, 194, 195, 196, 199, 200, 207, 208, 221, 225, 226, 227, 228, 230, 231, 232, 235, 236, 256, 261, 270, 298, 299, 300, 301, 302, 303, 305, 308, 309, 311, 317, 318, 321, 322, 323, 324, 331, 332, 337, 345, 348, 349, 350, 353, 354], "true": [18, 20, 21, 38, 40, 41, 58, 60, 61, 78, 80, 81, 98, 100, 101, 118, 120, 121, 138, 140, 141, 158, 160, 161, 175, 181, 194, 199, 200, 221, 230, 235, 236, 256, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 298, 299, 302, 308, 309, 311, 317, 318, 337, 345, 348, 353, 354], "digest": [18, 38, 58, 78, 98, 118, 138, 158, 298], "hexadecim": [18, 38, 58, 78, 98, 118, 138, 158, 298], "format": [18, 21, 38, 41, 58, 61, 78, 81, 98, 101, 118, 121, 138, 141, 158, 161, 257, 258, 285, 298, 306, 309, 317, 338], "rather": [18, 38, 58, 78, 98, 118, 138, 158, 298], "than": [18, 38, 58, 78, 98, 118, 138, 158, 168, 169, 298], "byte": [18, 38, 58, 78, 98, 118, 138, 158, 298], "exampl": [18, 38, 58, 78, 98, 118, 138, 158, 169, 171, 172, 181, 194, 272, 284, 287, 288, 289, 294, 295, 298, 299, 303, 317, 319, 320, 345, 354, 362], "compa": [18, 38, 58, 78, 98, 118, 138, 158, 169, 171, 172, 181, 241, 247, 250, 257, 258, 272, 284, 285, 287, 288, 289, 294, 295, 298, 299, 303, 317, 319, 320, 338, 363], "import": [18, 38, 58, 78, 98, 118, 138, 158, 169, 171, 172, 181, 272, 284, 287, 288, 289, 294, 295, 298, 299, 303, 319, 320, 363], "mesh": [18, 38, 58, 78, 98, 118, 138, 158, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 194, 197, 202, 206, 215, 224, 230, 233, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 266, 267, 271, 272, 274, 276, 277, 278, 279, 280, 281, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 334, 345, 348, 351, 357, 358, 359], "from_obj": [18, 38, 58, 78, 98, 118, 138, 158, 171, 172, 181, 288, 289, 294, 295, 298, 303], "get": [18, 38, 58, 78, 98, 118, 138, 158, 171, 172, 181, 182, 183, 195, 196, 199, 200, 207, 208, 231, 232, 235, 236, 249, 254, 255, 256, 288, 289, 294, 295, 298, 303, 331, 332, 349, 350, 353, 354, 362], "face": [18, 38, 58, 78, 98, 118, 138, 158, 168, 171, 172, 179, 181, 186, 192, 194, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 248, 249, 252, 254, 259, 260, 261, 265, 270, 275, 276, 277, 279, 281, 284, 287, 289, 292, 295, 296, 298, 300, 303, 304, 311, 317, 318, 321, 323, 326, 334, 337, 345, 346], "obj": [18, 38, 58, 78, 98, 118, 138, 158, 171, 172, 181, 243, 288, 289, 294, 295, 298, 303, 311], "v1": [18, 38, 58, 78, 98, 118, 138, 158, 298], "v2": [18, 38, 58, 78, 98, 118, 138, 158, 298], "vertex_attribut": [18, 38, 58, 78, 98, 118, 138, 158, 298], "vertex_sampl": [18, 38, 58, 78, 98, 118, 138, 158, 255, 256, 298], "1": [18, 22, 38, 58, 62, 78, 82, 98, 102, 118, 122, 138, 142, 158, 162, 168, 169, 175, 190, 191, 203, 204, 219, 223, 225, 226, 227, 228, 253, 254, 255, 256, 272, 284, 287, 298, 299, 302, 303, 319, 320, 334, 343, 347, 355, 357, 359], "0": [18, 22, 38, 58, 62, 78, 82, 98, 102, 118, 122, 138, 142, 158, 162, 169, 171, 172, 175, 190, 215, 272, 284, 287, 289, 295, 298, 299, 300, 301, 302, 303, 319, 320, 355, 357, 359], "z": [18, 38, 58, 78, 98, 118, 138, 158, 169, 211, 246, 272, 298, 333], "v3": [18, 38, 58, 78, 98, 118, 138, 158, 298], "nativ": [19, 39, 59, 79, 99, 119, 139, 159, 307], "describ": [19, 39, 59, 79, 99, 119, 139, 159, 241, 243, 244, 245, 251, 307], "pretti": [20, 21, 40, 41, 60, 61, 80, 81, 100, 101, 120, 121, 140, 141, 160, 161, 308, 309], "human": [20, 40, 60, 80, 100, 120, 140, 160, 308], "readabl": [20, 40, 60, 80, 100, 120, 140, 160, 308], "": [21, 24, 25, 41, 44, 45, 61, 64, 65, 81, 84, 85, 101, 104, 105, 121, 124, 125, 141, 144, 145, 161, 164, 165, 309, 317, 328, 329], "damp": [22, 62, 82, 102, 122, 142, 162, 300, 301, 355, 357], "valid": [24, 25, 44, 45, 64, 65, 84, 85, 104, 105, 124, 125, 144, 145, 164, 165, 281, 328, 329], "against": [24, 25, 44, 45, 64, 65, 84, 85, 104, 105, 124, 125, 144, 145, 164, 165, 328, 329], "rais": [24, 25, 44, 45, 64, 65, 84, 85, 104, 105, 124, 125, 144, 145, 164, 165, 168, 175, 182, 183, 195, 196, 207, 208, 225, 226, 227, 228, 231, 232, 261, 300, 301, 302, 303, 305, 321, 322, 323, 324, 328, 329, 331, 332, 349, 350], "schemaerror": [24, 44, 64, 84, 104, 124, 144, 164, 328], "jsonschema": [25, 45, 65, 85, 105, 125, 145, 165, 329], "except": [25, 45, 65, 85, 105, 125, 145, 165, 300, 301, 329], "validationerror": [25, 45, 65, 85, 105, 125, 145, 165, 329], "all": [26, 174, 178, 181, 183, 188, 192, 196, 197, 204, 208, 217, 218, 232, 233, 237, 262, 263, 279, 281, 296, 297, 311, 317, 321, 332, 336, 341, 342, 351, 364], "extens": 166, "attribut": [166, 168, 169, 182, 183, 194, 195, 196, 199, 200, 207, 208, 230, 231, 232, 235, 236, 322, 323, 324, 325, 326, 327, 331, 332, 348, 349, 350, 353, 354], "relat": [166, 203], "form": [166, 199, 203, 212, 235, 241, 276, 353], "find": [166, 176, 186, 188, 192, 197, 198, 203, 204, 233, 234, 237, 241, 259, 260, 261, 262, 263, 336, 351, 352, 357, 358], "tensil": 166, "surfac": 166, "structur": [166, 171, 172, 176, 202, 272, 287, 288, 289, 294, 295, 296, 321], "vertic": [168, 175, 176, 178, 179, 180, 181, 194, 204, 211, 212, 213, 229, 242, 249, 252, 256, 257, 258, 272, 274, 279, 281, 284, 293, 297, 300, 301, 303, 304, 311, 314, 318, 341, 342, 343, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356], "fkei": [168, 179, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 224, 225, 226, 227, 228, 229, 230, 265, 270, 303, 334], "attr_dict": [168, 169, 325, 326, 327], "kwattr": [168, 169, 325, 326, 327], "add": [168, 169, 284], "list": [168, 171, 172, 173, 175, 176, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 202, 204, 208, 209, 210, 211, 212, 216, 219, 220, 221, 222, 223, 229, 231, 232, 233, 234, 241, 246, 247, 249, 252, 256, 262, 263, 268, 269, 270, 286, 287, 288, 289, 290, 294, 295, 300, 301, 304, 310, 314, 315, 316, 318, 332, 333, 336, 337, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356], "int": [168, 169, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 282, 283, 285, 286, 287, 291, 292, 293, 300, 301, 302, 303, 304, 318, 322, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "A": [168, 169, 175, 176, 181, 183, 191, 195, 196, 197, 199, 202, 208, 215, 219, 222, 223, 231, 232, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 268, 269, 272, 276, 277, 279, 281, 285, 286, 287, 296, 300, 301, 305, 310, 315, 316, 320, 321, 325, 326, 327, 332, 338, 339, 347, 349, 350, 351, 353, 364], "vertex": [168, 169, 175, 179, 180, 182, 184, 185, 186, 187, 189, 190, 193, 200, 212, 213, 225, 226, 227, 228, 229, 249, 252, 255, 259, 260, 261, 267, 268, 269, 270, 273, 276, 282, 283, 285, 286, 288, 294, 300, 301, 302, 303, 317, 318, 324, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 348, 349, 350, 351, 353, 354, 355], "kei": [168, 169, 180, 184, 185, 187, 189, 190, 193, 195, 196, 199, 202, 206, 207, 208, 213, 219, 224, 225, 226, 227, 228, 231, 232, 235, 252, 257, 258, 264, 266, 267, 268, 269, 270, 275, 282, 283, 285, 286, 302, 303, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 346, 348, 349, 350, 351, 353], "ani": [168, 169, 183, 194, 195, 196, 199, 200, 208, 230, 231, 232, 235, 236, 250, 277, 300, 301, 305, 325, 326, 327, 332, 348, 349, 350, 353, 354, 364], "addit": [168, 169, 192, 194, 199, 200, 230, 235, 236, 270, 305, 348, 353, 354], "compil": [168, 169, 325, 326, 327], "remain": [168, 169, 179, 180, 194, 325, 326, 327], "name": [168, 169, 182, 183, 195, 196, 199, 207, 208, 231, 232, 235, 322, 323, 324, 325, 326, 327, 331, 332, 349, 350, 353], "argument": [168, 169, 199, 235, 250, 300, 301, 305, 325, 326, 327, 353], "typeerror": 168, "i": [168, 169, 180, 182, 183, 186, 190, 192, 194, 195, 196, 199, 200, 202, 207, 208, 213, 215, 221, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 241, 243, 247, 249, 251, 261, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 296, 299, 300, 301, 305, 311, 317, 319, 321, 331, 332, 348, 349, 350, 353, 354, 364], "unhash": 168, "note": [168, 169, 179, 180, 194, 202, 203, 215, 237, 243, 272, 317, 322, 323, 324, 325, 326, 327, 343, 345], "one": [168, 169, 186, 203, 256, 276, 282], "gener": [168, 169, 250], "automat": [168, 169, 194, 241], "integ": [168, 169], "increment": [168, 169], "highest": [168, 169, 217, 341], "valu": [168, 169, 182, 183, 190, 195, 196, 199, 207, 208, 215, 231, 232, 235, 241, 242, 257, 258, 285, 302, 317, 322, 323, 324, 325, 326, 327, 331, 332, 338, 349, 350, 353], "so": [168, 169, 364], "far": [168, 169], "higher": [168, 169], "updat": [168, 169, 325, 326, 327, 357, 358], "accordingli": [168, 169], "identifi": [169, 175, 179, 180, 182, 183, 186, 188, 191, 192, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 254, 255, 256, 261, 262, 263, 264, 265, 266, 267, 270, 273, 275, 282, 283, 287, 304, 322, 323, 324, 330, 331, 332, 333, 335, 337, 340, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354], "x": [169, 211, 242, 272, 333], "y": [169, 211, 242, 272, 333], "2": [169, 203, 204, 215, 236, 284, 287, 299, 303, 354], "calcul": [170, 173, 201, 253, 290], "total": 170, "float": [170, 171, 172, 173, 175, 184, 185, 187, 189, 190, 193, 205, 206, 209, 210, 211, 213, 215, 221, 222, 224, 241, 242, 246, 247, 249, 252, 257, 258, 270, 285, 288, 289, 290, 294, 295, 300, 301, 302, 310, 314, 315, 316, 318, 330, 333, 334, 338, 340, 344, 346, 355, 356, 357], "axi": [171, 172, 288, 289, 294, 295], "align": [171, 172, 288, 289, 294, 295], "bound": [171, 172, 288, 289, 294, 295], "box": [171, 172, 284, 288, 289, 294, 295, 299], "8": [171, 248, 284, 288, 294], "corner": [171, 172, 181, 212, 247, 288, 294, 305], "mesh_bounding_box": 171, "10": [171, 172, 289, 295], "project": [172, 289, 295], "xy": [172, 289, 295], "plane": [172, 213, 222, 289, 295, 299], "4": [172, 248, 287, 319, 320], "polygon": [172, 224, 247, 315, 334], "mesh_bounding_box_xi": 172, "coordin": [173, 184, 189, 190, 209, 210, 211, 241, 246, 247, 249, 252, 270, 288, 290, 294, 310, 317, 318, 333, 344, 355, 356], "u": [175, 184, 185, 186, 187, 189, 190, 193, 194, 199, 200, 259, 260, 261, 273, 302, 303], "v": [175, 184, 185, 186, 187, 189, 190, 193, 194, 199, 200, 259, 260, 261, 273, 302, 303], "t": [175, 190, 281, 284, 302, 319, 320, 345, 359], "5": [175, 190, 287, 300, 301, 302], "allow_boundari": [175, 302], "collaps": 175, "edg": [175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 206, 215, 220, 256, 262, 263, 264, 271, 273, 276, 279, 287, 291, 296, 302, 303, 304, 322, 325, 336, 355, 356], "first": [175, 186, 200, 203, 204, 241, 259, 260, 261, 273, 302, 303], "second": [175, 186, 200, 203, 204, 259, 260, 261, 273, 302, 303], "intermedi": 175, "point": [175, 184, 190, 222, 241, 246, 252, 281, 299, 310, 314, 315, 316], "half": [175, 203], "determin": 175, "where": 175, "between": [175, 206, 215, 302, 303, 311], "allow": [175, 215], "involv": 175, "boundari": [175, 181, 186, 197, 198, 233, 234, 246, 249, 261, 273, 275, 283, 302, 345, 351, 352], "should": [175, 184, 199, 200, 211, 235, 236, 246, 270, 296, 302, 305, 333, 353, 354], "stai": 175, "valueerror": [175, 225, 226, 227, 228, 302, 303, 305], "neighbor": [175, 202, 214, 220, 301, 302, 303, 335, 340, 344, 345, 346], "compon": [176, 221, 340, 346], "group": [176, 233, 364], "remov": [178, 179, 180, 249, 297], "unus": [178, 297], "delet": [179, 180, 241], "In": [179, 180, 241, 363], "some": [179, 180, 345], "case": [179, 180, 241, 311], "disconnect": [179, 180], "can": [179, 180, 199, 235, 353], "after": [179, 180, 225, 228, 259, 300, 301, 303], "applic": [179, 180], "To": [179, 180, 363], "well": [179, 180, 357, 358], "combin": [179, 180, 211, 333], "cull": [179, 180], "cull_vertic": [179, 180], "everyth": 180, "attach": 180, "include_boundari": 181, "whether": [181, 364], "includ": [181, 184, 321, 337, 343, 364], "creat": [181, 194, 242, 270, 303], "origin": [181, 299, 345], "delete_fac": 181, "11": 181, "6": [181, 248, 284, 287, 319, 320], "7": [181, 287, 363], "quads_to_triangl": 181, "subdivid": [181, 287], "set": [182, 183, 195, 196, 199, 200, 207, 208, 231, 232, 235, 236, 246, 249, 256, 322, 323, 324, 331, 332, 349, 350, 353, 354], "tupl": [182, 183, 186, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 216, 230, 235, 236, 241, 259, 260, 262, 263, 264, 266, 270, 299, 303, 304, 310, 322, 336, 348, 353, 354, 355, 356], "pair": [182, 183, 199, 208, 235, 241, 257, 258, 268, 269, 285, 286, 310, 325, 326, 327, 332, 338, 339, 353], "function": [182, 183, 195, 196, 199, 200, 207, 208, 231, 232, 235, 236, 237, 299, 300, 301, 311, 321, 331, 332, 349, 350, 353, 354, 357, 358], "setter": [182, 183, 195, 196, 207, 208, 231, 232, 331, 332, 349, 350], "keyerror": [182, 183, 195, 196, 207, 208, 231, 232, 261, 322, 323, 324, 331, 332, 349, 350], "doe": [182, 183, 195, 196, 207, 208, 231, 232, 237, 261, 303, 322, 323, 324, 331, 332, 349, 350], "multipl": [183, 195, 196, 208, 231, 232, 332, 349, 350], "empti": [183, 196, 208, 232, 271, 274, 332, 350], "correspond": [183, 192, 196, 203, 208, 232, 257, 258, 261, 281, 285, 286, 304, 325, 326, 327, 332, 338, 339, 350], "ax": [184, 211, 333], "xyz": [184, 189, 190, 211, 246, 247, 252, 270, 318, 333], "start": [184, 185, 187, 188, 189, 190, 192, 193, 241, 262, 263, 310, 345, 362], "end": [184, 185, 187, 189, 190, 193, 241, 310, 345], "along": [184, 190, 211, 302, 333], "which": [184, 199, 200, 203, 204, 211, 235, 236, 270, 305, 316, 333, 353, 354], "direct": [185, 190, 194, 202, 237, 242, 262, 277, 321, 345], "vector": [185, 190, 193, 221, 222, 340, 346], "two": [186, 203, 204, 272, 276, 277, 287, 303], "adjac": [186, 202, 203, 204, 277], "length": [187, 206, 213, 215, 302], "same": [188, 192, 259, 260, 262, 263, 279, 304], "loop": [188, 262, 305], "given": [188, 192, 202, 225, 226, 227, 228, 259, 260, 262, 263, 304, 336, 357, 358], "locat": [189, 190, 209, 210], "midpoint": 189, "outsid": [190, 241, 261, 337], "rang": [190, 199, 235, 353], "lie": 190, "size": [191, 219, 223, 242, 303, 347], "random": [191, 223, 254, 255, 256, 347], "sampl": [191, 223, 243, 347], "number": [191, 223, 242, 248, 256, 279, 291, 292, 293, 300, 301, 343, 347], "return_fac": 192, "strip": [192, 263, 304], "iter": [194, 230, 300, 301, 348, 355, 357], "over": [194, 203, 204, 230, 287, 348], "yield": [194, 199, 200, 230, 235, 236, 249, 348, 353, 354], "next": [194, 199, 200, 225, 228, 230, 235, 236, 259, 348, 353, 354], "have": [194, 241, 277, 279, 281, 311, 345], "topolog": [194, 202], "mean": [194, 225, 226, 227, 228], "thei": [194, 279], "onli": [194, 215, 249, 256, 276, 278, 280, 311, 317], "store": [194, 322, 323, 324], "ad": [194, 296], "instead": [194, 254, 255, 256], "them": [194, 272], "access": 194, "unless": 194, "were": 194, "explicitli": 194, "add_edg": 194, "order": [194, 229, 247, 304, 337, 345], "come": 194, "out": [194, 364], "howev": 194, "long": 194, "toplogi": 194, "unchang": 194, "consist": [194, 278, 280], "per": [195, 196, 197, 231, 232, 233, 350, 351], "request": [195, 196, 231, 232, 332], "custom": [196, 232], "longest": [198, 234, 352], "condit": [199, 200, 235, 236, 276, 279, 281, 321, 353, 354, 364], "certain": [199, 200, 235, 236, 257, 258, 285, 338, 353, 354], "min": [199, 235, 353], "max": [199, 235, 353], "predic": [200, 236, 354], "lambda": [200, 236, 354], "callabl": [200, 236, 300, 301, 354], "you": [200, 236, 354], "want": [200, 236, 354], "evalu": [200, 236, 354], "3": [200, 254, 255, 256, 287, 355, 356, 363], "ot": 200, "characterist": 201, "build": 202, "map": [202, 241, 243, 247, 251, 257, 258, 268, 269, 285, 286, 311, 338, 339], "primarili": 202, "unifi": [202, 237, 277, 321], "cycl": [202, 225, 226, 227, 228, 237, 277, 321, 337, 345], "therefor": [202, 241], "premis": 202, "inform": [202, 203], "corrupt": 202, "cannot": 202, "thu": 202, "pure": 202, "geometr": [202, 241, 243, 247, 251, 257, 258, 285, 311, 338], "spatial": 202, "index": [202, 225, 226, 227, 228, 268, 269, 286, 339], "tree": 202, "speed": 202, "up": [202, 285, 338], "search": 202, "f1": [203, 204], "f2": [203, 204], "separ": [203, 204], "For": [203, 317, 345], "reli": [203, 345], "forc": [203, 357, 358], "dualiti": 203, "further": 203, "check": [203, 296], "orient": [203, 277], "requir": 203, "area": [205, 300, 330], "aspect": 206, "ratio": [206, 215], "maximum": [206, 213, 215, 217, 224, 300, 301, 341], "minimum": [206, 218, 342], "refer": [206, 224, 253, 334, 357, 358, 362], "wikipedia": [206, 224], "avail": [206, 224, 243, 253], "http": [206, 224, 253, 363], "en": [206, 224], "org": [206, 224], "wiki": [206, 224], "types_of_mesh": [206, 224], "center": 209, "mass": 209, "centroid": [210, 213, 222, 300, 301, 340, 344], "triplet": 212, "dimensionless": [213, 334], "curvatur": [213, 334], "defin": [213, 222, 247, 300, 301, 303, 310, 315, 316], "deviat": [213, 215, 224], "best": [213, 296], "fit": [213, 364], "divid": 213, "averag": [213, 215, 290, 346], "count": [214, 291, 292, 293, 335], "maxdev": 215, "02": 215, "flat": 215, "distanc": 215, "diagon": [215, 296], "practic": 215, "limit": [215, 364], "realt": 215, "manufactur": 215, "sens": 215, "quadrilater": [215, 296], "halfedg": [216, 259, 260, 261, 262, 263, 266, 281], "degre": [217, 218, 279, 335, 341, 342], "lowest": [218, 342], "ring": [219, 343], "neighborhood": [219, 343], "across": 220, "unit": 221, "normal": [221, 222, 346], "skew": 224, "absolut": 224, "angular": 224, "ideal": 224, "angl": [224, 296], "n": [225, 226, 227, 228, 256, 303, 363], "th": [225, 226, 227, 228], "specifi": [225, 226, 227, 228, 257, 258, 270, 285, 303, 338], "specif": [225, 226, 227, 228, 249, 264, 270], "descend": [225, 228], "part": [225, 226, 227, 228, 265, 266], "befor": [226, 227, 260, 303], "ancestor": [226, 227], "previou": [226, 227, 260], "attr": [230, 348], "sort": 233, "match": [235, 236, 353, 354], "flip": 237, "modifi": [237, 284, 296, 319, 321, 364], "care": 237, "about": [237, 311], "being": 237, "It": [237, 317], "just": 237, "revers": 237, "whatev": 237, "line": [241, 243, 247, 251, 299, 310, 311, 363], "delete_boundary_fac": 241, "precis": [241, 243, 245, 247, 251, 257, 258, 285, 311, 317, 338], "most": 241, "expect": [241, 345], "dx": 242, "nx": 242, "dy": 242, "ny": 242, "regular": [242, 279], "grid": 242, "There": 243, "few": 243, "test": 243, "debug": 243, "faces_big": 243, "faces_revers": 243, "hypar": [243, 288, 294], "quadmesh": 243, "off": [244, 312], "ply": [245, 313], "hole": 246, "delaunai": 246, "triangul": [246, 318], "zero": 246, "seri": 247, "each": [247, 276, 300, 310, 315, 316, 349, 355], "f": 248, "platon": 248, "solid": 248, "12": [248, 284], "20": 248, "boundary_polylin": 249, "other_polylin": 249, "polylin": [249, 316], "from_lin": 249, "extrem": 249, "repres": [249, 252, 314], "discretis": 249, "curv": 249, "could": 249, "overlap": 249, "wrong": 249, "shape": [250, 355, 356, 357, 358], "primit": 250, "input": [250, 304, 305], "keyword": [250, 305], "pass": [250, 300, 301], "to_vertices_and_fac": 250, "stl": [251, 317], "indic": [252, 268, 269, 296, 318], "referenc": 252, "wolfram": 253, "mathworld": 253, "com": [253, 363], "html": 253, "deprec": [254, 255, 256], "sinc": [254, 255, 256], "13": [254, 255, 256], "face_sampl": [254, 303], "exclude_leav": 256, "exclud": 256, "leav": 256, "verifi": [264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "mai": 264, "produc": [264, 345], "unexpect": 264, "result": [264, 299, 345, 355, 356], "otherwis": [264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 317, 364], "return_fkei": 270, "insert": [270, 302, 303], "newli": 270, "close": [271, 276], "nake": 271, "everi": [272, 300, 301], "mesh_is_connect": 272, "add_vertex": 272, "b": [272, 284], "c": [272, 363], "abc": 272, "add_fac": 272, "manifold": [276, 277], "follow": [276, 279, 281, 363, 364], "fulfil": [276, 279, 281], "incid": [276, 279], "open": 276, "fan": 276, "e": [277, 279, 363], "quad": [278, 287, 296, 305], "triangl": [280, 296, 317], "don": 281, "non": 281, "entri": 281, "least": 282, "anoth": 284, "translat": 284, "from_width_height_depth": [284, 299], "from_vector": 284, "transform": 284, "from_shap": [284, 299], "number_of_vertic": 284, "number_of_fac": [284, 303], "16": 284, "arrai": [286, 339], "merg": [287, 364], "share": [287, 311], "from_vertices_and_fac": 287, "scheme": [287, 305], "mesh_merge_fac": 287, "face_vertic": [287, 303], "len": [288, 294, 299], "mesh_oriented_bounding_box_numpi": 294, "mesh_oriented_bounding_box_xy_numpi": 295, "check_angl": 296, "flag": 296, "choos": 296, "slice": 299, "submesh": 299, "cut": 299, "posit": [299, 302], "neg": 299, "do": [299, 364], "intersect": 299, "degener": 299, "mesh_slice_plan": 299, "kmax": [300, 301, 355, 357], "100": [300, 301, 355, 357], "callback": [300, 301], "callback_arg": [300, 301], "smooth": [300, 301], "move": [300, 301], "barycent": 300, "surround": 300, "weight": [300, 346], "factor": [300, 301], "user": [300, 301, 317], "execut": [300, 301], "free": [301, 364], "split": [302, 303, 304], "also": [302, 311], "belong": 303, "new": 303, "face_vertex_descend": 303, "25": 303, "mesh_split_fac": 303, "26": 303, "srip": 304, "catmullclark": 305, "liter": 305, "tri": 305, "doosabin": 305, "frame": 305, "accord": 305, "support": [305, 317], "text": 306, "unweld": 311, "write": [311, 312, 313, 317], "full": 311, "own": 311, "uniqu": 311, "collect": [314, 315, 316], "binari": 317, "round": 317, "written": 317, "ascii": 317, "respons": 317, "mesh_quads_to_triangl": 317, "matrix_from_axis_and_angl": [319, 320], "from_polyhedron": [319, 320], "math": [319, 320], "pi": [319, 320], "tmesh": [319, 320], "copi": [319, 320, 364], "mesh_transform": [319, 320], "root": 321, "necessari": 321, "work": 321, "properli": 321, "doubt": 321, "run": [321, 363], "your": [321, 363], "assertionerror": 321, "unnif": 321, "process": [321, 334], "unset": [322, 323, 324], "implicitli": [322, 323, 324], "back": [322, 323, 324], "overwrit": [325, 326, 327], "tributari": 330, "vkei": 334, "botsch": 334, "mario": 334, "et": 334, "al": 334, "ak": 334, "peter": 334, "crc": 334, "press": 334, "2010": 334, "include_non": 337, "unord": 343, "li": 345, "alwai": 345, "due": 345, "natur": 345, "around": 345, "node": 345, "opposit": 345, "doesn": 345, "dual": 345, "convent": 345, "oposit": 345, "compar": 345, "union": [355, 356], "sequenc": [355, 356], "nptype": [355, 356], "base_meta_class": [355, 356], "ndarrai": [355, 356], "numpi": [355, 356], "float64": [355, 356], "forcedens": [355, 356], "tol_r": [355, 357], "001": [355, 357], "tol_disp": [355, 357], "selfweight": 355, "equilibrium": [355, 356, 357, 358], "system": [355, 356], "recomput": 355, "cablemesh": [357, 358], "densiti": [357, 358, 359], "equilibri": [357, 358], "rpc": [357, 358], "thickness_attr_nam": 359, "introduct": 362, "tutori": 362, "api": 362, "licens": 362, "window": 363, "osx": 363, "anaconda": 363, "prompt": 363, "conda": 363, "forg": 363, "git": 363, "python": 363, "termin": 363, "app": 363, "favourit": 363, "gui": 363, "simpli": 363, "issu": 363, "command": 363, "github": 363, "blockresearchgroup": 363, "cd": 363, "pip": 363, "interact": 363, "interpret": 363, "packag": 363, "exit": 363, "m": 363, "compas_rhino": 363, "p": 363, "install_plugin": 363, "mit": 364, "block": 364, "research": 364, "eth": 364, "zurich": 364, "permiss": 364, "herebi": 364, "grant": 364, "charg": 364, "person": 364, "obtain": 364, "softwar": 364, "associ": 364, "document": 364, "deal": 364, "without": 364, "restrict": 364, "right": 364, "publish": 364, "distribut": 364, "sublicens": 364, "sell": 364, "permit": 364, "whom": 364, "furnish": 364, "subject": 364, "abov": 364, "copyright": 364, "notic": 364, "shall": 364, "substanti": 364, "portion": 364, "THE": 364, "AS": 364, "warranti": 364, "OF": 364, "kind": 364, "express": 364, "OR": 364, "impli": 364, "BUT": 364, "NOT": 364, "TO": 364, "merchant": 364, "FOR": 364, "particular": 364, "purpos": 364, "AND": 364, "noninfring": 364, "IN": 364, "NO": 364, "event": 364, "author": 364, "holder": 364, "BE": 364, "liabl": 364, "claim": 364, "damag": 364, "liabil": 364, "action": 364, "contract": 364, "tort": 364, "aris": 364, "WITH": 364}, "objects": {"": [[1, 0, 0, "-", "compas_fd"]], "compas_fd": [[2, 0, 0, "-", "constraints"], [3, 0, 0, "-", "datastructures"], [4, 0, 0, "-", "fd"], [5, 0, 0, "-", "loads"]], "compas_fd.constraints": [[6, 1, 1, "", "CircleConstraint"], [26, 1, 1, "", "Constraint"], [46, 1, 1, "", "CurveConstraint"], [66, 1, 1, "", "FrameConstraint"], [86, 1, 1, "", "LineConstraint"], [106, 1, 1, "", "PlaneConstraint"], [126, 1, 1, "", "SurfaceConstraint"], [146, 1, 1, "", "VectorConstraint"]], "compas_fd.constraints.CircleConstraint": [[7, 2, 1, "", "ToString"], [8, 2, 1, "", "compute_normal"], [9, 2, 1, "", "compute_param"], [10, 2, 1, "", "compute_tangent"], [11, 2, 1, "", "copy"], [12, 2, 1, "", "from_data"], [13, 2, 1, "", "from_json"], [14, 2, 1, "", "from_jsonstring"], [15, 2, 1, "", "get_constraint_cls"], [16, 2, 1, "", "project"], [17, 2, 1, "", "register"], [18, 2, 1, "", "sha256"], [19, 2, 1, "", "to_data"], [20, 2, 1, "", "to_json"], [21, 2, 1, "", "to_jsonstring"], [22, 2, 1, "", "update"], [23, 2, 1, "", "update_location_at_param"], [24, 2, 1, "", "validate_data"], [25, 2, 1, "", "validate_json"]], "compas_fd.constraints.Constraint": [[27, 2, 1, "", "ToString"], [28, 2, 1, "", "compute_normal"], [29, 2, 1, "", "compute_param"], [30, 2, 1, "", "compute_tangent"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "from_data"], [33, 2, 1, "", "from_json"], [34, 2, 1, "", "from_jsonstring"], [35, 2, 1, "", "get_constraint_cls"], [36, 2, 1, "", "project"], [37, 2, 1, "", "register"], [38, 2, 1, "", "sha256"], [39, 2, 1, "", "to_data"], [40, 2, 1, "", "to_json"], [41, 2, 1, "", "to_jsonstring"], [42, 2, 1, "", "update"], [43, 2, 1, "", "update_location_at_param"], [44, 2, 1, "", "validate_data"], [45, 2, 1, "", "validate_json"]], "compas_fd.constraints.CurveConstraint": [[47, 2, 1, "", "ToString"], [48, 2, 1, "", "compute_normal"], [49, 2, 1, "", "compute_param"], [50, 2, 1, "", "compute_tangent"], [51, 2, 1, "", "copy"], [52, 2, 1, "", "from_data"], [53, 2, 1, "", "from_json"], [54, 2, 1, "", "from_jsonstring"], [55, 2, 1, "", "get_constraint_cls"], [56, 2, 1, "", "project"], [57, 2, 1, "", "register"], [58, 2, 1, "", "sha256"], [59, 2, 1, "", "to_data"], [60, 2, 1, "", "to_json"], [61, 2, 1, "", "to_jsonstring"], [62, 2, 1, "", "update"], [63, 2, 1, "", "update_location_at_param"], [64, 2, 1, "", "validate_data"], [65, 2, 1, "", "validate_json"]], "compas_fd.constraints.FrameConstraint": [[67, 2, 1, "", "ToString"], [68, 2, 1, "", "compute_normal"], [69, 2, 1, "", "compute_param"], [70, 2, 1, "", "compute_tangent"], [71, 2, 1, "", "copy"], [72, 2, 1, "", "from_data"], [73, 2, 1, "", "from_json"], [74, 2, 1, "", "from_jsonstring"], [75, 2, 1, "", "get_constraint_cls"], [76, 2, 1, "", "project"], [77, 2, 1, "", "register"], [78, 2, 1, "", "sha256"], [79, 2, 1, "", "to_data"], [80, 2, 1, "", "to_json"], [81, 2, 1, "", "to_jsonstring"], [82, 2, 1, "", "update"], [83, 2, 1, "", "update_location_at_param"], [84, 2, 1, "", "validate_data"], [85, 2, 1, "", "validate_json"]], "compas_fd.constraints.LineConstraint": [[87, 2, 1, "", "ToString"], [88, 2, 1, "", "compute_normal"], [89, 2, 1, "", "compute_param"], [90, 2, 1, "", "compute_tangent"], [91, 2, 1, "", "copy"], [92, 2, 1, "", "from_data"], [93, 2, 1, "", "from_json"], [94, 2, 1, "", "from_jsonstring"], [95, 2, 1, "", "get_constraint_cls"], [96, 2, 1, "", "project"], [97, 2, 1, "", "register"], [98, 2, 1, "", "sha256"], [99, 2, 1, "", "to_data"], [100, 2, 1, "", "to_json"], [101, 2, 1, "", "to_jsonstring"], [102, 2, 1, "", "update"], [103, 2, 1, "", "update_location_at_param"], [104, 2, 1, "", "validate_data"], [105, 2, 1, "", "validate_json"]], "compas_fd.constraints.PlaneConstraint": [[107, 2, 1, "", "ToString"], [108, 2, 1, "", "compute_normal"], [109, 2, 1, "", "compute_param"], [110, 2, 1, "", "compute_tangent"], [111, 2, 1, "", "copy"], [112, 2, 1, "", "from_data"], [113, 2, 1, "", "from_json"], [114, 2, 1, "", "from_jsonstring"], [115, 2, 1, "", "get_constraint_cls"], [116, 2, 1, "", "project"], [117, 2, 1, "", "register"], [118, 2, 1, "", "sha256"], [119, 2, 1, "", "to_data"], [120, 2, 1, "", "to_json"], [121, 2, 1, "", "to_jsonstring"], [122, 2, 1, "", "update"], [123, 2, 1, "", "update_location_at_param"], [124, 2, 1, "", "validate_data"], [125, 2, 1, "", "validate_json"]], "compas_fd.constraints.SurfaceConstraint": [[127, 2, 1, "", "ToString"], [128, 2, 1, "", "compute_normal"], [129, 2, 1, "", "compute_param"], [130, 2, 1, "", "compute_tangent"], [131, 2, 1, "", "copy"], [132, 2, 1, "", "from_data"], [133, 2, 1, "", "from_json"], [134, 2, 1, "", "from_jsonstring"], [135, 2, 1, "", "get_constraint_cls"], [136, 2, 1, "", "project"], [137, 2, 1, "", "register"], [138, 2, 1, "", "sha256"], [139, 2, 1, "", "to_data"], [140, 2, 1, "", "to_json"], [141, 2, 1, "", "to_jsonstring"], [142, 2, 1, "", "update"], [143, 2, 1, "", "update_location_at_param"], [144, 2, 1, "", "validate_data"], [145, 2, 1, "", "validate_json"]], "compas_fd.constraints.VectorConstraint": [[147, 2, 1, "", "ToString"], [148, 2, 1, "", "compute_normal"], [149, 2, 1, "", "compute_param"], [150, 2, 1, "", "compute_tangent"], [151, 2, 1, "", "copy"], [152, 2, 1, "", "from_data"], [153, 2, 1, "", "from_json"], [154, 2, 1, "", "from_jsonstring"], [155, 2, 1, "", "get_constraint_cls"], [156, 2, 1, "", "project"], [157, 2, 1, "", "register"], [158, 2, 1, "", "sha256"], [159, 2, 1, "", "to_data"], [160, 2, 1, "", "to_json"], [161, 2, 1, "", "to_jsonstring"], [162, 2, 1, "", "update"], [163, 2, 1, "", "update_location_at_param"], [164, 2, 1, "", "validate_data"], [165, 2, 1, "", "validate_json"]], "compas_fd.datastructures": [[166, 1, 1, "", "CableMesh"]], "compas_fd.datastructures.CableMesh": [[167, 2, 1, "", "ToString"], [168, 2, 1, "", "add_face"], [169, 2, 1, "", "add_vertex"], [170, 2, 1, "", "area"], [171, 2, 1, "", "bounding_box"], [172, 2, 1, "", "bounding_box_xy"], [173, 2, 1, "", "centroid"], [174, 2, 1, "", "clear"], [175, 2, 1, "", "collapse_edge"], [176, 2, 1, "", "connected_components"], [177, 2, 1, "", "copy"], [178, 2, 1, "", "cull_vertices"], [179, 2, 1, "", "delete_face"], [180, 2, 1, "", "delete_vertex"], [181, 2, 1, "", "dual"], [182, 2, 1, "", "edge_attribute"], [183, 2, 1, "", "edge_attributes"], [184, 2, 1, "", "edge_coordinates"], [185, 2, 1, "", "edge_direction"], [186, 2, 1, "", "edge_faces"], [187, 2, 1, "", "edge_length"], [188, 2, 1, "", "edge_loop"], [189, 2, 1, "", "edge_midpoint"], [190, 2, 1, "", "edge_point"], [191, 2, 1, "", "edge_sample"], [192, 2, 1, "", "edge_strip"], [193, 2, 1, "", "edge_vector"], [194, 2, 1, "", "edges"], [195, 2, 1, "", "edges_attribute"], [196, 2, 1, "", "edges_attributes"], [197, 2, 1, "", "edges_on_boundaries"], [198, 2, 1, "", "edges_on_boundary"], [199, 2, 1, "", "edges_where"], [200, 2, 1, "", "edges_where_predicate"], [201, 2, 1, "", "euler"], [202, 2, 1, "", "face_adjacency"], [203, 2, 1, "", "face_adjacency_halfedge"], [204, 2, 1, "", "face_adjacency_vertices"], [205, 2, 1, "", "face_area"], [206, 2, 1, "", "face_aspect_ratio"], [207, 2, 1, "", "face_attribute"], [208, 2, 1, "", "face_attributes"], [209, 2, 1, "", "face_center"], [210, 2, 1, "", "face_centroid"], [211, 2, 1, "", "face_coordinates"], [212, 2, 1, "", "face_corners"], [213, 2, 1, "", "face_curvature"], [214, 2, 1, "", "face_degree"], [215, 2, 1, "", "face_flatness"], [216, 2, 1, "", "face_halfedges"], [217, 2, 1, "", "face_max_degree"], [218, 2, 1, "", "face_min_degree"], [219, 2, 1, "", "face_neighborhood"], [220, 2, 1, "", "face_neighbors"], [221, 2, 1, "", "face_normal"], [222, 2, 1, "", "face_plane"], [223, 2, 1, "", "face_sample"], [224, 2, 1, "", "face_skewness"], [225, 2, 1, "", "face_vertex_after"], [226, 2, 1, "", "face_vertex_ancestor"], [227, 2, 1, "", "face_vertex_before"], [228, 2, 1, "", "face_vertex_descendant"], [229, 2, 1, "", "face_vertices"], [230, 2, 1, "", "faces"], [231, 2, 1, "", "faces_attribute"], [232, 2, 1, "", "faces_attributes"], [233, 2, 1, "", "faces_on_boundaries"], [234, 2, 1, "", "faces_on_boundary"], [235, 2, 1, "", "faces_where"], [236, 2, 1, "", "faces_where_predicate"], [237, 2, 1, "", "flip_cycles"], [238, 2, 1, "", "from_data"], [239, 2, 1, "", "from_json"], [240, 2, 1, "", "from_jsonstring"], [241, 2, 1, "", "from_lines"], [242, 2, 1, "", "from_meshgrid"], [243, 2, 1, "", "from_obj"], [244, 2, 1, "", "from_off"], [245, 2, 1, "", "from_ply"], [246, 2, 1, "", "from_points"], [247, 2, 1, "", "from_polygons"], [248, 2, 1, "", "from_polyhedron"], [249, 2, 1, "", "from_polylines"], [250, 2, 1, "", "from_shape"], [251, 2, 1, "", "from_stl"], [252, 2, 1, "", "from_vertices_and_faces"], [253, 2, 1, "", "genus"], [254, 2, 1, "", "get_any_face"], [255, 2, 1, "", "get_any_vertex"], [256, 2, 1, "", "get_any_vertices"], [257, 2, 1, "", "gkey_key"], [258, 2, 1, "", "gkey_vertex"], [259, 2, 1, "", "halfedge_after"], [260, 2, 1, "", "halfedge_before"], [261, 2, 1, "", "halfedge_face"], [262, 2, 1, "", "halfedge_loop"], [263, 2, 1, "", "halfedge_strip"], [264, 2, 1, "", "has_edge"], [265, 2, 1, "", "has_face"], [266, 2, 1, "", "has_halfedge"], [267, 2, 1, "", "has_vertex"], [268, 2, 1, "", "index_key"], [269, 2, 1, "", "index_vertex"], [270, 2, 1, "", "insert_vertex"], [271, 2, 1, "", "is_closed"], [272, 2, 1, "", "is_connected"], [273, 2, 1, "", "is_edge_on_boundary"], [274, 2, 1, "", "is_empty"], [275, 2, 1, "", "is_face_on_boundary"], [276, 2, 1, "", "is_manifold"], [277, 2, 1, "", "is_orientable"], [278, 2, 1, "", "is_quadmesh"], [279, 2, 1, "", "is_regular"], [280, 2, 1, "", "is_trimesh"], [281, 2, 1, "", "is_valid"], [282, 2, 1, "", "is_vertex_connected"], [283, 2, 1, "", "is_vertex_on_boundary"], [284, 2, 1, "", "join"], [285, 2, 1, "", "key_gkey"], [286, 2, 1, "", "key_index"], [287, 2, 1, "", "merge_faces"], [288, 2, 1, "", "mesh_oriented_bounding_box_numpy"], [289, 2, 1, "", "mesh_oriented_bounding_box_xy_numpy"], [290, 2, 1, "", "normal"], [291, 2, 1, "", "number_of_edges"], [292, 2, 1, "", "number_of_faces"], [293, 2, 1, "", "number_of_vertices"], [294, 2, 1, "", "obb_numpy"], [295, 2, 1, "", "obb_xy_numpy"], [296, 2, 1, "", "quads_to_triangles"], [297, 2, 1, "", "remove_unused_vertices"], [298, 2, 1, "", "sha256"], [299, 2, 1, "", "slice_plane"], [300, 2, 1, "", "smooth_area"], [301, 2, 1, "", "smooth_centroid"], [302, 2, 1, "", "split_edge"], [303, 2, 1, "", "split_face"], [304, 2, 1, "", "split_strip"], [305, 2, 1, "", "subdivide"], [306, 2, 1, "", "summary"], [307, 2, 1, "", "to_data"], [308, 2, 1, "", "to_json"], [309, 2, 1, "", "to_jsonstring"], [310, 2, 1, "", "to_lines"], [311, 2, 1, "", "to_obj"], [312, 2, 1, "", "to_off"], [313, 2, 1, "", "to_ply"], [314, 2, 1, "", "to_points"], [315, 2, 1, "", "to_polygons"], [316, 2, 1, "", "to_polylines"], [317, 2, 1, "", "to_stl"], [318, 2, 1, "", "to_vertices_and_faces"], [319, 2, 1, "", "transform"], [320, 2, 1, "", "transformed"], [321, 2, 1, "", "unify_cycles"], [322, 2, 1, "", "unset_edge_attribute"], [323, 2, 1, "", "unset_face_attribute"], [324, 2, 1, "", "unset_vertex_attribute"], [325, 2, 1, "", "update_default_edge_attributes"], [326, 2, 1, "", "update_default_face_attributes"], [327, 2, 1, "", "update_default_vertex_attributes"], [328, 2, 1, "", "validate_data"], [329, 2, 1, "", "validate_json"], [330, 2, 1, "", "vertex_area"], [331, 2, 1, "", "vertex_attribute"], [332, 2, 1, "", "vertex_attributes"], [333, 2, 1, "", "vertex_coordinates"], [334, 2, 1, "", "vertex_curvature"], [335, 2, 1, "", "vertex_degree"], [336, 2, 1, "", "vertex_edges"], [337, 2, 1, "", "vertex_faces"], [338, 2, 1, "", "vertex_gkey"], [339, 2, 1, "", "vertex_index"], [340, 2, 1, "", "vertex_laplacian"], [341, 2, 1, "", "vertex_max_degree"], [342, 2, 1, "", "vertex_min_degree"], [343, 2, 1, "", "vertex_neighborhood"], [344, 2, 1, "", "vertex_neighborhood_centroid"], [345, 2, 1, "", "vertex_neighbors"], [346, 2, 1, "", "vertex_normal"], [347, 2, 1, "", "vertex_sample"], [348, 2, 1, "", "vertices"], [349, 2, 1, "", "vertices_attribute"], [350, 2, 1, "", "vertices_attributes"], [351, 2, 1, "", "vertices_on_boundaries"], [352, 2, 1, "", "vertices_on_boundary"], [353, 2, 1, "", "vertices_where"], [354, 2, 1, "", "vertices_where_predicate"]], "compas_fd.fd": [[355, 3, 1, "", "fd_constrained_numpy"], [356, 3, 1, "", "fd_numpy"], [357, 3, 1, "", "mesh_fd_constrained_numpy"], [358, 3, 1, "", "mesh_fd_numpy"]], "compas_fd.loads": [[359, 1, 1, "", "SelfweightCalculator"]], "compas_fd.loads.SelfweightCalculator": [[360, 2, 1, "", "face_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "compas_fd": [1, 362, 363], "constraint": [2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "base": 2, "class": [2, 3, 5], "datastructur": 3, "fd": 4, "function": 4, "load": 5, "circleconstraint": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "tostr": [7, 27, 47, 67, 87, 107, 127, 147, 167], "compute_norm": [8, 28, 48, 68, 88, 108, 128, 148], "compute_param": [9, 29, 49, 69, 89, 109, 129, 149], "compute_tang": [10, 30, 50, 70, 90, 110, 130, 150], "copi": [11, 31, 51, 71, 91, 111, 131, 151, 177], "from_data": [12, 32, 52, 72, 92, 112, 132, 152, 238], "from_json": [13, 33, 53, 73, 93, 113, 133, 153, 239], "from_jsonstr": [14, 34, 54, 74, 94, 114, 134, 154, 240], "get_constraint_cl": [15, 35, 55, 75, 95, 115, 135, 155], "project": [16, 36, 56, 76, 96, 116, 136, 156], "regist": [17, 37, 57, 77, 97, 117, 137, 157], "sha256": [18, 38, 58, 78, 98, 118, 138, 158, 298], "to_data": [19, 39, 59, 79, 99, 119, 139, 159, 307], "to_json": [20, 40, 60, 80, 100, 120, 140, 160, 308], "to_jsonstr": [21, 41, 61, 81, 101, 121, 141, 161, 309], "updat": [22, 42, 62, 82, 102, 122, 142, 162], "update_location_at_param": [23, 43, 63, 83, 103, 123, 143, 163], "validate_data": [24, 44, 64, 84, 104, 124, 144, 164, 328], "validate_json": [25, 45, 65, 85, 105, 125, 145, 165, 329], "curveconstraint": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "frameconstraint": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "lineconstraint": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "planeconstraint": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "surfaceconstraint": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "vectorconstraint": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "cablemesh": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "add_fac": 168, "add_vertex": 169, "area": 170, "bounding_box": 171, "bounding_box_xi": 172, "centroid": 173, "clear": 174, "collapse_edg": 175, "connected_compon": 176, "cull_vertic": 178, "delete_fac": 179, "delete_vertex": 180, "dual": 181, "edge_attribut": [182, 183], "edge_coordin": 184, "edge_direct": 185, "edge_fac": 186, "edge_length": 187, "edge_loop": 188, "edge_midpoint": 189, "edge_point": 190, "edge_sampl": 191, "edge_strip": 192, "edge_vector": 193, "edg": 194, "edges_attribut": [195, 196], "edges_on_boundari": [197, 198], "edges_wher": 199, "edges_where_pred": 200, "euler": 201, "face_adjac": 202, "face_adjacency_halfedg": 203, "face_adjacency_vertic": 204, "face_area": 205, "face_aspect_ratio": 206, "face_attribut": [207, 208], "face_cent": 209, "face_centroid": 210, "face_coordin": 211, "face_corn": 212, "face_curvatur": 213, "face_degre": 214, "face_flat": 215, "face_halfedg": 216, "face_max_degre": 217, "face_min_degre": 218, "face_neighborhood": 219, "face_neighbor": 220, "face_norm": 221, "face_plan": 222, "face_sampl": 223, "face_skew": 224, "face_vertex_aft": 225, "face_vertex_ancestor": 226, "face_vertex_befor": 227, "face_vertex_descend": 228, "face_vertic": 229, "face": 230, "faces_attribut": [231, 232], "faces_on_boundari": [233, 234], "faces_wher": 235, "faces_where_pred": 236, "flip_cycl": 237, "from_lin": 241, "from_meshgrid": 242, "from_obj": 243, "from_off": 244, "from_pli": 245, "from_point": 246, "from_polygon": 247, "from_polyhedron": 248, "from_polylin": 249, "from_shap": 250, "from_stl": 251, "from_vertices_and_fac": 252, "genu": 253, "get_any_fac": 254, "get_any_vertex": 255, "get_any_vertic": 256, "gkey_kei": 257, "gkey_vertex": 258, "halfedge_aft": 259, "halfedge_befor": 260, "halfedge_fac": 261, "halfedge_loop": 262, "halfedge_strip": 263, "has_edg": 264, "has_fac": 265, "has_halfedg": 266, "has_vertex": 267, "index_kei": 268, "index_vertex": 269, "insert_vertex": 270, "is_clos": 271, "is_connect": 272, "is_edge_on_boundari": 273, "is_empti": 274, "is_face_on_boundari": 275, "is_manifold": 276, "is_orient": 277, "is_quadmesh": 278, "is_regular": 279, "is_trimesh": 280, "is_valid": 281, "is_vertex_connect": 282, "is_vertex_on_boundari": 283, "join": 284, "key_gkei": 285, "key_index": 286, "merge_fac": 287, "mesh_oriented_bounding_box_numpi": 288, "mesh_oriented_bounding_box_xy_numpi": 289, "normal": 290, "number_of_edg": 291, "number_of_fac": 292, "number_of_vertic": 293, "obb_numpi": 294, "obb_xy_numpi": 295, "quads_to_triangl": 296, "remove_unused_vertic": 297, "slice_plan": 299, "smooth_area": 300, "smooth_centroid": 301, "split_edg": 302, "split_fac": 303, "split_strip": 304, "subdivid": 305, "summari": 306, "to_lin": 310, "to_obj": 311, "to_off": 312, "to_pli": 313, "to_point": 314, "to_polygon": 315, "to_polylin": 316, "to_stl": 317, "to_vertices_and_fac": 318, "transform": [319, 320], "unify_cycl": 321, "unset_edge_attribut": 322, "unset_face_attribut": 323, "unset_vertex_attribut": 324, "update_default_edge_attribut": 325, "update_default_face_attribut": 326, "update_default_vertex_attribut": 327, "vertex_area": 330, "vertex_attribut": [331, 332], "vertex_coordin": 333, "vertex_curvatur": 334, "vertex_degre": 335, "vertex_edg": 336, "vertex_fac": 337, "vertex_gkei": 338, "vertex_index": 339, "vertex_laplacian": 340, "vertex_max_degre": 341, "vertex_min_degre": 342, "vertex_neighborhood": 343, "vertex_neighborhood_centroid": 344, "vertex_neighbor": 345, "vertex_norm": 346, "vertex_sampl": 347, "vertic": 348, "vertices_attribut": [349, 350], "vertices_on_boundari": [351, 352], "vertices_wher": 353, "vertices_where_pred": 354, "fd_constrained_numpi": 355, "fd_numpi": 356, "mesh_fd_constrained_numpi": 357, "mesh_fd_numpi": 358, "selfweightcalcul": [359, 360], "face_matrix": 360, "exampl": 361, "get": 363, "start": 363, "creat": 363, "an": 363, "environ": 363, "activ": 363, "clone": 363, "instal": 363, "verifi": 363, "rhino": 363, "ui": 363, "licens": 364, "tutori": 365}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})